<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>使用SplashScreen实现闪屏页</title>
    <url>/post/547b7b56.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>水篇小文章</p>
</blockquote>
<p>一般我们实现闪屏页是通过自定义主题的<code>windowBackground</code>，然后在主页恢复正常主题。</p>
<p>而在Android12上，谷歌对闪屏页支持了更多特性（如动画Drawable等）。</p>
<p>并因此在Jetpack中引入了新成员——SplashScreen。</p>
<p>使用该库可以非常简单的实现闪屏页，并完成大部分Android版本的兼容。</p>
<h2 id="API-文档"><a href="#API-文档" class="headerlink" title="API 文档"></a>API 文档</h2><p> <a href="https://developer.android.com/reference/kotlin/androidx/core/splashscreen/SplashScreen#setKeepOnScreenCondition(androidx.core.splashscreen.SplashScreen.KeepOnScreenCondition">SplashScreen  |  Android Developers</a> )</p>
<blockquote>
<p>其实文档里的描述非常清晰。</p>
</blockquote>
<h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">implementation <span class="string">&quot;androidx.core:core-splashscreen:1.0.0-beta01&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h2><h3 id="步骤1：定制-themes"><a href="#步骤1：定制-themes" class="headerlink" title="步骤1：定制 themes"></a>步骤1：定制 themes</h3><p> 改为继承 <code>Theme.SplashScreen.*</code>，一般Icon背景可以使用<code>&quot;Theme.SplashScreen.IconBackground&quot;</code><br> <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Theme.Calendar_manager&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;Theme.SplashScreen.IconBackground&quot;</span>&gt;</span>  </span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;postSplashScreenTheme&quot;</span>&gt;</span>@style/Theme.Material3.DayNight<span class="tag">&lt;/<span class="name">item</span>&gt;</span>  </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;windowSplashScreenBackground&quot;</span>&gt;</span>@android:color/background_light<span class="tag">&lt;/<span class="name">item</span>&gt;</span>  </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;windowSplashScreenAnimatedIcon&quot;</span>&gt;</span>@mipmap/ic_launcher_foreground<span class="tag">&lt;/<span class="name">item</span>&gt;</span>  </span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="步骤2：将-application-或者启动页-theme-改为该-theme"><a href="#步骤2：将-application-或者启动页-theme-改为该-theme" class="headerlink" title="步骤2：将 application 或者启动页 theme 改为该 theme"></a>步骤2：将 application 或者启动页 theme 改为该 theme</h3><h3 id="步骤3：启动页-onCreate-前调用-installSplashScreen"><a href="#步骤3：启动页-onCreate-前调用-installSplashScreen" class="headerlink" title="步骤3：启动页 onCreate 前调用 installSplashScreen()"></a>步骤3：启动页 onCreate 前调用 installSplashScreen()</h3> <figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">installSplashScreen()  </span><br><span class="line"><span class="keyword">super</span>.onCreate(savedInstanceState)</span><br></pre></td></tr></table></figure>
<h2 id="进阶使用"><a href="#进阶使用" class="headerlink" title="进阶使用"></a>进阶使用</h2><h3 id="延长展示时间"><a href="#延长展示时间" class="headerlink" title="延长展示时间"></a>延长展示时间</h3><p>可以使用<strong>KeepOnScreenCondition</strong> api 进行设置：<br><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">SplashScreen.KeepOnScreenCondition &#123;  </span><br><span class="line">    <span class="keyword">return</span><span class="symbol">@KeepOnScreenCondition</span> SystemClock.elapsedRealtime() - App.appCreateTime &lt;= <span class="number">150</span>  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="简单示例"><a href="#简单示例" class="headerlink" title="简单示例"></a>简单示例</h2><p><a href="https://github.com/Ayagikei/calendar-account-manager/pull/5/commits/b930c4202ffbf3ca442db7c55c78970100376c3b">Feature 1.1.0 material you by Ayagikei · Pull Request #5 · Ayagikei/calendar-account-manager (github.com)</a></p>
]]></content>
      <categories>
        <category>技术</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>人升三周年</title>
    <url>/post/55076597.html</url>
    <content><![CDATA[<p>时光荏苒，距离首次发布《人升》并在 V2EX 宣传已经过去了 3 年。</p>
<p>未曾想过当时在学校创建的小项目，能达到现在的小小高度。</p>
<p><br/></p>
<p>想着，三周年做一些简单的回顾和展望。</p>
<p>匆忙编写，未作充分的准备，可能叙述的也比较水~</p>
<p><br/></p>
<p>三周年之际，《人升》在各个市场的下载总和也大概超过了100W下载量（含有大量更新水分）。</p>
<p>今年7月份，也有幸自荐登上了Google Play英美各区首页的「近期更新」模块。</p>
<p>后续明年年初也跟 Google 可能会有另一个小合作（</p>
<p><br/></p>
<p>也从最初的默默无闻，到陆陆续续从一些自媒体或者用户宣传中，看到《人升》的影子。</p>
<p>很是欣慰。</p>
<p><br/></p>
<hr>
<h2 id="开发历程"><a href="#开发历程" class="headerlink" title="开发历程"></a>开发历程</h2><h3 id="1-总时间线"><a href="#1-总时间线" class="headerlink" title="1. 总时间线"></a>1. 总时间线</h3> <img src="/post/55076597/image-20211122210917046.png" class="">
<p>这是《人升》较大的功能模块迭代时间线。</p>
<p>其中还持续穿插着诸多的功能小特性、优化、问题修复，代码重构和 UI 优化等工作。</p>
<p>感兴趣的同学也可以查看我们详细的<a href="https://wiki.lifeupapp.fun/zh-cn/#/introduction/release_log">更新日志</a>。</p>
<p><br/></p>
<p>接下来想按时间顺序讲下《人升》开发阶段的相关时间节点事件。</p>
<p><br/></p>
<h3 id="2-梦始"><a href="#2-梦始" class="headerlink" title="2. 梦始"></a>2. 梦始</h3><h4 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a><strong>缘由</strong></h4><p>于我个人而言，一直想要一款<strong>比较简洁、支持离线使用</strong>的游戏化To-do应用，不需要繁琐的游戏化配置、小游戏。</p>
<p>因为我当时主用的ToDo应用是《微软ToDo》，所以可能更恰当的一句话需求就是：微软ToDo+属性等级。</p>
<p><br/></p>
<p>恰逢一场校内的易班应用开发比赛（只要是支持易班登录的即可），拉上了一位后端同学开始了开发。</p>
<blockquote>
<p>这就是支持易班登录的原因~</p>
</blockquote>
<p><br/></p>
<p>在开发《人升》之前，其实也只有一个书单列表的小demo的开发经验。</p>
<p><strong>开发当时，也有一个比较重要的决策：</strong></p>
<p>在完全不会的场景下，就逼着自己使用 Kotlin 进行开发（也是后端同学的建议）。</p>
<p><br/></p>
<h4 id="最初的需求思维导图"><a href="#最初的需求思维导图" class="headerlink" title="最初的需求思维导图"></a><strong>最初的需求思维导图</strong></h4> <img src="/post/55076597/image-20211122230704298.png" class="">
<p><br/></p>
<p>因为只有一两个月的开发时间，当时版本很粗糙。</p>
<p>但也初备了「待办事项」、「属性」、「团队」等功能。</p>
<p>「技能」和「成就」应该是鸽了。</p>
<blockquote>
<p>因为技能的定义冲突问题，一直搁置到近期，才以属性自定义的形式进行呈现。</p>
</blockquote>
<p><br/></p>
<h4 id="起名"><a href="#起名" class="headerlink" title="起名"></a><strong>起名</strong></h4><p>当时想着应用的理念为「人生升级」之类的词汇，</p>
<p>就取了「人生」的谐音「人升」。英文名则是对应的「LifeUp」。</p>
<p><br/></p>
<h4 id="开发"><a href="#开发" class="headerlink" title="开发"></a><strong>开发</strong></h4><blockquote>
<p>你永远想不到开发会先开发什么功能.jpg</p>
</blockquote>
<ol>
<li>先用 Inkscape 设计了应用图标</li>
<li>然后开发了引导页</li>
<li>多语言（部分英文化）</li>
<li>首页框架</li>
<li>登录页面</li>
<li>…</li>
</ol>
<p><br/></p>
<h4 id="避免影响"><a href="#避免影响" class="headerlink" title="避免影响"></a><strong>避免影响</strong></h4><p>游戏化部分，我们尽量避免着受已有应用的影响。</p>
<p>想靠着自己的见解开发一款与众不同的游戏化应用。</p>
<p>其中初始属性的定义，也参考了不少游戏的设置（比如Fallout系列的SPECIAL系统）。</p>
<p><br/></p>
<h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h4><p>由于不擅拉票，易班这次比赛还次于某个无法正常使用的失物招领应用。</p>
<p>简单略过描述。</p>
<p><br/></p>
<h3 id="3-初次发布"><a href="#3-初次发布" class="headerlink" title="3. 初次发布"></a>3. 初次发布</h3><h4 id="上架酷安"><a href="#上架酷安" class="headerlink" title="上架酷安"></a>上架酷安</h4><p>易班比赛结束不久后，校内又举办了一场由<em>PeroPero Games</em>（就是那个开发了Muse Dash的工作室，蹭个热度）赞助的游戏和应用开发比赛。</p>
<p>我们就计划着完善《人升》，再次参加比赛。</p>
 <img src="/post/55076597/image-20211122232759360.png" class="">
<p>为了让应用的表现更有说服力，我们将应用发布到了酷安，也方便评委/观众进行下载。</p>
<p><br/></p>
<p>就是下面这个惨淡的数据：</p>
 <img src="/post/55076597/image-20211122234256248.png" class="">
<p><br/></p>
<p>这时的应用版本，为了实现更多的趣味功能，也增加了一个非常简陋的成就系统（与现在版本的成就完全没资格比对），以及“臭名昭著”的计步奖励力量经验值。</p>
 <img src="/post/55076597/image-20211122234622801.png" class="">
<p><br/></p>
<h4 id="比赛答辩"><a href="#比赛答辩" class="headerlink" title="比赛答辩"></a>比赛答辩</h4><p>吸取了一些上次比赛答辩的经验教训，这次将答辩展示的关注点聚焦在了应用本身的趣味性（而非技术实现上）。</p>
<p>有个有趣的小插曲，当时的评委其实是分为游戏组和应用组的。但由于《人升》是<code>游戏化</code>应用，我们也很神奇地被<em>PeroPero Games</em>创始人之一的师兄提问。</p>
<p><br/></p>
<p>我们也将应用在 V2EX 发了帖子进行简单的宣传，当时来了一波 V2 老哥在酷安留言，也算是我们的种子用户了。</p>
<p>但其实在答辩的时候，总的下载数应该寥寥于100左右。（现在终于可以乘个万了）。</p>
<p>这次，也终于拿下了第一。</p>
<p><br/></p>
<h3 id="4-酷安头条"><a href="#4-酷安头条" class="headerlink" title="4. 酷安头条"></a>4. 酷安头条</h3><p>赛后一段时间内，我们也在纠结如何处置这款应用。</p>
<p>如果没有用户的话，更新也就缺失了动力。</p>
<p><br/></p>
<p>当时就是打算发布个摸鱼公告（短期内时间不够维护，长期会做这些功能）的心态，在酷安发布了一份简单的后续开发计划。</p>
<p>这份开发计划如今看来是十分不靠谱的，比如聚焦在阅读记录统计等功能上。</p>
<p><br/></p>
<p>完全想不到的是，这份公告居然被酷安小编推到了首页头条（万恶之源）。</p>
<p>《人升》的评论区也在一天内被一两百条评论淹没，即便当时的应用基础功能都不够完备、游戏化元素更是严重缺失。</p>
<p><br/></p>
<p>然后，我们也是从那时候发现，当时的版本居然不兼容安卓9。</p>
<p>在安卓9上，应用无法联网。</p>
<p>因为当时的设备是安卓8，无法复现问题。</p>
<p><strong>排查了好一段时间，才发现是安卓9默认禁止了htt</strong>p访问…</p>
<blockquote>
<p>现在看来是大乌龙了（</p>
</blockquote>
<p><br/></p>
<p>也是因为涌入的用户和鼓励，我们持续着完善着应用的基础功能。</p>
<p>当时主要的游戏化体现仍然仅仅有「属性」，但这已经足以实现一部分激励作用了。</p>
<p><br/></p>
<h3 id="5-更高一步的游戏化"><a href="#5-更高一步的游戏化" class="headerlink" title="5. 更高一步的游戏化"></a>5. 更高一步的游戏化</h3> <img src="/post/55076597/screely-1637596991807.png" class="">
<p>19年4月份，我们将应用完整英文化后，发布到了 Google Play。</p>
<blockquote>
<p>在当今看来，这无疑是最正确的重要决策之一。</p>
</blockquote>
<p><br/></p>
<p>因为Google Play上，不允许免费应用转为付费。</p>
<p>我们将《人升》设置为了买断制付费应用，19年4月份上架后，也陆陆续续有零星的海外用户使用。</p>
<p><br/></p>
<p>其中，上图中的评论，为我们指明了开发方向。</p>
<p>当时，我虽然知道有类似的奖励机制的应用，但未曾试用。</p>
<p>也凭借着自己的理解，在8月份的版本中发布了「商店-仓库-金币」功能。</p>
 <img src="/post/55076597/screely-1637599616422.png" class="">
<p><br/></p>
<p>该功能无疑是当今人升中最为重要的功能之一。</p>
<blockquote>
<p>但商店的理念与属性其实并不一致，但又不矛盾。</p>
<p>属性其实讲究的是开箱即用，用户完全不需要任何设置即可体验经验值增长和升级。</p>
<p>而商品则是对应自我奖励，需要个性化配置。</p>
<p>但在人升中，它们同属于激励机制，而且有着诸多的联动机制。</p>
</blockquote>
<p><br/></p>
<p>直至19年末，人升已经有了初具雏形的属性和金币体系了，还有个系统成就模块。</p>
<p><br/></p>
<h3 id="6-篡改"><a href="#6-篡改" class="headerlink" title="6. 篡改"></a>6. 篡改</h3><p>当时，《人升》是开源的，我们希望能够由开源社区进行代码贡献和维护（如Habitca的客户端一样）。</p>
<p>但没想到，换来的只有一些篡改版本。</p>
<p>后续只能将其闭源，并且争取登录各个应用市场。</p>
<p><br/></p>
<h3 id="7-实验功能（20年）"><a href="#7-实验功能（20年）" class="headerlink" title="7. 实验功能（20年）"></a>7. 实验功能（20年）</h3> <img src="/post/55076597/image-20211123003533987.png" class="">
<p>20年（中旬准备毕设摸了一阵子），我们则是推出了一系列实验功能和功能完善：</p>
<ul>
<li>简洁模式</li>
<li>感想</li>
<li>自定义成就和解锁条件支持</li>
<li>番茄钟</li>
<li>商品使用效果</li>
<li>开箱</li>
<li>世界橱窗</li>
</ul>
<p>也终于灭绝了<code>商品无用论</code>。</p>
<p><br/></p>
<p>也是在20年中下旬，我们“被逼着”上线了会员系统。</p>
<p>此前，人升一直是完全免费+自愿捐赠。</p>
<p>用爱发电不可长取，营收也可以带来持续的动力。</p>
<p><br/></p>
<h3 id="8-标准化和基础建设（21年）"><a href="#8-标准化和基础建设（21年）" class="headerlink" title="8. 标准化和基础建设（21年）"></a>8. 标准化和基础建设（21年）</h3><p>今年，我们也持续维护着各个功能模块：</p>
<ul>
<li>开箱功能完善（连开、固定）</li>
<li>合成系统</li>
<li>属性自定义</li>
<li>正计时</li>
</ul>
<p><br/></p>
 <img src="/post/55076597/screely-1637602624676.png" class="">
<p><br/></p>
<p>除应用功能外，也搭建了：</p>
<ul>
<li>新官网</li>
<li>文档网站</li>
<li>新宣传视频</li>
<li>服务器升级和迁移</li>
<li>自动化打包</li>
<li>静态代码扫描</li>
<li>YouTrack需求和问题管理</li>
<li>新宣传图</li>
</ul>
<hr>
<h2 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h2><p>随便提一些个人感想和碎碎念，时间有限未作充分思考。</p>
<p><br/></p>
<h3 id="1-接受称赞、反思吐槽、忽略噪声"><a href="#1-接受称赞、反思吐槽、忽略噪声" class="headerlink" title="1. 接受称赞、反思吐槽、忽略噪声"></a>1. 接受称赞、反思吐槽、忽略噪声</h3><p>称赞就不用多说了~</p>
<p>从吐槽中，我们也能发掘一些需求和优化点，比如是否是指引不到位、交互不合理等等。</p>
<p><br/></p>
<p>关于噪声，可以理解为毫无意义的批评。</p>
<blockquote>
<p>“噪声”的说法也是来自某篇独立开发相关的译文。</p>
</blockquote>
<p>印象最深刻的是，有一位会员，三番两次通过多种渠道付款后，在同一天内找个奇怪的理由退款（比如“清单”不支持连续创建）。</p>
<p>后来退款时发现该用户行为不正常，可能涉及诈骗等，后续就直接不发送兑换码而是退款了。</p>
<p><br/></p>
<p>与此类似的，也有某市场评论区</p>
<blockquote>
<p>应用内以前有个很好玩的小游戏，后面被砍了</p>
</blockquote>
<p>我都不知道我开发了小游戏.jpg</p>
<p><br/></p>
<p>甚至于经常会有经验主义者，</p>
<p>「这种机制火不起来、这种收费模式不会有用户的、要做押金制」等等。</p>
<p>学会忽略即可~</p>
<p>市场是公平的，交给市场做评判。</p>
<p><br/></p>
<h3 id="2-关注中短期规划"><a href="#2-关注中短期规划" class="headerlink" title="2. 关注中短期规划"></a>2. 关注中短期规划</h3><p>因为《人升》这款应用的特殊性，中短期灵活的规划可能更适合它。</p>
<p>随便举两个简单的例子：</p>
 <img src="/post/55076597/screely-1637599820574.png" class="">
<ol>
<li><p>当初开发番茄钟的时候，直到功能开发完了一大半。才灵光一闪，加上了番茄食用的设定。</p>
</li>
<li><p>开发商品使用效果的时候，也是直到最终阶段，才想到了合成机制这个比较有趣的玩法。</p>
<p>后续更是将合成做成了独立的系统。</p>
</li>
</ol>
<p><br/></p>
<h3 id="3-看重可维护性"><a href="#3-看重可维护性" class="headerlink" title="3. 看重可维护性"></a>3. 看重可维护性</h3><p>一款需要长期更新维护的应用，可维护性是至关重要的。</p>
<p>我们在开发《人升》的过程中，也一直在推陈出新，调研新的技术框架，一步步从MVC -&gt; MVP -&gt; MVVM。</p>
<p>一些老且需要增添功能的页面，我们也抽空进行了重构（统计、新建任务、任务列表页面、状态页面等等）。</p>
<p><br/></p>
<p>这些时间的投入，也是为了减少未来的债务。</p>
<blockquote>
<p>不要偿还过去，不要透支未来。</p>
</blockquote>
<p><br/></p>
<h3 id="4-想法与表达之前注定存在失真"><a href="#4-想法与表达之前注定存在失真" class="headerlink" title="4. 想法与表达之前注定存在失真"></a>4. 想法与表达之前注定存在失真</h3><p>如同我们最初的思维导图也未能完成实现一样。</p>
<blockquote>
<p>其实我们更早期的构想，也存在着人物系统。</p>
</blockquote>
<p>一款产品的构思和最终实现，终究会存在不少的失真。</p>
<p>原因可能有平台限制、时间限制、技术水平限制等等。</p>
<p><br/></p>
<p>想法并不值钱。</p>
<p>对表达失真的取舍，可能才是价值点所在。</p>
<p><br/></p>
<hr>
<h2 id="表现"><a href="#表现" class="headerlink" title="表现"></a>表现</h2><h3 id="1-国际化"><a href="#1-国际化" class="headerlink" title="1. 国际化"></a>1. 国际化</h3> <img src="/post/55076597/screely-1637590852247.png" class="">
 <img src="/post/55076597/screely-1637592721932.png" class="">
<p>虽然当前人升海外的用户总量不多，但用户还是遍及各个国家地区。</p>
<p>多语言方面，我们初始维护着简繁体中文和英文。</p>
<p>其余语言由用户参与贡献和润色，也有着不俗的翻译进度。</p>
<h3 id="2-海外市场营收"><a href="#2-海外市场营收" class="headerlink" title="2. 海外市场营收"></a>2. 海外市场营收</h3> <img src="/post/55076597/screely-1637600328251.png" class="">
<p>随着7月份上了一波英美区首页，海外市场表现很惊人。</p>
<p>之后的几个月也是平稳了下来。</p>
<p>我们也相信这一次的高度，更不会是顶峰，只是个山腰或者山脚~</p>
<h3 id="3-市场排名"><a href="#3-市场排名" class="headerlink" title="3. 市场排名"></a>3. 市场排名</h3> <img src="/post/55076597/screely-1637600619817.png" class="">
 <img src="/post/55076597/screely-1637600639859.png" class="">
<p><br/></p>
<p>在限定「效率」类的「热门付费」（这里的付费指的是付费应用，其实属于蓝海了）的条件下，</p>
<p><strong>《人升》能在美区以及其他84个国家或地区保持着排名前5的水准。</strong></p>
<hr>
<h2 id="展望"><a href="#展望" class="headerlink" title="展望"></a>展望</h2><h3 id="1-标准化"><a href="#1-标准化" class="headerlink" title="1. 标准化"></a>1. 标准化</h3><p>回顾前一段时间，其实《人升》的功能迭代导致的问题一直都很多。</p>
<p>也有一些比较严重的：</p>
<ul>
<li>低版本手机启动崩溃</li>
<li>服务端慢查询导致年初经常宕机</li>
<li>商品排序导致商品被复制</li>
<li>谷歌新账户登录不了</li>
</ul>
<p>曾经有一些系列版本中的小版本号迭代到了16。</p>
<p><br/></p>
<p>因为这些问题，曾经尝试了一些手段（会员alpha测试、发包周期调整、自测用例），但因为人力问题，还是不能很好地解决。</p>
<p>今年下旬，成功邀请了一位非常非常优秀的测试同学加入了团队。</p>
<p>协助测试和搭建了很多相关的东西（自动化打包、静态代码分析等等），使得近期的一些版本发布周期很稳定。</p>
 <img src="/post/55076597/screely-1637602317724.png" class="">
 <img src="/post/55076597/screely-1637601221026.png" class="">
<p>虽然拉长了初期版本的发布周期，但是算上原先的修复发布而言，总周期无疑是缩短了的。</p>
<p>甚至参与了一些功能的开发。</p>
 <img src="/post/55076597/screely-1637602205995.png" class="">
<p><strong>作为一款有多达 2400 次代码提交的离线化工具类应用，稳定性是至关重要的。</strong></p>
<p>后续也会在注重稳定性的前提下进行功能迭代开发。</p>
<p><br/></p>
<h3 id="2-跨平台"><a href="#2-跨平台" class="headerlink" title="2. 跨平台"></a>2. 跨平台</h3><p>iOS 版本是个巨大的痛点。</p>
<p>困于技术水平、时间和增量同步难以解决的情况，一直很难尝试进行 iOS 版本的开发。</p>
 <img src="/post/55076597/screely-1637603005771.png" class="">
<p>虽然今年建了 Flutter 版本仓库，但仍没时间学习和进行开发。</p>
<p>后续计划是在 Flutter 上进行一些革新功能的实现和 UI 的重新设计（人升2.0？）</p>
<p><br/></p>
<h3 id="3-开放"><a href="#3-开放" class="headerlink" title="3. 开放"></a>3. 开放</h3><p>除了普通的功能迭代外，</p>
<p>我们会尝试在后续版本中开放一些客户端接口（比如新建任务、增减金币、增删商品）。</p>
<p>以便用户也能够在外部扩展实现一些功能。</p>
<p><br/></p>
<h3 id="4-做时间的朋友"><a href="#4-做时间的朋友" class="headerlink" title="4. 做时间的朋友"></a>4. 做时间的朋友</h3> <img src="/post/55076597/screely-1637602439966.png" class="">
<p>《人升》尚且仍有大量需要改进和维护的点，我们会做时间的朋友，持续维护和更新。</p>
<p>定个小目标，明年《人升》排名前5的数量保持不变或增长的前提下，能减少一个限定条件（在85个国家或地区的热门付费类的所有应用排名前5）。</p>
<p><br/></p>
<p>《人升》仍是由三名开发人员在业余时间进行维护。</p>
<p>这里的开发也是泛义，目前开发人员都是身兼数职的（所以英文版里的关于页面，将<code>developers</code>改为了<code>designers</code>）。</p>
<blockquote>
<p>实际上一款产品的诞生，需要产品、设计、交互、客户端开发、后端开发、测试、运维、市场发布、运营等诸多职位的参与。</p>
<p>看起来满当当的半个月，我们的实际可开发时长可能不足4天。</p>
<p>但可以肯定的一点是，我们会坚持下去（因为还有很多活没干完~）。</p>
</blockquote>
<hr>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>比较遗憾的是三周年没有做充分的准备，今年公众号也断更了一年。</p>
<p>应用内有比较多的设计理念、一些细节改动都没机会在本文涉及。</p>
<p>后续有机会可能会以独立文章的形式发布更多内容，感谢关注~</p>
<p><br/></p>
<p>感谢用户们的长期理解和支持！</p>
<p>希望人升能随着优秀的用户们一起升级成长~</p>
<blockquote>
<p>也欢迎参与人升的共建。</p>
</blockquote>
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
        <tag>更新介绍</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-2021杂谈</title>
    <url>/post/a367d2ae.html</url>
    <content><![CDATA[<p>断更了很久。</p>
<p>试试随便写点东西，一两年内的回顾和感触杂谈，可能含有<strong>非常主观</strong>的看法。</p>
<p><br /></p>
<h2 id="2020-回顾"><a href="#2020-回顾" class="headerlink" title="2020 回顾"></a>2020 回顾</h2><h3 id="Completed"><a href="#Completed" class="headerlink" title="Completed"></a>Completed</h3><p><strong>🔹 回归工作（2020年初）</strong></p>
<p>2020年初，曾经非常担心，回归工作后，无法适应工作的内容，或者说没法胜任。</p>
<p>但实际情况则不然，虽然当时非常不熟悉业务开发。仍然在3-4月尝试参与了新项目的初始开发，负责了大部分页面的业务逻辑和编写。</p>
<p>即便现在看来有很多可以改进的点（比如连自定义View都没封装好），但就当时远程办公+初次真正接触业务项目而言，还是可以接受的。</p>
<p>（甚至一度想继续呆在业务开发）</p>
<p><strong>🔸 租房生活（2020年初）</strong></p>
<p>一个人的感觉大概也没那么糟。</p>
<p><strong>🔸 莫名其妙完成了毕设和答辩（2020年6月左右）</strong></p>
<p>按照原始设想，其实计划是模仿人升，使用全新的架构（MVVM、Room、Jetpack那一套玩意）和页面设计。</p>
<p>结果实际情况是，时间过得太快，页面也就重写了两个（登录和新建任务）。</p>
<p>最后不得已，还是复制了人升的代码，进行修改。</p>
<p>后端则是重新尝试了 Spring Boot + Kotlin做了一些简单接口。</p>
<p>论文修修改改，恍惚之间也通过了答辩。</p>
<p><strong>🔸 毕业（2020年6月左右）</strong></p>
<p>正处疫情当时，辅导员远程会议、远程寄送毕业证书。</p>
<p>一天回校收拾行李。</p>
<p>没有毕业服和仪式，稍感遗憾。</p>
<p><strong>🔹 真正入职（2020年7月-12月）</strong></p>
<p>那段时间是比较常规的打工内容。</p>
<p>除此之外，也有毛病：</p>
<p>逐渐有些安于现状，缺少自制（甚至体重也涨了起来，体检也被警告）。</p>
<p>职级评定什么的其实也不是特殊在乎，摸鱼过去（ </p>
<a id="more"></a>
<h2 id="2021-回顾"><a href="#2021-回顾" class="headerlink" title="2021  回顾"></a>2021  回顾</h2><h3 id="Completed-1"><a href="#Completed-1" class="headerlink" title="Completed"></a>Completed</h3><p><strong>🔸 建设新的人升官网、文档库</strong></p>
<p>ICP 备案、域名购买、docsify 搭建、七牛云、CDN解析配置</p>
<p><strong>🔸 尝试改变（3月-10月） </strong></p>
<p>在那段黑暗的加班时间内，突然得知被人默默关注的感觉真好。</p>
<p>从那时起，就打算先进行一定程度的自我提升，先从体重控制做起。如果体重都没法自制，谈何自我提升和努力。</p>
<blockquote>
<p>从3月中旬起，半年时间也成功减重15。大体算是成功了。</p>
</blockquote>
<p>另一点想改变的是休息时间和早起，但还是太难了（</p>
<p>–</p>
<p>也尝试过曾经不太敢动手的事情，</p>
<ul>
<li><p>加入用户自建的Q群，”招安”维护；</p>
</li>
<li><p>主动邀请；</p>
</li>
</ul>
<p>…</p>
<p><strong>🔸 5月上海之旅</strong></p>
<ul>
<li>shaoqian</li>
<li>高达！</li>
<li>薄荷咖啡！</li>
</ul>
<p><strong>🔹 主导多次方案设计和开发</strong></p>
<p>虽然很烧脑，但确实接触到了很多架构设计方面的知识点。</p>
<p>也抽出了一些时间查看优秀的开源库源码。</p>
<p><strong>🔸 登上 Google Play 英美区首页（7月1号）</strong></p>
<p>跟 Google 对接介绍自己的更新亮点、修复 Google 体验官提出的问题。</p>
<h2 id="杂谈"><a href="#杂谈" class="headerlink" title="杂谈"></a>杂谈</h2><h3 id="🔹-经验主义-方法论"><a href="#🔹-经验主义-方法论" class="headerlink" title="🔹 经验主义/方法论"></a>🔹 经验主义/方法论</h3><p>近期经常看到一些唯方法论的想法或是讨论：</p>
<ul>
<li>我看过一本书（或者是某某理论），里面说XX是不行的，所以XX一定是行不通的。</li>
<li>或者只凭经验对某些创新想法进行抨击</li>
<li>…（实在想不到原话了）</li>
</ul>
<p>方法论在工程学中是行之有效的：比如编程领域，使用某某写法，能够带来的好处，是能够量化说明的。</p>
<blockquote>
<p>但也不一定是最佳实践。</p>
</blockquote>
<p>但在产品领域，经验就只是对既往成功的归纳总结。</p>
<p>成功是无法复刻，一款产品即使内容完全不变，可能也会因为诞生在不同的时代，获得完全不同的反响。</p>
<p>在这种场景下，唯经验主义就显得很可笑了，不如反问一句：</p>
<blockquote>
<p>你们调研分析做得这么好，成功的产品一定很多吧~</p>
</blockquote>
<p><strong>实践才是检验真理的唯一标准。</strong></p>
<p>在产品领域，市场也是非常公平的。</p>
<p>如果用户说好，哪容得经验主义者说不好。</p>
<blockquote>
<p><strong>做个行动主义者，别做方法收集家。</strong></p>
</blockquote>
<h3 id="🔸-上进"><a href="#🔸-上进" class="headerlink" title="🔸 上进"></a>🔸 上进</h3><p>很容易将接触到的人简单划分为：上进和非上进（摸鱼）两类，以及一部分经验老道到无法短时间判断的。</p>
<p>一些很优秀的人，即便经验不足，也没法掩盖他们的上进。</p>
<p>同理，那些有一定经验却不上进者，对接起来却是尤为难受；感觉仅仅是勉强完成工作罢了。</p>
<p>–</p>
<p>比如曾经跟某位开发短暂对接，因为他对一些代码封装有一定的理解，我们也经常跨部门沟通交流技术方面的问题。</p>
<p>以及忍不住夸赞的测试同学。</p>
<p>–</p>
<p>但同时，也遇到过某些负责人。</p>
<p>表述不清、对接困难、数年工作毫无长进、带的团队也完全没有规范流程可言。</p>
<p>–</p>
<p><strong>划分人群，</strong></p>
<p><strong>其实也是为了自己更好判断接触哪些人。</strong></p>
<p><strong>多接触优秀的人，向他们学习，近朱者赤。</strong></p>
<p>–</p>
<p>同理，技术优秀其实也不一定是由于上进，亦然可能是因为时间积累。</p>
<blockquote>
<p>真正的优秀并不在与你技术栈的深浅，对某个框架的熟练程度；</p>
<p>而是你的学习能力和自我思考。</p>
</blockquote>
<h3 id="🔹-开发与写作"><a href="#🔹-开发与写作" class="headerlink" title="🔹 开发与写作"></a>🔹 开发与写作</h3><p>近期又冒出一个观点，越发觉得<strong>「开发与写作是同源的」</strong>。</p>
<p>只不过写作面向的对象仅仅是人（自己或他人），</p>
<p>而开发需要同时面向计算机和人。</p>
<p>–</p>
<p>学习编程语言，其实也是只是在学习语法。</p>
<p>如同写作，学会了语法（字词、句子结构），并不代表能够写出优秀的文章。</p>
<p>–</p>
<p>但开发需要同时兼顾两位对象，挑战性和写作也是有所不同的。</p>
<p>写出来的代码既需要运行流畅，计算机足以了解且按流程运行。</p>
<p>亦需要代码清晰，设计模式合理，以便人阅读、后续维护。</p>
<h3 id="🔸-契机、目标"><a href="#🔸-契机、目标" class="headerlink" title="🔸 契机、目标"></a>🔸 契机、目标</h3><p>有一个坚定的目标着实很重要，但契机能像催化剂一样，极大程度促成你达成目标。</p>
<p>比如，当初立项开发《人升》，如果没有校内的两场开发比赛的报名和Deadline限制，</p>
<p>很可能找不到后端小伙伴一直持续维护（前期《人升》一两年内是完全没有收益的），</p>
<blockquote>
<p>说起来，《人升》的名字也是后端小伙伴提供的。</p>
</blockquote>
<p>甚至可能我自己都放弃开发。</p>
<p>–</p>
<p>有了比赛的契机后，</p>
<p>我们就有很大的动力进行里程碑设定和开发。</p>
<p>也确实在开发途中看到了《人升》的潜力和希望。</p>
<p>–</p>
<p>在比赛结束后，</p>
<p>其实我们也不知道《人升》应该如何前进。</p>
<p>虽然，我当时列了个很简单的roadmap，但是当时其实是打算摸鱼一段时间的。</p>
<p>结果，未曾设想，那一份发在酷安的roadmap描述上了首页，为我们带上了首波种子用户。</p>
<p>我们也因此进行了快速迭代，并根据用户的反馈，逐渐找到了自己的开发方向。</p>
<p>–</p>
<p>工作中也同理，</p>
<p>我们经常能接触到一些新鲜东西或技术。</p>
<p>如果不加以实践可能会逐渐脱离前轨（？，想不到好词语）</p>
<p>如果在自己的工作中，加以运用上这些自己想要实践的东西，并且这些东西对工作是有利的话，那么就是极好的。</p>
<p>–</p>
<p>其实也比较类似设置挑战。</p>
<blockquote>
<p>逃出舒适区。</p>
</blockquote>
<p>如果工作上缺失机会的，那么如果有个人项目就很方便了。</p>
<ul>
<li><p>18年创建《人升》项目时，就在完全不懂 Kotlin 的前提下，直接使用 Kotlin 作为主语言进行开发。</p>
<p>在现在看来，这也是当时非常正确的决策之一。</p>
</li>
<li><p>20年毕设开发的时候，我就决定尝试使用 Jetpack 的 MVVM 系列框架进行开发，</p>
<p>也着实促进了后续对这一套东西的了解（虽然 room 还没用上）。</p>
</li>
</ul>
<h3 id="🔸-规划和变化"><a href="#🔸-规划和变化" class="headerlink" title="🔸 规划和变化"></a>🔸 规划和变化</h3><p>对于规划、计划也有了新的看法，近期其实事项非常多，变化、增长也非常迅速，导致根本没法做出长期规划。</p>
<p>也在思考：长期规划是否真的有必要？</p>
<p>–</p>
<p>一款由未来的产品，定是有无数的机遇和变化的。</p>
<p>这时候如果花费太多时间在长远规划上，可能会因为变化，这些花费掉的时间只能沦为沉没成本了。</p>
<p>但一个大致的规划也是必要的。</p>
<p>–</p>
<p>短中期规划定是有必要的，也要随时根据实际情况调整。</p>
<p>–</p>
<p>上文中其实提到了，</p>
<p>当时《人升》刚结束比赛时，其实是做了一个大致的 roadmap 规划的。</p>
<p>但现在看来，《人升》其实走了跟那份规划完全不一致的道路。</p>
<p>–</p>
<p>今年初，</p>
<p>也未能想到 7 月份能登上谷歌市场首页，</p>
<p>完成去年毕业时定下的目标（大约一年左右，实现独立，实际达成也刚好是一年又一个月，很巧。）。</p>
<p>这个目标在年初看来，也是希望渺茫的。 </p>
<p>–</p>
<p>大概19年的年终计划也没实现几个，也不做总结了。</p>
<p>后续以短中期计划为主。</p>
<h2 id="杂谈总结"><a href="#杂谈总结" class="headerlink" title="杂谈总结"></a>杂谈总结</h2><ul>
<li><p>勿将方法论当作成功基石、失败断言。</p>
</li>
<li><p>市场大概率公正，由市场做评判。</p>
</li>
<li><p><strong>忽略噪声，噪声无益。</strong></p>
</li>
<li><p><strong>不表达的话，别人也没法知道你的想法。</strong></p>
</li>
<li><p>简单划分人群，接触优秀上进者。</p>
</li>
<li><p>开发与写作同源。</p>
<p>像写作一样对待开发。</p>
<p>多练习写作表达能力，对开发可能也受益。</p>
</li>
<li><p><strong>不要将自己定义为单一角色。</strong></p>
<p>我不只是开发。</p>
<p>不要被划分单一角色，多尝试跨职位了解工作内容，对工作和独立非常有用。</p>
<p>增加自己的不可替代性。</p>
</li>
<li><p>使用契机作为自己实现目标的催化剂。</p>
</li>
<li><p>视变化而定，是否要做长远规划。</p>
<p>或者将关注点放在中短期规划中。</p>
</li>
</ul>
<blockquote>
<p>那些我很喜欢的思考文章：</p>
<p><a href="https://w2solo.com/topics/670">翻译文章 Inkdrop 我是如何通过一个 Markdown 编辑器获得 $1300/月？</a></p>
<p><a href="https://v2ex.com/t/805082#reply50">#思考 创业与打工的区别</a></p>
<p><a href="https://w2solo.com/topics/71">5 个月独立开发者的一些体验</a></p>
<p><a href="https://w2solo.com/topics/761">远离社交，独立开发的这一年</a></p>
</blockquote>
<h2 id="试试改变-中短期规划"><a href="#试试改变-中短期规划" class="headerlink" title="试试改变-中短期规划"></a>试试改变-中短期规划</h2><ul>
<li><p>杜绝患得患失。</p>
<p>不要被情感情绪左右决策和行动。</p>
<p>忽略噪声。</p>
</li>
<li><p>增加写日记的频次（近期都变成了月记）。</p>
<p>记录有趣的事情，让以后有日记可溯，增加留念。</p>
</li>
<li><p>接触下AE视频编辑。</p>
<p>刚好有个契机。</p>
</li>
<li><p>重拾算法和C++。</p>
<p>曾经好歹也是个ACMer，现在基本语法都忘记了，非常不应该。</p>
<p>也能够为变化做好准备。</p>
</li>
<li><p>试试星巴克办公。</p>
<p>恰好也有多篇文章待写。</p>
</li>
</ul>
<p>第一次写这种类型的杂谈，</p>
<p>虽然，大概也没多少人看得到。</p>
<blockquote>
<p>从9/30起笔写了个1/3，最终假期最后一天才写完。</p>
<p>也是很拖延了（</p>
</blockquote>
<p>愿不卑不亢，</p>
<p>2021/10/8 凌晨</p>
<p>Kei</p>
]]></content>
      <categories>
        <category>个人</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/post/94096870.html</url>
    <content><![CDATA[<p>UWP应用（微软ToDo）使用代理网络</p>
<p><a href="https://jingyan.baidu.com/article/6b182309ff5b6bba58e159e0.html">https://jingyan.baidu.com/article/6b182309ff5b6bba58e159e0.html</a></p>
<p>S-1-15-2-2537927067-2140208811-1083047336-3825492100-1188134376-3459723148-3131426163</p>
]]></content>
  </entry>
  <entry>
    <title>人升更新介绍#1.80.0 | 12月 开箱抽奖机制</title>
    <url>/post/eb7440ce.html</url>
    <content><![CDATA[<p><a href="http://wiki.lifeupapp.fun/zh-cn/#/features/180">请点击此处访问新站点</a></p>
<h2 id="应用简介"><a href="#应用简介" class="headerlink" title="应用简介"></a>应用简介</h2><p><strong>人升是什么？</strong></p>
<p><em>《人升》</em>取义“让你的人生升级”是一款安卓平台的含有大量『游戏化』元素的待办事项（To-Do）和习惯养成类应用。<em>《人升》</em>既能满足对待办事项的常规功能要求外，还引入了「经验值等级系统」、「成就系统」和个性化的物品激励机制「金币、商品和仓库体系」。</p>
<blockquote>
<p>大概就是一个简易版本的地球OL~完成你的待办事项，努力提升自己的各大属性等级。赚取金币，去购买自己设定好的物品奖励。</p>
<p>并且可以自设定各种复杂的成就，应用能够自动检测是否达到解锁目标。解锁条件能获取自己设置的奖励~</p>
<p>最新版本甚至支持了开箱功能，你可以在应用内使用完成任务获取的金币购买宝箱，获得自己设定的随机奖励。</p>
</blockquote>
<p>除此之外还有感想、游戏化番茄钟、自定义成就、模块自定义隐藏等诸多功能待你探索~</p>
<p>我们也在课余、业余时间维护更新了这款独立应用两年多的时间。</p>
<p>一直维持着应用小体积（小于9MB）、通过绿色应用公约验证、无广告、无订阅制的特色。</p>
<p>不来试试吗~可以在各大手机应用市场和第三方应用商店搜索《人升》进行下载。</p>
<h2 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h2><ol>
<li><strong>开箱（随机奖励）</strong></li>
<li><strong>图标历史记录</strong></li>
<li><strong>对单个事项设置惩罚系数</strong></li>
<li><strong>比较小但有用的改进</strong></li>
</ol>
<a id="more"></a>
<hr>
<h2 id="▋-开箱（随机奖励）"><a href="#▋-开箱（随机奖励）" class="headerlink" title="▋ 开箱（随机奖励）"></a>▋ 开箱（随机奖励）</h2> <img src="/post/eb7440ce/01.gif" class="">
<p>规划已久的开箱/抽奖功能终于上线了，现在可以实现这样的场景：</p>
<p><strong>完成待办事项，获得经验值、随机金币和宝箱。</strong></p>
<p><strong>在宝箱中可以开出自己想要的多种奖励，双倍的随机快乐。</strong></p>
<p>开箱功能会作为一种「商品使用效果」上线。</p>
<p><strong>你可以自由设定箱子内的物品内容、数量和获取概率。</strong></p>
<p><strong>享受成为【游戏策划】的感觉吧~</strong></p>
<h3 id="设置方式"><a href="#设置方式" class="headerlink" title="设置方式"></a><strong>设置方式</strong></h3><p>创建商品时，添加自定义使用效果【开箱】：</p>
<blockquote>
<p>如果你是会员，还可以把操作按钮的文案设置为“打开”</p>
</blockquote>
 <img src="/post/eb7440ce/07.jpg" class="">
<p>然后可以设置箱子中的内容和比重：</p>
 <img src="/post/eb7440ce/02.jpg" class="">
<h3 id="关于概率比重的说明"><a href="#关于概率比重的说明" class="headerlink" title="关于概率比重的说明"></a>关于概率比重的说明</h3><p>一个商品的实际概率其实是 这个商品所占的比重 / 所有比重之和。</p>
<p>比如只有两个商品，比重设置都是50%，那其中一个商品的获得概率其实就是 50% / (50%+50%) 也就是 50%。</p>
<p>按照这个思路，其实《人升》支持0.01%之类的概率设置：</p>
<p>比如两个商品，其中一个比重是1%，另外一个是9999%。</p>
<blockquote>
<p>可以完美模拟某些氪金游戏的低概率（</p>
</blockquote>
<h3 id="概率表"><a href="#概率表" class="headerlink" title="概率表"></a>概率表</h3><p>在查看商品详情时，可以查看商品的概率表：</p>
 <img src="/post/eb7440ce/08.jpg" class="">
<blockquote>
<p>这里的概率文本的色值其实用的是某个deadgame的稀有度设置</p>
</blockquote>
<h3 id="后续发展"><a href="#后续发展" class="headerlink" title="后续发展"></a>后续发展</h3><p><strong>目前还是初版，仅支持单抽，以后可能会扩展十连抽等等功能。</strong></p>
<p>⚠️而且暂时不支持分享开箱效果，后续会增加支持。</p>
<hr>
<h2 id="▋-图标历史记录"><a href="#▋-图标历史记录" class="headerlink" title="▋ 图标历史记录"></a>▋ 图标历史记录</h2> <img src="/post/eb7440ce/03.jpg" class="">
<p>现在选择的图标会带有历史记录，减少了重复选择图片的繁琐操作。</p>
<p>并且，如果你在橱窗看到了合适的图标，现在可以直接将图标添加到这个历史列表中：</p>
 <img src="/post/eb7440ce/04.jpg" class="">
<hr>
<h2 id="▋-对单个事项设置惩罚系数"><a href="#▋-对单个事项设置惩罚系数" class="headerlink" title="▋ 对单个事项设置惩罚系数"></a>▋ 对单个事项设置惩罚系数</h2> <img src="/post/eb7440ce/05.jpg" class="">
<p>在进阶设置中，可以启用对单个事项设置惩罚系数的开关。</p>
<p>启用后，即可对针对某些事项调高或者调低惩罚了。</p>
 <img src="/post/eb7440ce/06.jpg" class="">
<hr>
<h2 id="▋-比较小但有用的改进"><a href="#▋-比较小但有用的改进" class="headerlink" title="▋ 比较小但有用的改进"></a>▋ 比较小但有用的改进</h2><ul>
<li>用户成就支持「复制」、「移至…」操作</li>
<li>裁剪图片支持自由裁剪</li>
<li><strong>现可设置自动备份的间隔，并且引入了Dropbox备份支持</strong></li>
<li>简洁模式可进行配置（只显示时间/显示金币数量）</li>
<li>支持在历史页面“重新开始”事项</li>
<li>支持从动态点击进入团队详情</li>
<li>填写的动态内容增加持久化缓存，防止输入的内容和图片丢失</li>
</ul>
<p><br /></p>
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
        <tag>更新介绍</tag>
      </tags>
  </entry>
  <entry>
    <title>人升更新介绍#1.79.0 | 11月/12月 成就解锁条件与计时统计</title>
    <url>/post/83023146.html</url>
    <content><![CDATA[<h2 id="应用简介"><a href="#应用简介" class="headerlink" title="应用简介"></a>应用简介</h2><p><strong>人升是什么？</strong></p>
<p><em>《人升》</em>取义“让你的人生升级”是一款安卓平台的含有大量『游戏化』元素的待办事项（To-Do）和习惯养成类应用。<em>《人升》</em>既能满足对待办事项的常规功能要求外，还引入了「经验值等级系统」、「成就系统」和个性化的物品激励机制「金币、商品和仓库体系」。</p>
<blockquote>
<p>大概就是一个简易版本的地球OL~完成你的待办事项，努力提升自己的各大属性等级。赚取金币，去购买自己设定好的物品奖励。</p>
<p>并且可以自设定各种复杂的成就，应用能够自动检测是否达到解锁目标。解锁条件能获取自己设置的奖励~</p>
</blockquote>
<p>除此之外还有感想、游戏化番茄钟、自定义成就、模块自定义隐藏等诸多功能待你探索~</p>
<p>我们也在课余、业余时间维护更新了这款独立应用两年多的时间。</p>
<p>一直维持着应用小体积（小于9MB）、通过绿色应用公约验证、无广告、无订阅制的特色。</p>
<p>不来试试吗~可以在各大手机应用市场和第三方应用商店搜索《人升》进行下载。</p>
<h2 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h2><ol>
<li><strong>自设成就解锁条件</strong></li>
<li><strong>番茄计时统计</strong></li>
<li><strong>用户橱窗</strong></li>
<li><strong>自定义音效（会员专属）</strong></li>
<li><strong>比较小但有用的改进</strong></li>
<li><strong>预热：开箱系统</strong></li>
</ol>
<a id="more"></a>
<hr>
<h2 id="▋-自设成就的解锁条件"><a href="#▋-自设成就的解锁条件" class="headerlink" title="▋ 自设成就的解锁条件"></a>▋ 自设成就的解锁条件</h2> <img src="/post/83023146/02.png" class="">
<p>现在《人升》支持用户在创建成就的时候，设定好各种各样的解锁条件。</p>
<p>然后系统会自动检测条件，达到条件时自动解锁成就，并且会以「系统成就」一样的方式提醒解锁：</p>
 <img src="/post/83023146/03.jpg" class="">
<p>新建成就界面：</p>
 <img src="/post/83023146/01.png" class="">
<p><strong>目前支持设定以下这些解锁条件：</strong></p>
<ul>
<li><p>总计完成某个事项达到一定次数</p>
</li>
<li><p>连续完成事项达到一定次数</p>
<p>例如：连续20天「早起」</p>
</li>
<li><p>属性达到某个等级</p>
<p>例如：「力量」达到15级</p>
</li>
<li><p>总计获得番茄数量</p>
</li>
<li><p>使用《人升》天数</p>
</li>
<li><p>社区获得赞数</p>
</li>
<li><p>坚持完成任意事项天数</p>
</li>
<li><p>当前金币总数</p>
</li>
<li><p>今日金币新增数量</p>
</li>
<li><p>指定事项累计获得番茄数</p>
</li>
<li><p>购买指定商品达到一定次数</p>
<p>例如：购买「看电影」奖励达到20次</p>
</li>
<li><p>使用指定商品达到一定次数</p>
</li>
</ul>
<p>通过这些解锁条件，搭配上商品奖励，其实《人升》已经实现了 <strong>事项-属性-成就-商品</strong> 的多重闭环激励体系了。</p>
<p>具体的用法就靠各位用户挖掘了~非常欢迎分享自己的成就设置。</p>
<p><strong>未来也会扩展更多的解锁条件，比如下个版本会推出开箱概率系统。</strong></p>
<p><strong>再之后的版本就可能会上线“开箱得到xx商品多少次”的奖励。</strong></p>
<hr>
<h2 id="▋-番茄计时统计"><a href="#▋-番茄计时统计" class="headerlink" title="▋ 番茄计时统计"></a>▋ 番茄计时统计</h2> <img src="/post/83023146/04.jpg" class="">
<p>新版本针对番茄钟追加了<strong>计时统计</strong>的功能。</p>
<p>可以在统计界面查看自己的专注情况和时长统计，以及专注的事项内容。</p>
<blockquote>
<p><strong>长按也可以删除记录。</strong></p>
</blockquote>
 <img src="/post/83023146/05.jpg" class="">
<p>在「状态」页面也新增了番茄的统计卡片。</p>
<hr>
<h2 id="▋-用户橱窗"><a href="#▋-用户橱窗" class="headerlink" title="▋ 用户橱窗"></a>▋ 用户橱窗</h2> <img src="/post/83023146/06.jpg" class="">
<p>在用户详情页面，也支持查看该用户分享的所有橱窗商品。</p>
<blockquote>
<p>当看到一个中意的图标的时候，不妨进入用户主页浏览一下TA分享的其他商品~</p>
</blockquote>
<hr>
<h2 id="▋-自定义音效（会员专属）"><a href="#▋-自定义音效（会员专属）" class="headerlink" title="▋ 自定义音效（会员专属）"></a>▋ 自定义音效（会员专属）</h2> <img src="/post/83023146/07.jpg" class="">
<p>会员的一个专属小功能。</p>
<p>可以自定义目前应用内的所有音效。</p>
<p>比如可以将“等级提升”的音效替换成你喜欢的某款游戏的音效~</p>
<p>因系统机制限制，比较推荐使用短促的音频文件。</p>
<p>目前网络上有一些音效网站，可以专门下载这种类别的音频文件。</p>
<blockquote>
<p>也可以带上关键字+Sound Effect 搜索外网</p>
</blockquote>
<hr>
<h2 id="▋-比较小但有用的改进"><a href="#▋-比较小但有用的改进" class="headerlink" title="▋ 比较小但有用的改进"></a>▋ 比较小但有用的改进</h2><ul>
<li>从日历界面直接选择日期创建待办事项（可选择作为开始时间/期限时间）</li>
<li>完成计时时，增加了振动提示</li>
<li>用户成就现在支持设置商品作为解锁时的奖励</li>
<li>商品和成就都增加了详情页面，点击即可查看</li>
<li>（会员专属）增加了5种主题色</li>
<li>（会员专属）商品可直接开启“不可购买”开关</li>
<li>商品和待办事项选择增加了🔍搜索功能</li>
<li>自定义经验值</li>
</ul>
<p><br /></p>
<hr>
<h2 id="▋-预热：开箱系统"><a href="#▋-预热：开箱系统" class="headerlink" title="▋ 预热：开箱系统"></a>▋ 预热：开箱系统</h2> <img src="/post/83023146/09.jpg" class="">
 <img src="/post/83023146/10.jpg" class="">
<p>下个版本（其实就这两天）会更新规划已久的开箱系统。</p>
<p>开箱功能会作为一种「商品使用效果」上线。</p>
<p><strong>你可以自由设定箱子内的物品内容、数量和获取概率。</strong></p>
<p><strong>享受成为策划的感觉吧~</strong></p>
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
        <tag>更新介绍</tag>
      </tags>
  </entry>
  <entry>
    <title>人升更新介绍#1.77.4 | 11/05 商品效果与橱窗</title>
    <url>/post/115f79e5.html</url>
    <content><![CDATA[<h2 id="应用简介"><a href="#应用简介" class="headerlink" title="应用简介"></a>应用简介</h2><p><strong>人升是什么？</strong></p>
<p><em>《人升》</em>取义“让你的人生升级”是一款安卓平台的含有大量『游戏化』元素的待办事项（To-Do）和习惯养成类应用。<em>《人升》</em>既能满足对待办事项的常规功能要求外，还引入了「经验值等级系统」、「成就系统」和个性化的物品激励机制「金币、商品和仓库体系」。</p>
<blockquote>
<p>大概就是一个简易版本的地球OL~完成你的待办事项，努力提升自己的各大属性等级。赚取金币，去购买自己设定好的物品奖励等等。</p>
</blockquote>
<p>除此之外还有感想、游戏化番茄钟、自定义成就、模块自定义隐藏等诸多功能待你探索~</p>
<p>我们也在课余、业余时间维护更新了这款独立应用两年多的时间。</p>
<p>一直维持着应用小体积（小于8MB）、通过绿色应用公约验证、无广告、无订阅制的特色。</p>
<p>可以在各大手机应用市场搜索《人升》进行下载。</p>
<h2 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h2><ol>
<li><strong>商品使用效果</strong></li>
<li><strong>橱窗</strong></li>
<li><strong>内置图标</strong></li>
<li><strong>商品限购</strong></li>
<li><strong>事项统计</strong></li>
<li><strong>顶部清单切换</strong></li>
<li><strong>详细更新日志</strong></li>
</ol>
<a id="more"></a>
<hr>
<h2 id="▋-商品使用效果"><a href="#▋-商品使用效果" class="headerlink" title="▋ 商品使用效果"></a>▋ 商品使用效果</h2> <img src="/post/115f79e5/01.png" class="">
<p>商品作为个性化物品激励机制，可以算是《人升》的核心机制。</p>
<p>以往版本的商品的「使用」功能的体现只有库存减少。</p>
<p><strong>1.76.0版本提供了更为游戏化的使用效果设置，你可以自定义以下效果：</strong></p>
<ul>
<li>增加或减少指定属性的经验值（可以共存）</li>
<li>增加或者减少金币</li>
<li>合成另外一种商品</li>
<li>不可使用（消耗）</li>
</ul>
<p><strong>由此，其实可以扩展出非常多的玩法。举几个例子：</strong></p>
<p>（1）  为「奶茶」添加经验值增减效果。因为可能会影响健康，减少“力量”属性的经验值</p>
 <img src="/post/115f79e5/02.png" class="">
<p>（2） 通过使用增加金币效果，来实现自制「一袋金币」的效果。同时可以配合待办事项的物品奖励，增加游戏化代入感。</p>
 <img src="/post/115f79e5/03.png" class="">
<p>（3） 合成搭配待办事项的物品奖励，以实现靶向奖励的效果。比如每次完成某项「早起」待办事项可以获得一张电影券，获得30电影券后，可以合成真正的「看电影」奖励。</p>
 <img src="/post/115f79e5/01.png" class="">
<p>（4） ”不可使用“效果可以用来实现一些收藏式的奖励，存放到仓库中。</p>
<p>（5） 实现自我惩罚。</p>
 <img src="/post/115f79e5/04.png" class="">
<hr>
<h2 id="▋-橱窗"><a href="#▋-橱窗" class="headerlink" title="▋ 橱窗"></a>▋ 橱窗</h2> <img src="/post/115f79e5/05.png" class="">
<p>在「世界」模块的中的”橱窗“功能里，现在你可以分享自己的创意商品设计了。</p>
<p>也可以浏览他人分享的优秀商品，使用”进货“功能引入自己的商店中。</p>
<p>无论是炸鸡薯条奶茶，还是“熬夜券”、“B站券”，这里应有尽有。</p>
<blockquote>
<p>一个注意点：分享出去的商品也会带有使用效果，但不会带着限购效果。</p>
</blockquote>
<hr>
<h2 id="▋-内置图标"><a href="#▋-内置图标" class="headerlink" title="▋ 内置图标"></a>▋ 内置图标</h2> <img src="/post/115f79e5/06.png" class="">
<p>寻找合适的商品图片一直是个用户使用上的一个不便之处。</p>
<p><strong>新版本内置了上百个扁平化图标供你选择~解决你的找图痛点。</strong></p>
<p>另外，这些图标也可以用于创建「用户成就」。</p>
<hr>
<h2 id="▋-商品限购"><a href="#▋-商品限购" class="headerlink" title="▋ 商品限购"></a>▋ 商品限购</h2> <img src="/post/115f79e5/07.png" class="">
<p>商品现在也支持设置限购数量了~</p>
<p>并且可以多种限购同时生效。</p>
<p><strong>时间范围支持：</strong></p>
<ul>
<li>日</li>
<li>周</li>
<li>月</li>
<li>年</li>
</ul>
<hr>
<h2 id="▋-事项统计"><a href="#▋-事项统计" class="headerlink" title="▋ 事项统计"></a>▋ 事项统计</h2><p><strong>入口：点击事项卡片，进入事项详情页面</strong></p>
 <img src="/post/115f79e5/08.png" class="">
<p>为重复事项添加了单独的完成统计视图。</p>
 <img src="/post/115f79e5/09.jpg" class="">
<p>增加了三种进度的显示：子任务、计数、重复目标次数。</p>
<p><br /></p>
<hr>
<h2 id="▋-顶部清单切换"><a href="#▋-顶部清单切换" class="headerlink" title="▋ 顶部清单切换"></a>▋ 顶部清单切换</h2> <img src="/post/115f79e5/09.png" class="">
<p>现在可以直接在顶部点击切换清单了。</p>
<p>这里的排列顺序可以在清单管理页面调整。（长按可以拖动排序）</p>
<hr>
<h2 id="▋-详细更新日志"><a href="#▋-详细更新日志" class="headerlink" title="▋ 详细更新日志"></a>▋ 详细更新日志</h2><p><strong>1.77.4（2020/11/12)</strong></p>
<p>功能</p>
<ol>
<li>【事项】详情页面增加子任务、计数和目标重复次数的进度展示</li>
<li>【事项】详情页面增加周期完成统计</li>
</ol>
<p>优化</p>
<ol>
<li>团队事项现在也支持显示已完成状态</li>
</ol>
<p>修复</p>
<ol>
<li>修复某些情况下点击新建团队按钮却出现分享橱窗商品的问题</li>
<li>修复列表状态异常导致崩溃的问题</li>
<li>修复成就感想的一些异常问题</li>
</ol>
<p><strong>1.77.3（2020/11/xx)</strong></p>
<ol>
<li>修复“显示已完成事项”开启后的一些问题（如无法正确删除、撤销弹窗不显示）</li>
<li>修复番茄钟有时无法记录当前时间的问题</li>
<li>微调部分UI</li>
<li>重复频次增加一个“每周几”的快捷入口</li>
<li>修改筛选的文案</li>
</ol>
<p><strong>1.77.2（2020/11/xx)</strong></p>
<ol>
<li>修复隐藏计数卡片后，重启不生效的问题</li>
<li>修复桌面小部件的异步刷新问题</li>
<li>修复退货多个商品时，返还的价格只计算了一个的问题</li>
<li>排行榜增加“关注”提示</li>
<li>对新用户增加了一个样例商品</li>
<li>编辑待办事项返回时，增加“是否放弃修改”的对话框</li>
<li>修复上架橱窗商品的对话框，可以选择从其他用户进货的商品的问题</li>
</ol>
<p><strong>1.77.1（2020/11/05)</strong></p>
<p><strong>功能</strong></p>
<ol>
<li>【事项】快捷切换清单的顶部导航栏</li>
<li>【事项】“显示已完成事项”的开关</li>
<li>【事项】清单支持归档操作</li>
<li>【状态】页面增加金币的状态显示</li>
<li>【用户成就】现在也发表感想</li>
<li>【橱窗】现在支持分享和进货带有“合成”效果的商品（仅支持一级合成，且需要新版本用户才能进货成功）</li>
</ol>
<p><strong>优化</strong></p>
<ol>
<li>【事项】冻结事项会折叠显示，且不在日历的“即将期限”中显示</li>
<li>【事项】清单上现在会展示未完成数量</li>
<li>【事项】夜间模式现在会跟随系统设置</li>
<li>【事项】增加说明文档入口，优化提示</li>
<li>当数据库版本异常时，增加升级应用的提醒</li>
<li>优化WebDAV自动备份逻辑，完善自动备份的错误提示</li>
</ol>
<p><strong>修复</strong></p>
<ol>
<li>修复在橱窗页面下载商品后，无法重新上架的问题</li>
<li>修复主页在放置后台、旋转屏幕等情况下可能导致崩溃的问题</li>
</ol>
<p><strong>1.77.0（2020/10/28)</strong></p>
<p><strong>功能</strong></p>
<ol>
<li>社区增加【橱窗】模块<ul>
<li>分享你设定的商品</li>
<li>随意浏览、进货社区用户们分享的有趣商品</li>
</ul>
</li>
</ol>
<p><strong>优化</strong></p>
<ol>
<li>修正“每月”重复循环的逻辑</li>
<li>优化商店、仓库列表的刷新效果</li>
<li>优化图片上传策略</li>
<li>切换后台时，自动释放音频池</li>
</ol>
<p><strong>修复</strong></p>
<ol>
<li>修复当未执行过WebDAV备份时，启用自动备份无法生效的问题</li>
<li>修改待办事项的商品奖励不会受库存设置影响的问题</li>
<li>修复购买具有使用效果的物品时，即便切换至“不立即使用”，仍存在5个数量限制的问题</li>
<li>修复设定“自定义商品使用文案”后，进入编辑页面仍显示默认值的问题</li>
</ol>
<p><strong>1.76.0（2020/10/13)</strong></p>
<p><strong>功能</strong></p>
<ol>
<li>【事项】子任务默认金币设置</li>
<li>【商店】和【成就】：现已经内置了上百个模板图标</li>
<li>【通用】音效全局开关</li>
<li>【感想】现支持按事项内容进行筛选</li>
<li>【番茄】支持在“设置”页面创建快捷方式</li>
<li>【番茄】自定义番茄售价</li>
</ol>
<p><strong>优化</strong></p>
<ol>
<li>【感想】筛选时，现在会在顶部显示筛选类型和内容</li>
<li>【会员】增加更多会员状态的 UI 显示</li>
<li>【番茄】倒计时的情况下，页面会保持常亮状态</li>
<li>【杂项】指定文本默认颜色，防止因为自定义主题导致文本显示异常</li>
<li>【杂项】当页面显示有限时，新建事项页面会提示下方还有更多设置</li>
<li>【杂项】隐藏无用的“主页”侧边栏按钮，更换“感想”图标</li>
<li>【杂项】新建成就和商品页面，增加了“更换图标”按钮</li>
</ol>
<p><strong>修复</strong></p>
<ol>
<li>修复【重复事项】颜色设置会丢失的问题</li>
<li>修复搜索状态中，查看一个团队并返回后，页面会自动刷新的问题</li>
<li>修复当清单达到一定数量后，“新建”按钮显示不出来的问题</li>
<li>修复当处理“自动备份”冲突后，点击“云朵”按钮无反应的问题</li>
</ol>
<p><strong>1.76.0-alpha03 略</strong></p>
<p><strong>1.76.0-alpha02 略</strong></p>
<p><strong>1.76.0-alpha01（2020/10/09）</strong></p>
<p><strong>功能</strong></p>
<ol>
<li>【商店】：支持定制商品的使用效果<ul>
<li>增加或减少经验值</li>
<li>增加或减少金币</li>
<li>增加“不可使用”类型的商品</li>
</ul>
</li>
</ol>
<p><strong>优化</strong></p>
<ol>
<li>指定默认字体颜色，防止受到第三方主题影响</li>
</ol>
<p><strong>修复</strong></p>
<ol>
<li>修复 MIUI 下，创建的番茄钟图标显示不出来的问题</li>
</ol>
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
        <tag>更新介绍</tag>
      </tags>
  </entry>
  <entry>
    <title>人升更新介绍#1.75.0 | 09/20 番茄钟</title>
    <url>/post/635a53df.html</url>
    <content><![CDATA[<h2 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h2><ol>
<li><strong>番茄钟</strong></li>
<li><strong>WebDAV 自动同步</strong></li>
<li><strong>清单/事项颜色</strong></li>
<li><strong>可以但没必要的会员系统</strong></li>
<li><strong>模块隐藏</strong></li>
<li><strong>计划</strong></li>
</ol>
<a id="more"></a>
<hr>
<h2 id="▋-番茄钟"><a href="#▋-番茄钟" class="headerlink" title="▋ 番茄钟"></a>▋ 番茄钟</h2> <img src="/post/635a53df/01.png" class="">
<p>hi~有使用过能吃番茄的番茄钟功能吗？</p>
<p>「人升」新版本增加了番茄钟计时功能，使用番茄工作法可以更好地安排工作和时间。</p>
<p>在「人升」中，你每完成一个番茄钟计时，可以得到一个番茄。如果番茄计时过半的情况下，跳过番茄计时，也能获取到半个番茄。</p>
<p>你可以随时「食用」或者「售出」你获得的番茄。</p>
 <img src="/post/635a53df/02.png" class="">
 <img src="/post/635a53df/03.png" class="">
<p><strong>食用番茄</strong>可以获取到耐力经验值。</p>
<p><strong>出售番茄</strong>则可以获得金币。</p>
 <img src="/post/635a53df/15.png" class="">
<p>很高兴看到有用户立刻创建与之相关的团队~</p>
<p>感兴趣的用户可以搜索这个团队并加入。</p>
 <img src="/post/635a53df/04.png" class="">
<p>另外，番茄计时可以跟待办事项绑定。</p>
<p>后续可以在待办事项的详情页面看到该待办事项所属的番茄数量。</p>
<h3 id="功能入口"><a href="#功能入口" class="headerlink" title="功能入口"></a>功能入口</h3> <img src="/post/635a53df/05.png" class="">
<p>主页，点击侧边栏，点击进入“番茄”页面。</p>
<p>或者长按待办事项，在右上角菜单中选择<strong>“计时”</strong>选项。</p>
<h3 id="后续计划"><a href="#后续计划" class="headerlink" title="后续计划"></a>后续计划</h3><ul>
<li>增加自定义番茄「食用」可获得的属性经验值种类和数量</li>
<li>增加自定义番茄「出售」可获得的金币数量</li>
<li>增加自定义环境白噪声</li>
<li>与成就系统结合</li>
</ul>
<hr>
<h2 id="▋-WebDAV-自动同步"><a href="#▋-WebDAV-自动同步" class="headerlink" title="▋ WebDAV 自动同步"></a>▋ WebDAV 自动同步</h2> <img src="/post/635a53df/06.png" class="">
<p>此前，即便配置了 WebDAV 备份。也需要手动到「数据管理」页面进行备份或恢复操作，十分不便。</p>
<p>新版本增加了 WebDAV 自动备份功能，启用后，会在每次进入应用的时候执行备份。</p>
 <img src="/post/635a53df/07.png" class="">
<p>同时也会在首页顶部卡片展示同步状态，也能点击进行手动同步。</p>
 <img src="/post/635a53df/08.png" class="">
<p>当同步实现冲突时，用户可以抉择使用本地还是云端数据。</p>
<p>有了该功能，跨设备间的数据同步会轻松一些。</p>
 <img src="/post/635a53df/09.png" class="">
<p>在「数据管理」页面，也增加了“如何使用坚果云配置WebDAV备份”的链接。</p>
<p>还没配置的同学可以去看看~</p>
<hr>
<h2 id="▋-清单-事项颜色"><a href="#▋-清单-事项颜色" class="headerlink" title="▋ 清单/事项颜色"></a>▋ 清单/事项颜色</h2> <img src="/post/635a53df/10.png" class="">
<p>现在用户可以自定义事项卡片的主题色。</p>
<p>支持自定义整个清单的主题色，或是具体待办事项的颜色。</p>
<p><strong>优先级：</strong>事项自定义颜色&gt;清单自定义颜色&gt;默认颜色（跟随重复频次变动）</p>
<hr>
<h2 id="▋-可以但没必要的会员系统"><a href="#▋-可以但没必要的会员系统" class="headerlink" title="▋ 可以但没必要的会员系统"></a>▋ 可以但没必要的会员系统</h2> <img src="/post/635a53df/11.png" class="">
<p>可以但没必要的会员系统上线了~</p>
<p>目前会员系统专属功能比较少，更像是对我们的支持的一个证明。</p>
<p>以下是一部分现有的功能：</p>
<ol>
<li><p>在【设置】→【进阶】中，可以自定义事项卡片背景和透明度。</p>
 <img src="/post/635a53df/12.png" class="">
</li>
<li><p>在【上架商品】页面中，可以自定义商品的操作文案。比如食品类商品可以把文案修改为“吃”。</p>
 <img src="/post/635a53df/13.png" class="">
</li>
<li><p>在【会员】页面中，可以加入 Alpha 测试更新推送和咨询开发者问题。</p>
</li>
</ol>
<hr>
<h2 id="▋-模块隐藏"><a href="#▋-模块隐藏" class="headerlink" title="▋ 模块隐藏"></a>▋ 模块隐藏</h2> <img src="/post/635a53df/14.png" class="">
<p>在这次更新后，用户可以自由隐藏底部任意模块（除告示外）。</p>
<h3 id="功能入口-1"><a href="#功能入口-1" class="headerlink" title="功能入口"></a>功能入口</h3><p><code>侧边栏</code>→<code>设置</code>→<code>显示</code></p>
<p><br /></p>
<hr>
<h2 id="▋-计划"><a href="#▋-计划" class="headerlink" title="▋ 计划"></a>▋ 计划</h2><blockquote>
<p>长文警告⚠</p>
</blockquote>
<p>最近两个版本主要是扩展了功能的宽度（用户成就+番茄钟）。</p>
<p>计划下个版本加强深度，把各个功能结合起来。比如商店方面增加“使用商品”的定制逻辑，可以获得/失去经验值、金币，时间段限购；成就方面一个是增加完成条件关联，可以关联完成某个待办事项xx次，关联属性达到多少级，关联商品购买，关联番茄钟等。达到条件后自动触发解锁，而不是现在的手动解锁。</p>
<p>还有一些零碎的改进点，比如新建待办事项的一些选项优化（现在确实学习成本有点大）；还有商店/成就提供一些默认图标；番茄钟考虑加一下白噪声等等。</p>
<p>社区方面本来是这个月安排做成就清单分享的，但是技术实现上有点卡壳，应该会先做服务器备份功能（会员权益）。</p>
<p>打怪系统因为现在想法还很不完善，继续摸~</p>
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
        <tag>更新介绍</tag>
      </tags>
  </entry>
  <entry>
    <title>联系我们</title>
    <url>/post/5df23248.html</url>
    <content><![CDATA[<hr>
<h2 id="微信账号"><a href="#微信账号" class="headerlink" title="微信账号"></a>微信账号</h2> <img src="/post/5df23248/wechat.jpg" class="">
 <img src="/post/5df23248/wechat_public.jpg" class="">
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>人升-如何使用坚果云配置WebDAV备份</title>
    <url>/post/42de1845.html</url>
    <content><![CDATA[<p>本文会讲解如何用坚果云做WebDAV备份。</p>
<hr>
<h2 id="WebDAV备份"><a href="#WebDAV备份" class="headerlink" title="WebDAV备份"></a>WebDAV备份</h2> <img src="/post/42de1845/05.jpg" class="">
<p>备份功能现在新增了对 WebDAV 协议的支持。</p>
<p>只要填写好了 WebDAV 地址、账号和密码之后，就能使用云备份和恢复功能了。</p>
<p>因为一些原因，暂时还是只支持手动备份。</p>
<p>并且由于恢复功能比较危险，也有用户因此损失过数据，<strong>该版本还新增了「撤销上次恢复」的功能。</strong></p>
<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="获取-WebDAV-地址、账号、密码"><a href="#获取-WebDAV-地址、账号、密码" class="headerlink" title="获取 WebDAV 地址、账号、密码"></a>获取 WebDAV 地址、账号、密码</h4><p>理论上任意支持WebDAV协议的服务都可以使用。</p>
<p><strong>国内可以使用坚果云：</strong></p>
<ol>
<li><p>首先打开坚果云官网，注册并且登录账号。</p>
</li>
<li><p>点击<strong>右上角用户名</strong>→<code>账号信息</code>。</p>
</li>
<li><p>切换至安全选项。</p>
 <img src="/post/42de1845/06.png" class="">
</li>
<li><p>在右边<code>第三方应用管理</code>处，点击新增应用，输入名称（如：LifeUp）</p>
</li>
<li><p>然后点击<code>生成密码</code>，保存此处的<code>服务器地址</code>、<code>账号</code>和<code>密码</code>等信息，然后进入应用内进行配置。</p>
 <img src="/post/42de1845/07.png" class="">
</li>
</ol>
<h4 id="应用配置"><a href="#应用配置" class="headerlink" title="应用配置"></a>应用配置</h4><p><code>侧边栏</code>→<code>设置</code>→<code>数据备份/恢复/清除</code>→<code>WebDAV 配置</code>，填写地址、账号密码等信息，并且测试通过。</p>
<p>随之就能在<code>备份</code>和<code>恢复</code>操作上选择 WebDAV 了。</p>
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
        <tag>更新介绍</tag>
      </tags>
  </entry>
  <entry>
    <title>人升更新介绍#1.74.0 | 08/16 用户成就</title>
    <url>/post/e817e5b9.html</url>
    <content><![CDATA[<h2 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h2><ol>
<li><p><strong>用户成就</strong></p>
</li>
<li><p><strong>经验值惩罚动画</strong></p>
</li>
<li><p><strong>ATM</strong></p>
</li>
<li><p><strong>商品库存</strong></p>
</li>
<li><p><strong>将商品设置为待办事项奖励</strong></p>
</li>
<li><p><strong>小改进</strong></p>
<p>6.1 <strong>微博授权登录</strong></p>
<p>6.2 <strong>重复频次设置指引</strong></p>
<p>6.3 <strong>适配安卓10运动权限</strong></p>
<p>6.4 <strong>振动与音效</strong></p>
</li>
<li><p><strong>问题修复</strong></p>
</li>
<li><p><strong>计划</strong></p>
</li>
</ol>
<a id="more"></a>
<hr>
<h2 id="▋-用户成就"><a href="#▋-用户成就" class="headerlink" title="▋ 用户成就"></a>▋ 用户成就</h2> <img src="/post/e817e5b9/01.png" class="">
<p>自从开发了「系统成就」以来，我们陆续地收到了来自不同的开发「自定义成就」或者叫做「用户成就」的功能。</p>
<p>目前「人升」已经支持了初版的「用户成就」功能。</p>
 <img src="/post/e817e5b9/02.png" class="">
<p>你可以创建属于自己的成就清单，和捣鼓设置专属于自己的具体成就内容。</p>
<p>设置成就图标、名称、描述和金币奖励。</p>
<p>目前的「用户」成就仅支持用户自己点击完成，后续可能会加上设置完成条件的功能。</p>
<p>其实，「用户成就」的交互逻辑与待办事项是很类似的。</p>
<p>但是它更具有仪式感，适用于存放一些长期目标。</p>
<h3 id="功能入口"><a href="#功能入口" class="headerlink" title="功能入口"></a>功能入口</h3> <img src="/post/e817e5b9/03.png" class="">
<p><strong>1.74.0 版本：</strong>主页，点击侧边栏，点击进入“成就”页面。</p>
<blockquote>
<p><strong>如果你用的是 1.73.0 版本：</strong>主页，点击侧边栏，点击进入“实验”页面，拉到最下方，进入“用户成就”页面。</p>
</blockquote>
<h3 id="后续计划"><a href="#后续计划" class="headerlink" title="后续计划"></a>后续计划</h3><ul>
<li>支持用户设置成就的经验值奖励</li>
<li>与感想功能相结合</li>
<li>支持用户设置“完成”条件</li>
<li>支持用户将自己的成就清单共享到社区</li>
</ul>
<hr>
<h2 id="▋-经验值惩罚动画"><a href="#▋-经验值惩罚动画" class="headerlink" title="▋ 经验值惩罚动画"></a>▋ 经验值惩罚动画</h2> <img src="/post/e817e5b9/04.png" class="">
<blockquote>
<p>以往的版本，经验值惩罚的概念比较模糊。很多用户都没留意到，而认为人升没有惩罚的概念（</p>
</blockquote>
<p>现在，在受到经验值惩罚的时候，会弹出惩罚的动画，强化了惩罚的概念。</p>
<h3 id="触发时机"><a href="#触发时机" class="headerlink" title="触发时机"></a>触发时机</h3><p>前提是该待办事项有设置经验值奖励，且经验值惩罚系数不为0。</p>
<ol>
<li>待办事项逾期</li>
<li>主动放弃待办事项</li>
</ol>
<hr>
<h2 id="▋-ATM"><a href="#▋-ATM" class="headerlink" title="▋ ATM"></a>▋ ATM</h2> <img src="/post/e817e5b9/05.png" class="">
<blockquote>
<p>ATM 功能也是用户经常建议的一个功能。</p>
</blockquote>
<p>将你的金币存到 ATM 时，必要时再取出。防止剁手。</p>
<p>目前 ATM 功能比较简单，就一个存取金币的小模块。</p>
<p>因为用户的金币体系不统一，暂时不支持利息功能。</p>
<p>未来可能会开放利息的百分比设置。</p>
<h3 id="功能入口-1"><a href="#功能入口-1" class="headerlink" title="功能入口"></a>功能入口</h3> <img src="/post/e817e5b9/06.png" class="">
<p>点击<code>商店</code>标签，右上角菜单点击<code>ATM</code>。</p>
<hr>
<h2 id="▋-商品库存"><a href="#▋-商品库存" class="headerlink" title="▋ 商品库存"></a>▋ 商品库存</h2> <img src="/post/e817e5b9/07.png" class="">
<p>新版本支持了设置商品的库存大小，默认值为以往的无限库存。</p>
<p>该功能可以适用于设置一些「一次性」商品的情形。</p>
 <img src="/post/e817e5b9/08.png" class="">
<p>在商品库存为 0 后，商品列表会显示该商品售罄。</p>
<p>此时如果用户不修改库存，商品会自动下架。</p>
<h3 id="功能入口-2"><a href="#功能入口-2" class="headerlink" title="功能入口"></a>功能入口</h3> <img src="/post/e817e5b9/09.png" class="">
<p>在新建或者编辑一个商品时，可以看到的商品库存的选项卡。</p>
<hr>
<h2 id="▋-将商品设置为待办事项奖励"><a href="#▋-将商品设置为待办事项奖励" class="headerlink" title="▋ 将商品设置为待办事项奖励"></a>▋ 将商品设置为待办事项奖励</h2> <img src="/post/e817e5b9/10.png" class="">
 <img src="/post/e817e5b9/11.png" class="">
<p>在创建或者编辑待办事项时，现在的「完成奖励」选项支持选择<strong>已存在的商品</strong>作为待办事项的奖励了。</p>
<blockquote>
<p>在以前的版本，该功能是作为未实现商品前的简陋替代品开发的，只会在完成奖励时提示一下，并无实际的奖励。</p>
<p>现在将该功能与商店结合到了一起。</p>
</blockquote>
<p>在完成待办事项后，<strong>商品会作为奖励送到仓库里。</strong></p>
<p>该功能的意义可以参考一位用户提建议时对该功能的描述：</p>
<blockquote>
<p>比如商店里有一张奶茶券，在设置任务的时候可以把任务的完成奖励直接关联到奶茶券，这样完成任务后仓库里直接就多了一张奶茶券。<br>这样的话我平时设置很多绑定商品的任务，一段时间后仓库里就会多出来很多东西，可能自己都不记得总共拿到了哪些奖励。没事干的时候就去仓库随便挑点东西使用一下，就像大扫除的时候翻出一大堆以前的宝贝一样。</p>
</blockquote>
<h3 id="功能入口-3"><a href="#功能入口-3" class="headerlink" title="功能入口"></a>功能入口</h3> <img src="/post/e817e5b9/12.png" class="">
<p>在新建或编辑待办事项页面，点击<code>更多选项</code>后，点击<code>完成奖励</code>选项，选择<code>商品</code>。</p>
<p>（目前需要提前在商店创建好对应的商品，后续版本会加上直接跳转新建商品的页面的功能）</p>
<hr>
<h2 id="▋-小改进"><a href="#▋-小改进" class="headerlink" title="▋ 小改进"></a>▋ 小改进</h2><h3 id="微博授权登录"><a href="#微博授权登录" class="headerlink" title="微博授权登录"></a>微博授权登录</h3> <img src="/post/e817e5b9/13.png" class="">
<p><br /></p>
<h3 id="重复频次设置指引"><a href="#重复频次设置指引" class="headerlink" title="重复频次设置指引"></a>重复频次设置指引</h3> <img src="/post/e817e5b9/14.png" class="">
<p>新用户可能比较难了解「重复频次」和「期限时间」的概念，导致无法创建出设想的待办事项。</p>
<p>因此，新版本内置了重复频次的设置指引。</p>
<p>指引内描述了这些概念的基本定义和如何设置一些常规的待办事项，如【周一】至【周日】的每周任务，工作日任务和一些特殊时间点的任务。</p>
<p>后续也有计划重做重复频次的选择对话框，使得设置项更容易理解。</p>
<h3 id="适配安卓10运动权限"><a href="#适配安卓10运动权限" class="headerlink" title="适配安卓10运动权限"></a>适配安卓10运动权限</h3> 
<p>Android 10现需要用户手动授权「健身运动数据」权限，人升才能获取到步数数据。</p>
<h3 id="振动与音效"><a href="#振动与音效" class="headerlink" title="振动与音效"></a>振动与音效</h3><p>目前一些比较关键的操作加入了按键振动功能，也因此应用会申请振动权限。</p>
<p>使用金币也加入了相应的音效。</p>
<hr>
<h2 id="▋-问题修复"><a href="#▋-问题修复" class="headerlink" title="▋ 问题修复"></a>▋ 问题修复</h2><ol>
<li><p>修复某些情况下，切换语言不生效的问题</p>
</li>
<li><p>修复在桌面小部件完成任务时，即便达到目标次数也不会自动结束的问题</p>
</li>
<li><p>修复在隐藏社区的情况下，底部菜单栏颜色不正确的问题</p>
</li>
<li><p>修复子任务的金币设置不能继承到下一次事项的问题</p>
</li>
</ol>
<p><br /></p>
<hr>
<h2 id="▋-计划"><a href="#▋-计划" class="headerlink" title="▋ 计划"></a>▋ 计划</h2><p>之前因为毕设和入职，更新得比较慢。近期会尽量把<strong>功能更新</strong>频次调整到2周-3周一次。</p>
<p><strong>短期：</strong></p>
<ul>
<li>【底部导航栏】支持用户动态隐藏模块（部分用户可能不需要商店模块）、</li>
<li>【用户成就】大量功能需要完善，比如批量删除、移动、设置完成条件等功能目前都是缺失的</li>
<li>【用户成就】与感想功能联动</li>
<li>【新模块】番茄钟</li>
<li>【新建待办事项】重做重复频次的设置框</li>
</ul>
<p><strong>长期：</strong></p>
<ul>
<li>【用户成就】将成就列表分享到社区</li>
<li>【商店】考虑增加自动计算价格的机制，比如让用户选择【昂贵程度】和【欲望程度】来计算商品的价格。</li>
<li>【事项详情】需要增加</li>
</ul>
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
        <tag>更新介绍</tag>
      </tags>
  </entry>
  <entry>
    <title>Android DialogFragment 相关代码段</title>
    <url>/post/a542da69.html</url>
    <content><![CDATA[<h1 id="设置软键盘弹出，自动上移"><a href="#设置软键盘弹出，自动上移" class="headerlink" title="设置软键盘弹出，自动上移"></a>设置软键盘弹出，自动上移</h1><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateView</span><span class="params">(inflater: <span class="type">LayoutInflater</span>, container: <span class="type">ViewGroup</span>?, savedInstanceState: <span class="type">Bundle</span>?)</span></span>: View? &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">// 设置有软键盘时，窗口自动上移</span></span><br><span class="line">    dialog?.window?.setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE)</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="设置全屏显示"><a href="#设置全屏显示" class="headerlink" title="设置全屏显示"></a>设置全屏显示</h1><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">    setStyle(STYLE_NORMAL, R.style.Dialog_FullScreen)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Dialog.FullScreen&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;Theme.AppCompat.Dialog&quot;</span>&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowNoTitle&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowBackground&quot;</span>&gt;</span>@color/transparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsFloating&quot;</span>&gt;</span>false<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="子Fragment"><a href="#子Fragment" class="headerlink" title="子Fragment"></a>子Fragment</h1><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">replace</span><span class="params">(fragment: <span class="type">androidx</span>.<span class="type">fragment</span>.<span class="type">app</span>.<span class="type">Fragment</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> transaction = childFragmentManager.beginTransaction()</span><br><span class="line">    transaction.replace(R.id.fragment, fragment)</span><br><span class="line">    transaction.commit()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>]]></content>
      <categories>
        <category>技术</category>
        <category>Android</category>
        <category>Code-Snippet</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Android</tag>
        <tag>Code-Snippet</tag>
      </tags>
  </entry>
  <entry>
    <title>Android动画相关代码段</title>
    <url>/post/a2321477.html</url>
    <content><![CDATA[<h1 id="ValueAnimator-实现TextView打字机效果"><a href="#ValueAnimator-实现TextView打字机效果" class="headerlink" title="ValueAnimator 实现TextView打字机效果"></a>ValueAnimator 实现TextView打字机效果</h1><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> TextView.<span class="title">startTypeAnimation</span><span class="params">(duration: <span class="type">Long</span> = <span class="number">300</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> originText = <span class="keyword">this</span>.text</span><br><span class="line">    <span class="keyword">val</span> valueAnimator = ValueAnimator.ofInt(<span class="number">0</span>, originText.length)</span><br><span class="line">    valueAnimator.duration = duration</span><br><span class="line">    valueAnimator.interpolator = LinearInterpolator()</span><br><span class="line">    valueAnimator.addUpdateListener &#123; animation -&gt;</span><br><span class="line">        <span class="keyword">val</span> length = animation.animatedValue <span class="keyword">as</span> <span class="built_in">Int</span></span><br><span class="line">        <span class="keyword">this</span>.text = originText.subSequence(<span class="number">0</span>, length)</span><br><span class="line">    &#125;</span><br><span class="line">    valueAnimator.start()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="SpringInterpolator-简易的弹性插值器"><a href="#SpringInterpolator-简易的弹性插值器" class="headerlink" title="SpringInterpolator 简易的弹性插值器"></a>SpringInterpolator 简易的弹性插值器</h1><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 弹性插值器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpringInterpolator</span></span>(<span class="keyword">private</span> <span class="keyword">val</span> factor: <span class="built_in">Float</span>) : Interpolator &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getInterpolation</span><span class="params">(input: <span class="type">Float</span>)</span></span>: <span class="built_in">Float</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">2.0</span>.pow((-<span class="number">10</span> * input).toDouble()) * sin((input - factor / <span class="number">4</span>) * (<span class="number">2</span> * Math.PI) / factor) + <span class="number">1</span>).toFloat()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="XML-底部弹出动画"><a href="#XML-底部弹出动画" class="headerlink" title="XML 底部弹出动画"></a>XML 底部弹出动画</h1><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;translate xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    android:duration=<span class="string">&quot;800&quot;</span></span><br><span class="line">    android:fromYDelta=<span class="string">&quot;100%&quot;</span></span><br><span class="line">    android:toYDelta=<span class="string">&quot;0&quot;</span> /&gt;</span><br></pre></td></tr></table></figure>
<h1 id="底部弹出-弹性插值器用法"><a href="#底部弹出-弹性插值器用法" class="headerlink" title="底部弹出+弹性插值器用法"></a>底部弹出+弹性插值器用法</h1><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> View.<span class="title">startTranslateInSpringAnimation</span><span class="params">(factor: <span class="type">Float</span> = <span class="number">0.8</span>f)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> enterAnimation = AnimationUtils.loadAnimation(context, R.anim.translate_in_bottom)</span><br><span class="line">    enterAnimation.interpolator = SpringInterpolator(factor)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.post &#123;</span><br><span class="line">        <span class="keyword">this</span>.startAnimation(enterAnimation)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="XML-AnimationSet-底部渐显弹出"><a href="#XML-AnimationSet-底部渐显弹出" class="headerlink" title="XML AnimationSet  底部渐显弹出"></a>XML AnimationSet  底部渐显弹出</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:duration</span>=<span class="string">&quot;600&quot;</span>&gt;</span></span><br><span class="line">    &lt;alpha</span><br><span class="line">        android:fromAlpha=&quot;0&quot;</span><br><span class="line">        android:toAlpha=&quot;1&quot; /&gt;</span><br><span class="line">    &lt;translate</span><br><span class="line">        android:fromYDelta=&quot;100%&quot;</span><br><span class="line">        android:toYDelta=&quot;0&quot; /&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="ConstraintSet-简易用法"><a href="#ConstraintSet-简易用法" class="headerlink" title="ConstraintSet 简易用法"></a>ConstraintSet 简易用法</h1><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 伪代码</span></span><br><span class="line"><span class="keyword">val</span> genderLayoutMaleSet = ConstraintSet()</span><br><span class="line">genderLayoutMaleSet.clone(genderLayout)</span><br><span class="line">genderLayoutMaleSet.constrainWidth(R.id.femaleTextView, DisplayUtils.dp2px(<span class="number">56</span>))</span><br><span class="line">genderLayoutMaleSet.setVisibility(R.id.femaleIconTextView, View.GONE)</span><br><span class="line"></span><br><span class="line">TransitionManager.beginDelayedTransition(genderLayout)</span><br><span class="line">genderLayoutMaleSet.applyTo(genderLayout)</span><br></pre></td></tr></table></figure>
<h1 id="AnimatorSet-放大渐显-缩小渐隐（泡沫效果）"><a href="#AnimatorSet-放大渐显-缩小渐隐（泡沫效果）" class="headerlink" title="AnimatorSet 放大渐显/缩小渐隐（泡沫效果）"></a>AnimatorSet 放大渐显/缩小渐隐（泡沫效果）</h1><p><strong>渐显</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:interpolator</span>=<span class="string">&quot;@android:anim/decelerate_interpolator&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:ordering</span>=<span class="string">&quot;together&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;objectAnimator</span><br><span class="line">        android:duration=&quot;500&quot;</span><br><span class="line">        android:propertyName=&quot;scaleX&quot;</span><br><span class="line">        android:valueFrom=&quot;0.0&quot;</span><br><span class="line">        android:valueTo=&quot;1.0&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;objectAnimator</span><br><span class="line">        android:duration=&quot;500&quot;</span><br><span class="line">        android:propertyName=&quot;scaleY&quot;</span><br><span class="line">        android:valueFrom=&quot;0.0&quot;</span><br><span class="line">        android:valueTo=&quot;1.0&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;objectAnimator</span><br><span class="line">        android:duration=&quot;500&quot;</span><br><span class="line">        android:propertyName=&quot;alpha&quot;</span><br><span class="line">        android:valueFrom=&quot;0.0&quot;</span><br><span class="line">        android:valueTo=&quot;1.0&quot; /&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>渐隐</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:interpolator</span>=<span class="string">&quot;@android:anim/accelerate_interpolator&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:ordering</span>=<span class="string">&quot;together&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;objectAnimator</span><br><span class="line">        android:duration=&quot;500&quot;</span><br><span class="line">        android:propertyName=&quot;scaleX&quot;</span><br><span class="line">        android:valueFrom=&quot;1.0&quot;</span><br><span class="line">        android:valueTo=&quot;0.0&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;objectAnimator</span><br><span class="line">        android:duration=&quot;500&quot;</span><br><span class="line">        android:propertyName=&quot;scaleY&quot;</span><br><span class="line">        android:valueFrom=&quot;1.0&quot;</span><br><span class="line">        android:valueTo=&quot;0.0&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;objectAnimator</span><br><span class="line">        android:duration=&quot;500&quot;</span><br><span class="line">        android:propertyName=&quot;alpha&quot;</span><br><span class="line">        android:valueFrom=&quot;1.0&quot;</span><br><span class="line">        android:valueTo=&quot;0.0&quot; /&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
        <category>Android</category>
        <category>Code-Snippet</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Android</tag>
        <tag>Code-Snippet</tag>
      </tags>
  </entry>
  <entry>
    <title>LifeUp Release Log</title>
    <url>/post/e5dce7c7.html</url>
    <content><![CDATA[<p><a href="http://wiki.lifeupapp.fun/en/#/ReleaseLog">New Website</a></p>
<h2 id="Future-Plan"><a href="#Future-Plan" class="headerlink" title="Future Plan"></a>Future Plan</h2><ol>
<li><del>Custom Achievements</del></li>
<li><del>Link Complete Reward of task to the inventory.</del></li>
<li><del>Custom Exp of task</del></li>
<li>Better settings of creating a task.</li>
<li><del>Pomodoro</del></li>
<li><del>Custom achievement complete condition</del></li>
<li><del>Shop Item usage effect</del></li>
<li>Better user guide</li>
<li>Loot boxes (working on it)</li>
<li>Dropbox (working on it)</li>
</ol>
<p><br /></p>
<h2 id="Support-Us"><a href="#Support-Us" class="headerlink" title="Support Us"></a>Support Us</h2><p>Support are always appreciated and help support the project. ❤️</p>
<p>With your support, we can get more time to developing and request more design resources to make it better. And there are also lots of ideas we want to achieve. </p>

<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="lifeupapp" data-color="#79D6B5" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000" data-font-color="#fff" data-coffee-color="#fd0" ></script>

<p><strong>Share the application to your friends will also be a great help.</strong> </p>
<p><br /></p>
<h2 id="Release-Log"><a href="#Release-Log" class="headerlink" title="Release Log"></a>Release Log</h2><p><strong>1.80.7（2021/01/26)</strong></p>
<ol>
<li>Add shop item statistic</li>
<li>Redesign attributes description dialog</li>
<li>Custom attributes description</li>
<li>Add a config settings for compact mode: hide all extra info</li>
<li>Fixed a restore from backup file bug</li>
<li>More fixes and improvements…</li>
</ol>
<p><strong>1.80.6（2021/01/22)</strong></p>
<ol>
<li>Now the item with loot boxes effect can be shared to market</li>
<li>New search page: now you can searching user by nickname</li>
<li>Filter team/makret items with time range</li>
<li>Quick add tasks notification</li>
<li>Media files can be ignored when performing backup.</li>
<li>More fixes and improvements…</li>
</ol>
<p><strong>1.80.5（2021/01/14)</strong></p>
<ol>
<li>Open 10/50 loot boxes by one click</li>
<li>Add unlock condition [Get selected item for specify times from Loot Boxes]</li>
<li>ATM interest rate settings</li>
<li>Input number for selling/eating tomatoes</li>
<li>Custom rest timer end sound effect</li>
<li>Add some user guide</li>
<li>Fixed some problems and make some improvements</li>
</ol>
<p><strong>1.80.4（2021/01/04)</strong></p>
<ol>
<li>Fix a crash on Android 6</li>
</ol>
<p><strong>1.80.3（2021/01/04)</strong></p>
<ol>
<li>Free style crop picture</li>
<li>View/Add the icon of the items in the market</li>
<li>When selecting task/item, now you can create a new one directly</li>
<li>Support COPY action for user achievements</li>
<li>A lot of fixes and improvements</li>
</ol>
<p><strong>1.80.0（2020/12/24)</strong></p>
<ol>
<li>Loot boxes shop item effect!</li>
<li>Integrated with Dropbox backup</li>
<li>Configurations for compact mode</li>
<li>Add photo select history bar</li>
<li>A lot of fixes and improvements</li>
</ol>
<p><strong>1.79.x（2020/12)</strong></p>
<ol>
<li>3 more unlock condition settings</li>
<li>Custom sound effects settings</li>
<li>Set item reward for achievements</li>
<li>Pomodoro timer record page</li>
<li>Create task from the Calendar page</li>
<li>5 new theme color.</li>
<li>Lots of improvements and fixes</li>
</ol>
<p><strong>1.78.x（2020/11)</strong></p>
<ol>
<li>Custom achievements unlock condition</li>
<li>Custom task experience points</li>
<li>Lots of improvements and fixes</li>
</ol>
<p><strong>1.77.1（2020/11/05)</strong></p>
<ol>
<li>List switch toolbar</li>
<li>Show completed task switch</li>
<li>List can be archived now</li>
<li>Add coin status card</li>
<li>Now you can create feelings for a user achivements</li>
<li>Add a setting to follow system’s night mode</li>
</ol>
<p><strong>1.77.0（2020/10/28)</strong></p>
<ol>
<li>Add Market module for community, in where you can share the shop item design or import the item</li>
<li>Fix the logic of the month repeat</li>
<li>Fix webdav auto backup not working when haven’t backup at least once</li>
</ol>
<p><strong>1.76.0（2020/10/13)</strong></p>
<ol>
<li>Default coin of subtask</li>
<li>Add in-app icons for creating shop item and achievements</li>
<li>Custom tomato price</li>
<li>Global sound effect enable settings</li>
<li>Now feelings can be search by task content</li>
</ol>
<p><strong>1.75.2（Released at 2020/10/05）</strong></p>
<ol>
<li>Default coin number setting of subtask</li>
<li>Add over 100+ icons that can be selected as shop item/achievements icons</li>
<li>add “Enable sound effect” settings</li>
<li>Filter feelings by task content and better ui of filters</li>
<li>Create pomodoro shortcuts</li>
<li>Custom tomatoes selling prices</li>
<li>Pomodoro page will keep screen on when counting down now</li>
<li>Fixed some problems</li>
</ol>
<p><strong>1.75.1（Released at 2020/09/20）</strong></p>
<ol>
<li>Fix lots bugs of 1.75.0</li>
</ol>
<p><strong>1.75.0（Released at 2020/09/16）</strong></p>
<ol>
<li>Gamify pomodoro timer</li>
<li>Custom task/list tag color</li>
<li>WebDAV auto backup</li>
<li>Hide modules settings</li>
<li>Lots of improvements and fixes</li>
</ol>
<p><strong>1.74.2（Released at 2020/08/23）</strong></p>
<ol>
<li>Portuguese Language</li>
</ol>
<p><strong>1.74.0（Released at 2020/08/13）</strong></p>
<ol>
<li>ATM: Deposit &amp; Withdrawal coins</li>
<li>Now support that selecting shop items as task reward</li>
<li>Shop item stock quantity setting</li>
<li>Improve animation and fixed some bugs</li>
<li>Add hint for Repeat Frequency setting</li>
<li>More.. (update description later)</li>
</ol>
<p><strong>1.73.0（Released at 2020/07/26）</strong></p>
<p><strong>Features:</strong></p>
<ul>
<li>User achievements</li>
<li>Exp decrease animation</li>
<li>Edit the completed time of history record</li>
<li>Team subtask coin setting</li>
</ul>
<p><strong>Improvement:</strong></p>
<ul>
<li>Add coin sound effect</li>
</ul>
<p><strong>Fix:</strong></p>
<ul>
<li>The problem of losing subtask coin setting after repeating a task</li>
</ul>
<p><strong>1.72.1（Released at 2020/06/14）</strong></p>
<p><strong>Features:</strong></p>
<ul>
<li>Clear achievements data</li>
</ul>
<p><strong>Improvement:</strong></p>
<ul>
<li>Better display of shop item description</li>
</ul>
<p><strong>Fix:</strong></p>
<ul>
<li>The problem of editing pictures of shop items</li>
<li>The problem of editing the text of feelings</li>
</ul>
<p><strong>1.72.0（Released at 2020/06/11）</strong></p>
<p><strong>Features:</strong></p>
<ul>
<li>Subtask Remind</li>
<li>Subtask Coin</li>
<li>App Widget<ol>
<li>Opacity Setting</li>
<li>Display Coin Number</li>
<li>Display Count Task Input Dialog</li>
</ol>
</li>
<li>Statistics Page Time Select</li>
<li>Inventory: Return Item</li>
<li>Add subtask support for team</li>
</ul>
<p><strong>Improvement:</strong></p>
<ul>
<li>Swipe a count task now will add 1 completed time instead of marking it as completed</li>
<li>Add Help Translate Button</li>
<li>Add Enabled Multi Exp Reward Setting for count task</li>
</ul>
<p><strong>Fix:</strong></p>
<ul>
<li>Fixed that transparent part of png picture showing black after cropping.</li>
<li>Fixed that App Widget not working well on some devices.</li>
<li>Fixed that Coin Number showing in the Detail Page when it’s set to 0.</li>
<li>Fixed that Swipe to Finish (no dialog mode) will make the page displayed incorrectly</li>
<li>Fixed that subtask cannot be created when click the ENTER button on some devices</li>
</ul>
<p><strong>1.71.3/1.71.4（Released at 2020/04/16）</strong></p>
<p><strong>Minor Fixes about icon and crash report</strong></p>
<p><strong>1.71.2（Released at 2020/04/14）</strong></p>
<p><strong>Features:</strong></p>
<ul>
<li><p>Turkish Language (thanks <strong>İbrahim DOĞAN</strong> for helping translation)</p>
</li>
<li><p>Customize task card background and opacity</p>
</li>
<li>Customize the action button text of inventory item</li>
<li>Feelings Favorites</li>
<li>Feelings Search</li>
</ul>
<p><strong>Improvement:</strong></p>
<ul>
<li><p>New Icon</p>
</li>
<li><p>Report type support multiple languages</p>
</li>
<li>Improve UI of the Settings Page</li>
<li>Improve the method of switching theme color and language. No need to restart the app to make it work.</li>
<li>Improve the crop picture page</li>
<li>Improve UI of the select list</li>
<li>Add shop item description showing on the shop item list page</li>
</ul>
<p><strong>Fixed:</strong></p>
<ul>
<li>Fixed bug that achievement unlock date incorrectly showing</li>
<li>Fixed bug that shop item picture showing empty when the file deleted. </li>
<li>Not clear the status of sub-tasks after single task become overdue.</li>
<li>Fixed bug that not enough space for Difficulty Degree to show in the Task Detail Page.</li>
<li>Fixed bug that after setting overdue task to finished, completed times of the next task not plus one.</li>
<li>Fixed bug that the max coin number not showing correctly in the task default settings.</li>
<li>Make the data backup/restore page scrollable.</li>
<li>Fixed that swipe to complete task not working well when fast swiping multiple tasks.</li>
<li>Now app widgets will show the Frozen status</li>
<li>Fixed bug that the progress bar on task page showing incorrect progress sometimes</li>
</ul>
<p><strong>Server Fixed（2020/4/13）</strong></p>
<ul>
<li>Fixed that report function not working</li>
</ul>
<p><strong>v1.71.1 (Released at 2020/03/17)</strong></p>
<p><strong>Improvement:</strong></p>
<ul>
<li>Better progress bar animation in task page</li>
</ul>
<p><strong>Fixed:</strong></p>
<ul>
<li>Fixed a bug that may cause crash when launching application on some devices</li>
<li>Fixed a bug about selecting photos</li>
</ul>
<a id="more"></a>
<p><strong>v1.71.0 (Released at 2020/03/13)</strong></p>
<p><strong>Features:</strong></p>
<ul>
<li><p>Feelings Feature</p>
</li>
<li><p>Add Swipe Action: Finish Task (No Dialog)</p>
</li>
</ul>
<p><strong>Fixed:</strong></p>
<ul>
<li><p>Fixed bug that task card state showing incorrectly</p>
</li>
<li><p>Fixed bug that task which was undo may be disappeared when overdue</p>
</li>
<li><p>Fixed that the selected sort not showing correctly</p>
</li>
</ul>
<p><strong>v1.70.6 (Released at 2020/03/09)</strong></p>
<p><strong>Improvement:</strong> </p>
<ul>
<li>Make the Achievement unlocked Hint colors same as the theme color</li>
</ul>
<p><strong>Fixed：</strong></p>
<ul>
<li><p>Fixed overdue dialog status not showing correctly after clicking the button</p>
</li>
<li><p>Fixed a bug that COPY cannot copy sub-tasks</p>
</li>
<li>Fixed a crash occurred when using “Move To…”</li>
<li>Fixed the Selecting Card not correctly showing on some devices</li>
</ul>
<p><strong>v1.70.5 (Released at 2020/03/06)</strong></p>
<p><strong>Fixed：</strong></p>
<ul>
<li>To-Do Card keep loading when change theme color or enable/disable night mode</li>
</ul>
<p><strong>v1.70.4 (Released at 2020/03/05)</strong></p>
<p><strong>Improvements：</strong></p>
<ul>
<li>Shop Page will show coin number when there is no items</li>
<li>Can access the Coin Detail Page by clicking the coin number in the Shop Page</li>
<li>Improve text format of the app widget in English</li>
<li>Can access the Task Detail Page by clicking the task on the App Widget</li>
</ul>
<p><strong>Fixed：</strong></p>
<ul>
<li>Team activity incorrect showing style</li>
</ul>
<p><strong>v1.70.3 (Released at 2020/03/05)</strong></p>
<p><strong>Improvements:</strong></p>
<ul>
<li>Shop Page will now show coin number when there is no items</li>
<li>Click the coin number in the Shop Page to enter Coin Detail Page now</li>
<li>Improve the English text format on the App Widget</li>
<li>Click the App Widget item to enter Task Detail Page</li>
</ul>
<p><strong>Fixed：</strong></p>
<ul>
<li>Fixed when Filter Today, the footer hint “xx task(s) is not yet started” not showing after completing task</li>
</ul>
<p><strong>v1.70.3 (Released at 2020/03/05)</strong></p>
<p><strong>Important Fixes:</strong></p>
<ul>
<li>Fixes bugs about input coin number</li>
<li>Fixes bugs that sub-tasks not refreshing correctly</li>
<li>Fixes bugs that cannot like others’ activity</li>
<li>Fixes bugs that App Widget cannot finishing tasks</li>
</ul>
<p><strong>v1.70.2 (Released at 2020/03/04)</strong></p>
<p><strong>Features：</strong></p>
<ul>
<li><p>Community is now available for all time zone</p>
</li>
<li><p>Copy Tasks</p>
</li>
<li>Support edit new task default settings</li>
<li><p>Shop List</p>
</li>
<li><p>Improve App Widget actions</p>
</li>
<li>Add menu for ended tasks for In Calendar Page</li>
</ul>
<p><strong>Improvements</strong>：</p>
<ul>
<li><p>Improve animations of task card </p>
</li>
<li><p>Remove an unneeded permission</p>
</li>
<li>Add complete sound</li>
<li>Improve History Page UI style</li>
<li>Add “Lost Calendar Write/Read Permission” Dialog when enabling System Calendar Reminder and not granted permissions</li>
</ul>
<p><strong>Fixed：</strong></p>
<ul>
<li>Fixes bugs about Count Task in compact mode</li>
<li>Fixes bugs about repeat tasks</li>
<li>Fixes crash that may occurs when delete sub-tasks</li>
<li>Fixes crash that occurs when input incorrect WebDAV URL</li>
<li>Fixes incorrect theme color showing , which may occurs after restore a backup</li>
</ul>
]]></content>
      <categories>
        <category>项目</category>
        <category>人升Q&amp;A</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>English</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>Android 5.0共享元素崩溃</title>
    <url>/post/e0a2859e.html</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>后台监测到了数个仅限于Android5的崩溃问题，日志大概如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Fatal Exception: java.lang.NullPointerException: Attempt to invoke virtual method &#39;android.view.ViewParent android.view.View.getParent()&#39; on a null object reference at android.view.ViewOverlay$OverlayViewGroup.add(ViewOverlay.java:164) at android.view.ViewGroupOverlay.add(ViewGroupOverlay.java:63) at android.app.EnterTransitionCoordinator.startRejectedAnimations(EnterTransitionCoordinator.java:598) at android.app.EnterTransitionCoordinator.startSharedElementTransition(EnterTransitionCoordinator.java:325) at android.app.EnterTransitionCoordinator.access$200(EnterTransitionCoordinator.java:42) at android.app.EnterTransitionCoordinator$5$1.run(EnterTransitionCoordinator.java:389) at android.app.ActivityTransitionCoordinator.startTransition(ActivityTransitionCoordinator.java:698) at android.app.EnterTransitionCoordinator$5.onPreDraw(EnterTransitionCoordinator.java:386) at android.view.ViewTreeObserver.dispatchOnPreDraw(ViewTreeObserver.java:847) at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1985) at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1077) at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:5845) at android.view.Choreographer$CallbackRecord.run(Choreographer.java:767) at android.view.Choreographer.doCallbacks(Choreographer.java:580) at android.view.Choreographer.doFrame(Choreographer.java:550) at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:753) at android.os.Handler.handleCallback(Handler.java:739) at android.os.Handler.dispatchMessage(Handler.java:95) at android.os.Looper.loop(Looper.java:135) at android.app.ActivityThread.main(ActivityThread.java:5272) at java.lang.reflect.Method.invoke(Method.java) at java.lang.reflect.Method.invoke(Method.java:372) at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:909) at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:704)</span><br></pre></td></tr></table></figure>
<p>查了下资料，发现这是 Android 5.0 系统的内置Bug。</p>
<p>在执行切换动画的时候，有一定条件下会导致崩溃问题。</p>
<p>并且，在 API level 22（即 Android 5.1）之后，这个  bug 已经被修复了。</p>
<p>最简单也是最有效的解决方法：</p>
<p><strong>只有在API level 22的情况下，再执行切换动画。</strong></p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>也有一些想要在 Android 5.0 继续使用切换动画，避免崩溃的解决方案。</p>
<blockquote>
<p>这个 Android 系统 bug 与分享元素的选取排除（’rejected’）的处理有关。如果一个分享元素在执行动画的时候没有 attached to the window 就有可能被拒绝，也就是当 View 可见性为 <code>GONE</code> 的时候。</p>
<p>所以，解决方法就是在执行切换动画的时候，检查每一个共享元素View，并且将可见性改为 <code>VISIBLE</code>。</p>
<p><a href="https://stackoverflow.com/users/1435436/glenn-schmidt">Glenn Schmidt</a></p>
</blockquote>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://stackoverflow.com/questions/34658911/entertransitioncoordinator-causes-npe-in-android-5-0">https://stackoverflow.com/questions/34658911/entertransitioncoordinator-causes-npe-in-android-5-0</a></p>
]]></content>
      <categories>
        <category>技术</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>人升LifeUp常见问题-事项篇</title>
    <url>/post/423cff64.html</url>
    <content><![CDATA[<p>这里会讲解事项相关的内容~<br>比如怎么创建工作日事项、计数事项如何使用以及各种使用案例。</p>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ol>
<li><a href="#▌建立事项">建立事项</a><br>1.1 <a href="#设置介绍">设置介绍</a><br>   1.1.1 <a href="#重复频次">重复频次</a><pre><code>1.1.1.1 [艾宾浩斯记忆法](#艾宾浩斯记忆法的时间表)
1.1.1.2 [设置忽略日（每周几，如工作日事项）](#设置忽略日（每周几，如工作日事项）)
</code></pre>   1.1.2 <a href="#完成奖励">完成奖励</a><br>   1.1.3 <a href="#目标重复次数">目标重复次数</a><br>   1.1.4 <a href="#计数事项">计数事项</a><br>1.2 <a href="#例子">例子</a><br>   1.2.1 <a href="#普通待办事项/琐事/购物清单">普通待办事项/琐事/购物清单</a><br>   1.2.2 <a href="#习惯养成（每日早起、每周跑步等）">习惯养成（每日早起、每周跑步等）</a><br>   1.2.3 <a href="#每周一-周日">每周一-周日</a><br>   1.2.4 <a href="#当天23:00-第二天2:00">当天23:00-第二天2:00</a><br>   1.2.5 <a href="#指定每周几（仅工作日、仅周末等）">指定每周几（仅工作日、仅周末等）</a><br>   1.2.6 <a href="#坏习惯惩罚">坏习惯惩罚</a></li>
<li><a href="#▌清单管理">清单管理</a><br>2.1 <a href="#清单分类">清单分类</a><br>2.2 <a href="#筛选排序">筛选排序</a><br>2.3 <a href="#自定义排序">自定义排序</a></li>
<li><a href="#▌稍后阅读">稍后阅读</a><a id="more"></a>
</li>
</ol>
<h1 id="▌新建事项"><a href="#▌新建事项" class="headerlink" title="▌新建事项"></a>▌新建事项</h1><h2 id="设置介绍"><a href="#设置介绍" class="headerlink" title="设置介绍"></a>设置介绍</h2><h3 id="重复频次"><a href="#重复频次" class="headerlink" title="重复频次"></a>重复频次</h3><h4 id="艾宾浩斯记忆法的时间表"><a href="#艾宾浩斯记忆法的时间表" class="headerlink" title="艾宾浩斯记忆法的时间表"></a>艾宾浩斯记忆法的时间表</h4><img src="/post/423cff64/task_07.jpg" class="">
<p>依次重复频率为当天→1天后→2天后→4天后→7天后→15天后→30天后</p>
<p><br /></p>
<h4 id="设置忽略日（每周几，如工作日事项）"><a href="#设置忽略日（每周几，如工作日事项）" class="headerlink" title="设置忽略日（每周几，如工作日事项）"></a>设置忽略日（每周几，如工作日事项）</h4><img src="/post/423cff64/task_05.jpg" class="">
<img src="/post/423cff64/task_06.jpg" class="">
<p>设置重复频率为<code>每日</code>之后，会出现一个<code>设置忽略</code>的按钮。</p>
<p><br /></p>
<h3 id="完成奖励"><a href="#完成奖励" class="headerlink" title="完成奖励"></a>完成奖励</h3><img src="/post/423cff64/task_08.jpg" class="">
<ul>
<li>仅文本<br>其实这是实现<strong>商店功能</strong>前的替代品。</li>
</ul>
<p>设置奖励之后，「经验值弹窗」会展示奖励内容。</p>
<ul>
<li>选择商品<br>你可以选择一个已经创建好的商品作为完成奖励。<br>当完成事项后，奖励会自动放置到仓库中。<blockquote>
<p>后续会加入快捷创建、数量和随机奖励的支持</p>
</blockquote>
</li>
</ul>
<p><br /></p>
<h3 id="目标重复次数"><a href="#目标重复次数" class="headerlink" title="目标重复次数"></a>目标重复次数</h3><blockquote>
<p>仅适用于重复事项</p>
</blockquote>
<p>设置你想进行重复事项的目标次数，达到目标后，事项会自动终止。</p>
<img src="/post/423cff64/task_11.jpg" class="">
<p><strong>比如你想立个小目标，坚持30天学外语。</strong></p>
<p>那么，可以设置一个重复频次为<code>每日</code>，目标重复次数为<code>30</code>的待办事项。</p>
<p>进行该设置的事项，会在事项内容后面显示进度（当前次数/目标次数）</p>
<p><br /></p>
<h3 id="计数事项"><a href="#计数事项" class="headerlink" title="计数事项"></a>计数事项</h3><img src="/post/423cff64/task_09.jpg" class="">
<p>点击<code>事项类型</code>可以将事项设置为「计数事项」。</p>
<img src="/post/423cff64/task_10.jpg" class="">
<p>计数事项会在你点击「完成小圆圈」的时候，弹框让你记录完成次数。<br>只有达到或超过了目标次数，才会标记为「完成状态」。<br>如果还没有达到，则会帮你记录目前进度。</p>
<p><strong>使用场景：</strong></p>
<ul>
<li>每天喝7杯水（重复频次设为<code>每日</code>，计数目标次数设为<code>7</code>）</li>
<li>每天背诵30个单词（重复频次设为<code>每日</code>，计数目标次数设为<code>30</code>）</li>
<li>每周完成4次打扫卫生（重复频次设为<code>每日</code>，计数目标次数设为<code>4</code>）</li>
</ul>
<hr>
<h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p>人升的事项依靠着<strong>开始时间、期限时间和重复频次</strong>的配合，可以建立出各种复杂情况的待办事项。</p>
<p><strong>以下是一些情况的例子：</strong></p>
<p><br /></p>
<h3 id="1-普通待办事项-琐事-购物清单"><a href="#1-普通待办事项-琐事-购物清单" class="headerlink" title="1. 普通待办事项/琐事/购物清单"></a>1. 普通待办事项/琐事/购物清单</h3> <img src="/post/423cff64/task_01.jpg" class="">
<p>这种类型的事项，不需要关心“期限时间”，重复频次默认也是“单次”。</p>
<p>所以，<strong>不需要额外设置。只需要填好“待办事项”内容即可。</strong></p>
<p><br /></p>
<h3 id="2-习惯养成（每日早起、每周跑步等）"><a href="#2-习惯养成（每日早起、每周跑步等）" class="headerlink" title="2. 习惯养成（每日早起、每周跑步等）"></a>2. 习惯养成（每日早起、每周跑步等）</h3> <img src="/post/423cff64/task_02.jpg" class="">
<p>调整<strong>“重复频次”</strong>为相应的“每日”或者“每周”后，再根据情况看要不要调整<strong>“期限日期”</strong>。</p>
<p>当“重复频次”不为“单次”的情况下，期限日期会默认为“当天”。</p>
<p>对于“每日”事项来说，这样设置一般是合理的。</p>
<p>而对于重复频次大于“每日”的事项，要根据具体情况调整期限：</p>
<blockquote>
<ol>
<li>比如1号的时候建立“每周”事项，不改期限日期。那么下一次的事项的时间会在2-8号。</li>
<li>如果你调整期限日期到2号。那么下一次的事项时间就会在3-9号。（相当于延后一天）</li>
</ol>
</blockquote>
<p><br /></p>
<h3 id="3-每周一-周日"><a href="#3-每周一-周日" class="headerlink" title="3. 每周一-周日"></a>3. 每周一-周日</h3> <img src="/post/423cff64/task_03.jpg" class="">
<p>通过期限时间和重复频次的配合，<strong>你能轻松地设置出“星期一”到“星期日”的每周事项。</strong></p>
<p><strong>只要设置重复频次为“每周”，然后期限时间设置为“周末”即可~。</strong></p>
<p>人升弱化了开始时间的概念，在绝大多的时候可以让相应的开始时间自动计算得出。</p>
<p><br /></p>
<h3 id="4-当天23-00-第二天2-00"><a href="#4-当天23-00-第二天2-00" class="headerlink" title="4. 当天23:00-第二天2:00"></a>4. 当天23:00-第二天2:00</h3> <img src="/post/423cff64/task_04.jpg" class="">
<p>通过开始时间、期限时间和重复频次的配合，你能轻松地设置出情况很复杂的待办事项。</p>
<p>只需要设置<strong>开始时间为具体的“当天23：00”</strong>，期限时间为<strong>具体的“第二天2：00”</strong>，<strong>重复频次为“每日”</strong>即可。</p>
<p><br /></p>
<h3 id="5-指定每周几（仅工作日、仅周末等）"><a href="#5-指定每周几（仅工作日、仅周末等）" class="headerlink" title="5. 指定每周几（仅工作日、仅周末等）"></a>5. 指定每周几（仅工作日、仅周末等）</h3> <img src="/post/423cff64/task_05.jpg" class="">
 <img src="/post/423cff64/task_06.jpg" class="">
<p>设置“重复频次”为“每日”后，在“重复频次”的输入框右侧点击“设置忽略”。然后就能指定每周几重复了。</p>
<p><br /></p>
<h3 id="6-坏习惯惩罚"><a href="#6-坏习惯惩罚" class="headerlink" title="6. 坏习惯惩罚"></a>6. 坏习惯惩罚</h3><p>虽然《人升》并没有专门的「坏习惯」板块，<strong>但其实是支持经验值/金币惩罚的（可以在<code>自定义设置</code>中更改惩罚系数，金币默认为不惩罚）。</strong></p>
<p><strong>要实现坏习惯惩罚的效果的话，只需要逆向创建事项即可。</strong><br><strong> 另外，也可以使用商品的【使用效果】特性来实现负面惩罚。</strong></p>
<p><br /></p>
<p><strong>比如：</strong></p>
<p>你想当自己「贪食」的时候，给予自己惩罚。</p>
<p>那么，完全可以创建一个<strong>“每日坚持不贪食”</strong>的待办事项。</p>
<p><strong>当你犯错的时候，只要不完成这个事项，或者直接放弃当天这个事项就能接受惩罚了。</strong></p>
<hr>
<h1 id="▌清单管理"><a href="#▌清单管理" class="headerlink" title="▌清单管理"></a>▌清单管理</h1><h2 id="清单分类"><a href="#清单分类" class="headerlink" title="清单分类"></a>清单分类</h2> <img src="/post/423cff64/list_01.jpg" class="" title="清单入口">
<p>在<code>告示板</code>界面右上角，可以点击第一个按钮（即<code>清单</code>按钮），进入选择清单界面。</p>
 <img src="/post/423cff64/list_02.jpg" class="" title="点击列表项目右侧的按钮有额外菜单">
<p><strong>在这里可以：</strong></p>
<ul>
<li><p><strong>切换清单</strong></p>
<p>直接点击列表项即可</p>
</li>
<li><p><strong>新建/重命名清单</strong></p>
<p>所有清单不支持重命名</p>
</li>
<li><p><strong>删除清单</strong></p>
<p>只有在清单为空的时候，才能进行删除操作</p>
</li>
</ul>
<p><br /></p>
<p><code>默认清单</code>不可删除，但可以重命名。</p>
<p><code>所有清单</code>会显示所有清单的待办事项，该清单也是不可删除的，并且不可重命名。<br><br /></p>
<h2 id="筛选排序"><a href="#筛选排序" class="headerlink" title="筛选排序"></a>筛选排序</h2> <img src="/post/423cff64/options_01.jpg" class="" title="更多选项">
<p>在<code>告示板</code>界面右上角，点击最右侧的按钮（即<code>更多选项</code>按钮），可以进行<code>筛选</code>和<code>排序</code>设置。</p>
 <img src="/post/423cff64/options_02.jpg" class="" title="时间筛选设置">
<p>如果<strong>你偏好于隐藏未开始的事项</strong>，可以在这里选择<code>显示今天事项</code>。</p>
<p>这个选项会只显示<strong>今天已经开始或将于今天某个时刻开始</strong>的事项。</p>
<p><br /></p>
<h2 id="自定义排序"><a href="#自定义排序" class="headerlink" title="自定义排序"></a>自定义排序</h2><p>长按即可拖动待办事项卡片进行排序。</p>
<hr>
<h1 id="▌稍后阅读"><a href="#▌稍后阅读" class="headerlink" title="▌稍后阅读"></a>▌稍后阅读</h1> <img src="/post/423cff64/read_01.jpg" class="" title="在其他应用选择“其他”分享">
 <img src="/post/423cff64/read_02.jpg" class="" title="快速建立「稍后阅读」事项">
<p><strong>《人升》可以接受其他应用分享过来的信息，用以快速建立「稍后阅读」事项。</strong>并且默认会勾选“学识”属性。</p>
<p><strong>支持大部分提供分享功能的应用：</strong>如“微博”、“知乎”、“浏览器”、“Twitter”等。</p>
]]></content>
      <categories>
        <category>项目</category>
        <category>人升Q&amp;A</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>人升更新介绍#1.70.1 | 02/22 简洁模式</title>
    <url>/post/c7d8419c.html</url>
    <content><![CDATA[<p>大家好~欢迎查阅本次更新日志。</p>
<p><strong>v1.70.1</strong>的版本已经于2月14号发布了，修复了v1.70.0的数个问题。遇到一些奇怪的问题的用户可以升级下版本。</p>
<p>今年以来，「人升」陆续地登上了更多的应用市场：应用宝、华为应用市场、豌豆荚、360应用市场、UC等。</p>
<p>现在可以在上述的一些平台进行应用更新了。</p>
<p>（之前仅登录了酷安、小米、魅族、Google Play市场。华为应用市场的之前被侵权了，这次也靠着大家的举报和申诉成功拿回来了管理权）</p>
<p><strong>本文会简单介绍各个新功能，以及其使用方法。</strong></p>
<p>比如讲解了如何用坚果云做WebDAV备份。</p>
<h2 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h2><ol>
<li><p><strong>简洁模式</strong></p>
</li>
<li><p><strong>图片附件</strong></p>
</li>
<li><p><strong>WebDAV备份</strong></p>
</li>
<li><p><strong>自定义属性</strong></p>
</li>
<li><p><strong>更多改进</strong></p>
<p>5.1 <strong>“撤销”功能优化</strong></p>
<p>5.2 <strong>动态显示效果优化</strong></p>
</li>
<li><p><strong>详细更新日志</strong></p>
</li>
</ol>
<a id="more"></a>
<hr>
<h2 id="简洁模式"><a href="#简洁模式" class="headerlink" title="简洁模式"></a>简洁模式</h2> <img src="/post/c7d8419c/01.jpg" class="">
<p>简洁模式的卡片会更加紧凑。</p>
<p>每一屏能显示更多的代办卡片。</p>
<p><strong>卡片上会有各种展示各种信息的图标：</strong></p>
<p>备注、计数事项进度、子任务进度、经验值、金币、重复、提醒、开始/期限日期等。</p>
<p>并且只会展示进度和日期的详细信息，而其他的只是提醒<strong>有无</strong>：</p>
<p>比如有填写备注，那么只会展示一个备注图标。详细的备注信息可以点进事项详情里面查看。</p>
<h3 id="启用方法"><a href="#启用方法" class="headerlink" title="启用方法"></a>启用方法</h3> <img src="/post/c7d8419c/02.jpg" class="">
<p>主页，点击侧边栏，点击进入“实验”页面，开启「简洁模式」。</p>
<h3 id="后续计划"><a href="#后续计划" class="headerlink" title="后续计划"></a>后续计划</h3><ul>
<li>实现用户可自定义展示的内容，比如展示金币数量。</li>
</ul>
<hr>
<h2 id="图片附件"><a href="#图片附件" class="headerlink" title="图片附件"></a>图片附件</h2> <img src="/post/c7d8419c/03.jpg" class="">
<p>现在，你可以为你的每个待办事项贴上<strong>至多三张图片</strong>。</p>
<p>并且，可以方便地在「事项详情」页面查看图片。</p>
<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3> <img src="/post/c7d8419c/04.jpg" class="">
<p>新建或是编辑待办事项的时候，点击右上角首个按钮，即可新增/删除图片附件。</p>
<h3 id="其他细节"><a href="#其他细节" class="headerlink" title="其他细节"></a>其他细节</h3><ul>
<li><p>1.70.0版本中，存在 Bug 会导致重复事项不能继承到图片附件。</p>
<p><strong>1.70.1版本已经修复该问题。</strong></p>
</li>
</ul>
<ul>
<li><p>应用会将你的图片复制到<code>Android/media/net.sarasarasa.net/</code>，理论上也会被系统图库扫描到。</p>
<p>可以使用系统图库应用/文件管理应用等进行管理。</p>
</li>
</ul>
<hr>
<h2 id="WebDAV备份"><a href="#WebDAV备份" class="headerlink" title="WebDAV备份"></a>WebDAV备份</h2> <img src="/post/c7d8419c/05.jpg" class="">
<p>备份功能现在新增了对 WebDAV 协议的支持。</p>
<p>只要填写好了 WebDAV 地址、账号和密码之后，就能使用云备份和恢复功能了。</p>
<p>因为一些原因，暂时还是只支持手动备份。</p>
<p>并且由于恢复功能比较危险，也有用户因此损失过数据，<strong>该版本还新增了「撤销上次恢复」的功能。</strong></p>
<h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="获取-WebDAV-地址、账号、密码"><a href="#获取-WebDAV-地址、账号、密码" class="headerlink" title="获取 WebDAV 地址、账号、密码"></a>获取 WebDAV 地址、账号、密码</h4><p>理论上任意支持WebDAV协议的服务都可以使用。</p>
<p><strong>国内可以使用坚果云：</strong></p>
<ol>
<li><p>首先打开坚果云官网，注册并且登录账号。</p>
</li>
<li><p>点击<strong>右上角用户名</strong>→<code>账号信息</code>。</p>
</li>
<li><p>切换至安全选项。</p>
 <img src="/post/c7d8419c/06.png" class="">
</li>
<li><p>在右边<code>第三方应用管理</code>处，点击新增应用，输入名称（如：LifeUp）</p>
</li>
<li><p>然后点击<code>生成密码</code>，保存此处的<code>服务器地址</code>、<code>账号</code>和<code>密码</code>等信息，然后进入应用内进行配置。</p>
 <img src="/post/c7d8419c/07.png" class="">
</li>
</ol>
<h4 id="应用配置"><a href="#应用配置" class="headerlink" title="应用配置"></a>应用配置</h4><p><code>侧边栏</code>→<code>设置</code>→<code>数据备份/恢复/清除</code>→<code>WebDAV 配置</code>，填写地址、账号密码等信息，并且测试通过。</p>
<p>随之就能在<code>备份</code>和<code>恢复</code>操作上选择 WebDAV 了。</p>
<h3 id="其他细节-1"><a href="#其他细节-1" class="headerlink" title="其他细节"></a>其他细节</h3><ul>
<li><p><strong>当服务器地址填写错误的时候，点击测试连接可能会导致应用崩溃。</strong></p>
<p>这是个 bug ，下个版本会进行修复。</p>
</li>
<li><p><strong>备份会放在 WebDAV 服务器上的LifeUp文件夹内，请勿误操作删除。</strong></p>
</li>
</ul>
<hr>
<h2 id="自定义属性"><a href="#自定义属性" class="headerlink" title="自定义属性"></a>自定义属性</h2> <img src="/post/c7d8419c/08.jpg" class="">
<p>自定义属性一直有需求的反馈，这个版本也加上了自定义的功能。</p>
<p>当然，因为增删属性会涉及到大量改动，暂时只支持修改，不支持新增。</p>
<h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3> <img src="/post/c7d8419c/09.jpg" class="">
<p><code>侧边栏</code>→<code>设置</code>→<code>自定义设置</code>→<code>自定义属性</code>。</p>
<p>然后就可以修改任意一个属性的图标和文本定义，也有恢复默认的功能。</p>
<p><strong>由于修改文本会影响到一些页面显示，建议还是使用两个字。</strong></p>
<hr>
<h2 id="更多改进"><a href="#更多改进" class="headerlink" title="更多改进"></a>更多改进</h2><h3 id="撤销功能优化"><a href="#撤销功能优化" class="headerlink" title="撤销功能优化"></a>撤销功能优化</h3> <img src="/post/c7d8419c/10.jpg" class="">
 <img src="/post/c7d8419c/11.jpg" class="">
<p>你现在可以凭自己的喜好，<strong>设置撤销弹窗的显示长短。</strong></p>
<p>在历史页面，现在菜单也会显示<code>撤销</code>选项。</p>
<p>并且，<strong>任意时间点的单次事项</strong>也都开放了<code>撤销</code>选项。（以前是仅当天事项可撤销）</p>
<p><br /></p>
<h3 id="动态显示效果优化"><a href="#动态显示效果优化" class="headerlink" title="动态显示效果优化"></a>动态显示效果优化</h3> <img src="/post/c7d8419c/12.jpg" class="">
 <img src="/post/c7d8419c/13.jpg" class="">
<p>简单优化了动态的显示效果，下个版本还会继续修改时间的显示。</p>
<hr>
<h2 id="详细更新日志"><a href="#详细更新日志" class="headerlink" title="详细更新日志"></a>详细更新日志</h2><p><strong>1.70.1（2020/02/14）</strong></p>
<p><strong>功能</strong></p>
<ol>
<li>可进行“撤销”对话框显示时长设置（事项设置内）</li>
</ol>
<p><strong>优化</strong></p>
<ol>
<li>历史页面的操作逻辑，现可在“菜单”中进行“撤销”操作</li>
<li>更改撤销逻辑，现在可以撤销任意时间的单次事项</li>
<li>优化动态的显示效果</li>
</ol>
<p><strong>修复</strong></p>
<ol>
<li>修复多个页面不该出现的附件按钮</li>
<li>修复修改自定义属性的文本定义后，在新建事项页面不生效的问题</li>
<li>修复图片附件不会被重复事项继承的问题</li>
</ol>
<p><strong>1.70.0（2020/02/11）</strong></p>
<p><strong>功能</strong></p>
<ol>
<li>简洁模式：全新的简洁待办卡片</li>
<li>图片附件：每个待办事项可以附上至多3张图片</li>
<li>支持WebDAV云备份设置</li>
<li>自定义属性的名称和图标</li>
<li>现支持「撤销上次恢复」</li>
</ol>
<p><strong>优化</strong></p>
<ol>
<li>优化各个页面卡片显示</li>
<li>恢复备份时，现在会对文件格式进行检测，并且可能会警告弹窗。</li>
</ol>
<p><strong>修复</strong></p>
<ol>
<li>修复桌面小部件的颜色不正确问题</li>
<li>修复选中状态下，点击圆圈仍是完成事项的问题</li>
</ol>
<p><br /></p>
<p>扫码关注人升公众号，可以尽快收到更新介绍<del>而且我们说不定能赚点服务器钱:)</del></p>
 
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
        <tag>更新介绍</tag>
      </tags>
  </entry>
  <entry>
    <title>人升更新介绍#1.69.0 | 01/02 子任务</title>
    <url>/post/3651a964.html</url>
    <content><![CDATA[<p>上周六已经发布了本次1.69.0的更新。</p>
<p>更新内容覆盖面较广，本以为会出现很多问题，现在看来还好~</p>
<p>因为更新比较匆忙，当时没写更新介绍，现在补上。</p>
<p>有的更新内容不看更新日志不容易察觉，比如团队事项编辑的开放。</p>
<p>这次更新的主题是<strong>加强实用性，增强各个功能模块</strong>。</p>
<p>开始正题之前，先发下这篇文章的总览：</p>
<h2 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h2><ol>
<li><p><strong>子任务</strong></p>
</li>
<li><p><strong>逾期处理</strong></p>
</li>
<li><p><strong>自定义排序以及菜单重制</strong></p>
</li>
<li><p><strong>桌面小部件升级</strong></p>
</li>
<li><p><strong>更多改进</strong></p>
<p>5.1 <strong>冻结</strong></p>
<p>5.2 <strong>编辑团队事项</strong></p>
</li>
<li><p><strong>详细更新日志</strong></p>
</li>
</ol>
<a id="more"></a>
<hr>
<h2 id="子任务"><a href="#子任务" class="headerlink" title="子任务"></a>子任务</h2><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3> <img src="/post/3651a964/01.jpg" class="">
<p>在新建待办事项页面加入了增加子任务的功能，子任务的目前仅支持内容描述。</p>
<p><strong>输入完成后可按回车键建立多条子任务。</strong></p>
<p>也可以在建立的时候，就点击<strong>小圆圈</strong>标记子任务<strong>已完成</strong>。</p>
<p>长按右方的按钮可以进行<strong>拖动排序</strong>。</p>
<h3 id="卡片"><a href="#卡片" class="headerlink" title="卡片"></a>卡片</h3> <img src="/post/3651a964/02.jpg" class="">
<p>设置了子任务的任务卡片会标识出子任务的完成进度。</p>
<p>但是，子任务是不严格要求完成的。</p>
<p><strong>可以在没有完成所有子任务的情况下，完成主任务。</strong></p>
<h3 id="标记完成"><a href="#标记完成" class="headerlink" title="标记完成"></a>标记完成</h3> <img src="/post/3651a964/03.jpg" class="">
<p><strong>如何标记子任务的完成情况？</strong></p>
<ol>
<li><strong>点击任务卡片</strong>，在<strong>事项详情页面</strong>标记。</li>
<li>长按任务卡片，点击编辑按钮，在<strong>编辑待办事项页面</strong>标记。</li>
<li>建立待办事项的时候标记。</li>
</ol>
<h3 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h3><p>计划实现子任务的提醒功能，算是间接实现多提醒。</p>
<p><br /></p>
<h3 id="逾期处理"><a href="#逾期处理" class="headerlink" title="逾期处理"></a>逾期处理</h3><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>以往版本，逾期的情况下只会弹出一个提示。</p>
<p><strong>一是</strong>实际完成，但是没有标记完成的情况下很不方便：需要手动去历史页面，找到该事项，然后点击”设为完成“。</p>
<p><strong>二是</strong>缺少经验值惩罚的提示，很多用户可能没意识到有这么一回事。</p>
<h3 id="对策"><a href="#对策" class="headerlink" title="对策"></a>对策</h3> <img src="/post/3651a964/04.jpg" class="">
<p>于是这个版本加入了这个逾期处理的对话框。</p>
<p>窗口会展示所有逾期事项，以及其引起的经验值惩罚数值（和金币惩罚，如果你设置了的话）。</p>
<p><strong>可以点击每个卡片的按钮，快速将事项标记为完成状态，撤销惩罚，给予完成奖励。</strong></p>
<p>为了防止误操作，点击空白处是不能关掉这个窗口的。</p>
<p><strong>在操作完成后，点击窗口右上方的”完成“按钮即可。</strong></p>
<hr>
<h2 id="自定义排序"><a href="#自定义排序" class="headerlink" title="自定义排序"></a>自定义排序</h2><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><p>这个版本对大部分列表页面都做了自定义排序的处理。</p>
<p>如今你可以<strong>拖动进行待办事项卡片、清单、商店或者是仓库商品的排序</strong>了。</p>
 <img src="/post/3651a964/06.jpg" class="">
<p>其中，主界面的排序也专门新增了一个”自定义“选项。</p>
<p><strong>该选项会保存上次你拖动排序的结果，方便临时切换到其他排序依据。</strong></p>
<p><br /></p>
<h3 id="菜单重制"><a href="#菜单重制" class="headerlink" title="菜单重制"></a>菜单重制</h3> <img src="/post/3651a964/05.jpg" class="">
<p>因为以往版本的菜单是长按弹出，与拖动排序的长按拖动会有冲突。</p>
<p>该版本也重制了一遍菜单，现在改为顶部菜单栏。</p>
<p>相应地，也加入了<strong>批量删除/移至</strong>的操作：</p>
<p><strong>长按一个待办事项卡片，进入选中状态，然后再点击其他卡片，即可进行批量操作。</strong></p>
<p>商店页面也加入了类似的设计，实现批量下架。</p>
<hr>
<h2 id="桌面小部件升级"><a href="#桌面小部件升级" class="headerlink" title="桌面小部件升级"></a>桌面小部件升级</h2> <img src="/post/3651a964/07.jpg" class="">
<h3 id="清单选择"><a href="#清单选择" class="headerlink" title="清单选择"></a>清单选择</h3><p>最主要的改动是加上了清单选择。</p>
<p>现在可以实现同时使用多个桌面小部件，每个桌面小部件对应一个清单。</p>
<h3 id="主题色适配"><a href="#主题色适配" class="headerlink" title="主题色适配"></a>主题色适配</h3><p>现在桌面小部件的顶部颜色会跟随主题色变化。</p>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>因为事项类型的显示比较冗余，该版本去除了显示。</p>
<hr>
<h2 id="更多改进"><a href="#更多改进" class="headerlink" title="更多改进"></a>更多改进</h2><h3 id="冻结"><a href="#冻结" class="headerlink" title="冻结"></a>冻结</h3> <img src="/post/3651a964/08.jpg" class="">
<p>现在，你可以冻结待办事项了，适用于那些因为特殊原因一段时间没法完成重复事项的情况。</p>
<p>冻结期间的事项不会因为逾期产生历史记录和惩罚。</p>
<p>在需要的时候可以解冻，或者直接标记完成也可以实现解冻效果。</p>
<p><br /></p>
<h3 id="编辑团队事项"><a href="#编辑团队事项" class="headerlink" title="编辑团队事项"></a>编辑团队事项</h3><p>该版本开放了团队事项的编辑功能。</p>
<p><strong>你可以设置团队事项的：</strong></p>
<ul>
<li>备注</li>
<li>增添子任务</li>
<li>设置重要/困难程度（不影响经验值，可用于排序）</li>
<li>金币</li>
<li>提醒</li>
</ul>
<p><strong>已知的一个小Bug：</strong></p>
<p>事项详情页面仍无法点进编辑页面。</p>
<p><strong>解决方法：</strong>你可以在主页面进行操作。</p>
<p><br /></p>
<h3 id="Material-Components升级"><a href="#Material-Components升级" class="headerlink" title="Material Components升级"></a>Material Components升级</h3><p>这个版本针对使用的UI组件进行了升级，改进了各个UI控件的显示效果。</p>
<p>对于之前版本的文本按钮，也增添了点击效果，扩大了点击范围。</p>
<hr>
<h2 id="详细更新日志"><a href="#详细更新日志" class="headerlink" title="详细更新日志"></a>详细更新日志</h2><p><strong>1.69.0（2019/12/28）</strong></p>
<ol>
<li>【功能】子任务</li>
<li>【功能】自定义排序：现支持待办事项/清单/商店的拖动排序</li>
<li>【功能】冻结事项：用于暂停某个重复事项，冻结的事项逾期时不会进行经验值/金币惩罚</li>
<li>【功能】批量操作：事项批量删除/移动，商品批量下架</li>
<li>【功能】桌面小部件支持清单选择</li>
<li>【功能】“逾期处理”页面</li>
<li>【功能】团队支持“按活跃度排序”、“筛选未截止团队”</li>
<li>【功能】团队事项现在支持部分编辑：设置备注、金币、提醒等</li>
<li>【功能】排序依据增加“重要程度“、“困难程度”</li>
<li>【功能】成就现在支持排序：“按完成时间”、“按进度”</li>
<li>【功能】成就进度现在会同步到云端</li>
<li>【功能】现支持自定义滑动操作</li>
<li>【优化】“筛选”设置为“显示今天事项”或者“显示仅七天事项”的时候，会提示还有多少个事项未开始，并可以临时显示</li>
<li>【优化】桌面小部件现支持跟随主题色设置</li>
<li>【优化】团队事项现支持放弃操作</li>
<li>【优化】“设为完成”操作将撤销惩罚</li>
<li>【优化】发表动态的内容增加保护机制，在发送的时候再次点击完成的时候会恢复之前的内容。</li>
<li>【优化】“单次事项”的逾期处理优化</li>
<li>【优化】“日历”视图的待办事项增加点击到事项详情的入口</li>
<li>【优化】优化平板的显示效果</li>
<li>【优化】“置顶”图标增加英文版图标</li>
<li>【优化】大量视觉优化效果：升级Material Components</li>
<li>【修复】某些情况下点赞显示“点赞操作失败”的问题</li>
<li>【修复】“倒计时显示时间”的状态显示不正确的问题</li>
<li>【修复】改动系统时区后，应用内时间显示不生效的问题</li>
<li>【修复】某些事项的逾期时间显示不准确的问题</li>
</ol>
<p><br /></p>
<p>扫码关注人升公众号，可以尽快收到更新介绍<del>而且我们说不定能赚点服务器钱:)</del></p>
 
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
        <tag>更新介绍</tag>
      </tags>
  </entry>
  <entry>
    <title>2019 年终总结</title>
    <url>/post/72566ae3.html</url>
    <content><![CDATA[<p>第二年的年终总结。</p>
<a id="more"></a>
<p><br /></p>
<h1 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h1><p>去年的年终总结为今年定下了一些目标，回顾一下。</p>
<h2 id="Complete"><a href="#Complete" class="headerlink" title="Complete"></a>Complete</h2><p>✅ <strong>继续完善《人升LifeUp》到自己满足的水平</strong></p>
<p>持续维护了近一年，更新上了商店、成就、子任务等机制后，终于有种完全体的感觉了。</p>
<p>虽然还能继续实现很多功能，不过现在已经让我感觉有些满意了。</p>
<p>今年取得的成果也不错，登上了多个市场。海外也逐步成长起来了。</p>
<p>✅ <strong>找到一份满意的实习</strong></p>
<h2 id="Pending"><a href="#Pending" class="headerlink" title="Pending"></a>Pending</h2><p>🔒<strong>起码阅读完12本书</strong></p>
<p>今年阅读量有点少，无论是技术书籍还是小说。</p>
<p><strong>🔒48篇博文（大概一个星期一篇的程度）</strong></p>
<p>数了下，大概只完成了20篇。</p>
<p><strong>🔒达到对自己满意的程度</strong></p>
<p>远远不够，甚至不敢面试。</p>
<h1 id="随想"><a href="#随想" class="headerlink" title="随想"></a>随想</h1><p>大四到来，很是焦虑。现在更是快结束了~</p>
<p><strong>但也找到了第一份实习，随之也得到了认可，获得了转正机会。</strong></p>
<p>5月份焦虑地准备，鼓起了勇气面试，收获了实习。</p>
<p>因为觉得实习环境的氛围很合适，加上怂面试，秋招没投简历。</p>
<p>秋招那段时间真的很迷茫。</p>
<p>最后还是收获了挺满意的转正机会。</p>
<p><strong>维护了一整年自己的小应用，今年大概发布了近40次更新。</strong></p>
<p>虽然用户不多，但是也有着一些忠实用户。</p>
<p>印象最深的是一位邮件来往，多封邮件交流着应用的建议，说着他们一家三口都在使用我们的应用，感觉很荣幸 。</p>
<p>也有一位在我们应用发布了刚好一年左右，给我们捐赠的用户，留言道，“已经使用了我们的应用一年”。</p>
<p>这一年，也逐渐地把应用发布了Google Play（面向海外上架了付费版本，想着赚点零花钱）、小米和魅族的应用市场。</p>
<p>在Google Play发布后逐渐看着购买量日益增长，从回本了 Google 开发者验证的25刀，到现在每天都可能有一份购买。</p>
<p>虽然量不大，但还是很开心。特别是第一次收到打款的日子。</p>
<p>国内也陆陆续续收到一些用户的捐赠，真的给了极大的更新动力：</p>
<p><strong>不想做毕设，只想更新人升。</strong></p>
<p><strong>学习方面，今年大概发布了20篇博客。</strong></p>
<p>阅读也是之前买的好些书也没读，没有完成上一年定下的目标。</p>
<p>博客的内容几乎都是开发相关的orz。</p>
<p>在知乎今年没怎么回答问题/发布文章，年度总结里统计好像就两篇。比较怠惰，也总是下不了手，写回答开头真难。</p>
<p>自主学习的内容也较少，几乎都是通过实习/自己的应用维护获得的经验。</p>
<p>学习方面下一年需要加强。</p>
<h1 id="成就"><a href="#成就" class="headerlink" title="成就"></a>成就</h1><h2 id="🏆-人升，发布了30多次更新"><a href="#🏆-人升，发布了30多次更新" class="headerlink" title="🏆 人升，发布了30多次更新"></a>🏆 人升，发布了30多次更新</h2><h2 id="🏆-人升，登录了Google-Play市场，收获了100-付费购买"><a href="#🏆-人升，登录了Google-Play市场，收获了100-付费购买" class="headerlink" title="🏆 人升，登录了Google Play市场，收获了100+付费购买"></a>🏆 人升，登录了Google Play市场，收获了100+付费购买</h2><h2 id="🏆-个人，找到一份满意实习，得到认可，拥有转正机会"><a href="#🏆-个人，找到一份满意实习，得到认可，拥有转正机会" class="headerlink" title="🏆 个人，找到一份满意实习，得到认可，拥有转正机会"></a>🏆 个人，找到一份满意实习，得到认可，拥有转正机会</h2><h2 id="🏆-知乎，关注者涨到了9800-。新增了大概9k关注。"><a href="#🏆-知乎，关注者涨到了9800-。新增了大概9k关注。" class="headerlink" title="🏆 知乎，关注者涨到了9800+。新增了大概9k关注。"></a>🏆 知乎，关注者涨到了9800+。新增了大概9k关注。</h2><h2 id="🏆-撰写-20-篇博客"><a href="#🏆-撰写-20-篇博客" class="headerlink" title="🏆 撰写 20 篇博客"></a>🏆 撰写 20 篇博客</h2><h2 id="🏆-阅读"><a href="#🏆-阅读" class="headerlink" title="🏆 阅读"></a>🏆 阅读</h2><ul>
<li><strong>《Head First设计模式》</strong></li>
<li><strong>《Kotlin实战》</strong></li>
</ul>
<h2 id="⚔️-游戏"><a href="#⚔️-游戏" class="headerlink" title="⚔️ 游戏"></a>⚔️ 游戏</h2><p><strong>通关：</strong></p>
<ul>
<li><p>《异度之刃2》以及DLC《伊拉黄金国》</p>
</li>
<li><p>《异界锁链》</p>
</li>
<li><p>《勇者斗恶龙11S》</p>
</li>
<li><p>《火焰纹章：风花雪月》</p>
<p>二周目：皇女线和教会线</p>
</li>
<li><p>《The Last of Us》</p>
</li>
<li><p>《底特律：变人》</p>
</li>
<li><p>《宝可梦：剑》</p>
</li>
<li><p>《火焰纹章：觉醒》</p>
</li>
<li><p>《火焰纹章：Echoes 另一位英雄王》</p>
</li>
<li><p>《火焰纹章：if》</p>
<p>二周目：白夜线和透魔线</p>
</li>
</ul>
<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p><strong>2020年</strong></p>
<p>🔹 <strong>胜任工作内容</strong></p>
<p>🔹 继续维护《人升》，争取机会<strong>[数据删除]</strong></p>
<p>🔹 增强技术能力</p>
<p>🔸 养成记录的好习惯（博客/日记）</p>
<p>🔸 加强阅读量</p>
]]></content>
      <categories>
        <category>个人</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>人升开发日志#18 | 12/22 优化遇到的坑</title>
    <url>/post/20e35ca0.html</url>
    <content><![CDATA[<p>这个系列好久没更新了（离目标日渐遥远</p>
<p>这段时间的开发其实遇到了不少问题，不过都没及时记录导致最后也忘记了。</p>
<p>这里记一下新鲜的优化遇到的坑吧。</p>
<h2 id="桌面小部件"><a href="#桌面小部件" class="headerlink" title="桌面小部件"></a>桌面小部件</h2><p>之前匆忙写的桌面小部件是不支持分别显示不同清单的，并且还只能显示“所有”。</p>
<p>需要实现在桌面小部件，点击可以直接选择清单。</p>
<p>这里选择了透明Activity+BottomSheetDialog的方案，看上去没打开应用就进行了选择。</p>
<h3 id="实现清单选择功能"><a href="#实现清单选择功能" class="headerlink" title="实现清单选择功能"></a>实现清单选择功能</h3><p><strong>第一步：实现透明Activity</strong></p>
<p>透明Style（其实是历史代码）：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Transparent_Activity&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;AppTheme.NoActionBar&quot;</span>&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowActionBar&quot;</span>&gt;</span>false<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowNoTitle&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowBackground&quot;</span>&gt;</span>@android:color/transparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowDisablePreview&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsTranslucent&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowContentOverlay&quot;</span>&gt;</span>@null<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowIsFloating&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:backgroundDimEnabled&quot;</span>&gt;</span>false<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>并且这个Activity应该是独立栈，所以将启动模式设置为<code>singleInstance</code>。</p>
<p>并且在Activity处理Intent传递过来的<code>appWidgetId</code>参数，实现清单选择。</p>
<a id="more"></a>
<p><strong>这里设计布局的时候遇到个小坑：</strong></p>
<p><code>ImageButton</code>的<code>background</code>不能直接设置为<code>?attr/selectableItemBackgroundBorderless</code>或者<code>?attr/selectableItemBackground</code>。</p>
<p>当然，这不代表我们不能手动实现Ripple效果：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:state_pressed</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">shape</span> <span class="attr">android:shape</span>=<span class="string">&quot;oval&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">size</span> <span class="attr">android:width</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">                <span class="attr">android:height</span>=<span class="string">&quot;20dp&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">&quot;#54cfcfcf&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">shape</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">&quot;#00000000&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>第二步：设置PendingIntent在点击按钮的时候启动Activity</strong></p>
<p>大概代码：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> categoryChooseIntent = Intent(context, WidgetSelectCategoryActivity::<span class="keyword">class</span>.java).apply &#123;</span><br><span class="line">                putExtra(<span class="string">&quot;appWidgetId&quot;</span>, appWidgetId)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** 注意第二个参数是requestCode **/</span></span><br><span class="line"><span class="keyword">val</span> categoryChoosePendingIntent = PendingIntent.getActivity(context, appWidgetId * <span class="number">10</span>, categoryChooseIntent, PendingIntent.FLAG_UPDATE_CURRENT)</span><br><span class="line"></span><br><span class="line">views.setOnClickPendingIntent(R.id.ib_category, categoryChoosePendingIntent)</span><br></pre></td></tr></table></figure>
<p>一开始写没留意<code>RequestCode</code>，写死了一个数字。</p>
<p>然后导致Activity接收到的<code>appWidgetId</code>和触发事件的Widget对应不上。</p>
<p><strong>解决方法</strong>也很简单，让每个Widget的<code>PendingIntent</code>的<code>RequestCode</code>不一致即可。</p>
<p><strong>第三步：持久化设置</strong></p>
<p>我这里用的是字符串拼接<code>appWidgetId</code>为Key来持久化设置。</p>
<p>考虑到可能日积月累，增增删删桌面小部件可能导致插入了很多无用的K-V值，降低SP效率。</p>
<p>在<code>fun onDisabled(context: Context)</code>方法里还对废弃的设置KV值进行了清理操作。</p>
<p>（该方法的调用时机是清空所有桌面小部件的时候）</p>
<p><strong>第四步：调试失败</strong></p>
<p>理应这样子应该就没问题了。</p>
<p>在Factory里再获取<code>WidgetId</code>然后去拿相应的设置信息，然后去查询对应的清单数据即可。</p>
<p>但是，实测还是失败。多个Widget还是只会显示同一个设置的清单。</p>
<p>摸索未果，祭出了StackOverflow也查询了半天，才在一个<a href="https://stackoverflow.com/questions/50992720/same-widgets-with-different-listview-data">没什么人问津的问题</a>找到了答案：</p>
<p><strong>默认会复用Factory，所以需要在intent填充不同的Data，让其实例化多个Factory</strong></p>
<p>文中用的方法是填充随机数据：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//set random data to initialize new Factory</span></span><br><span class="line">Random rnd = <span class="keyword">new</span> Random();</span><br><span class="line">intent.setData(Uri.fromParts(<span class="string">&quot;content&quot;</span>, String.valueOf(rnd.nextInt()), <span class="keyword">null</span>));</span><br></pre></td></tr></table></figure>
<p>其实直接用<code>appWidgetId.toString()</code>可能更高效：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">intent.<span class="keyword">data</span> = Uri.fromParts(<span class="string">&quot;content&quot;</span>, (appWidgetId).toString(), <span class="literal">null</span>)</span><br></pre></td></tr></table></figure>
<h3 id="主题色功能"><a href="#主题色功能" class="headerlink" title="主题色功能"></a>主题色功能</h3><p>做完清单后，想到要实现将应用内的主题色适配到桌面小部件中：<strong>主要就是动态更改一个LinearLayout的背景颜色</strong>。</p>
<p>如果只是需要改颜色的话，没什么大问题。</p>
<p><strong>直接这样即可：</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">views.setInt(&lt;View&gt;, <span class="string">&quot;setBackgroundResource&quot;</span>, &lt;ResId&gt;)</span><br></pre></td></tr></table></figure>
<p>但是我这里的布局用到了Shape实现圆角效果。</p>
<p>对应的类是<code>GradientDrawable</code>，查询一番，似乎没有什么好办法解决。</p>
<p>这里因为主题色是固定的，所以还能用比较基础的方法实现。</p>
<p>手动实现多个颜色的Shape XML，然后代码判断，用上述方法设置背景即可。</p>
<h2 id="TextView设置android-autoLink后无法长按-滑动"><a href="#TextView设置android-autoLink后无法长按-滑动" class="headerlink" title="TextView设置android:autoLink后无法长按/滑动"></a>TextView设置<code>android:autoLink</code>后无法长按/滑动</h2><p><strong>解决办法可以参考：</strong></p>
<ul>
<li><p><a href="https://www.jianshu.com/p/3eed2f4afa07">https://www.jianshu.com/p/3eed2f4afa07</a></p>
<p>这篇文章有详细的源码分析，但是最后给出的解决方案处理不完善。比如会依旧无法滑动，长按拦截似乎也有些问题。</p>
</li>
<li><p><a href="https://juejin.im/post/5c373a3451882524bb0b2d23">https://juejin.im/post/5c373a3451882524bb0b2d23</a></p>
<p><strong>最后采用的这篇文章给出的解决方案。</strong></p>
</li>
</ul>
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>人升更新介绍#1.68.0 | 11/24 全新的成就、日历系统</title>
    <url>/post/43761082.html</url>
    <content><![CDATA[<p>欢迎更新到v1.68.0~</p>
<p>这个版本可能是<strong>比肩商店系统</strong>的一次<strong>重要</strong>更新。</p>
<p>首先是实现了<strong>远比之前版本完善的成就系统</strong>，其次也更新了<strong>日历视图</strong>，各个页面也有大大小小的优化。</p>
<p>开始正题之前，先发下这篇文章的总览：</p>
<h2 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h2><ol>
<li>全新的成就系统，56种成就。</li>
<li>日历视图</li>
<li>金币详情</li>
<li>历史页面</li>
<li>其他改进</li>
<li>To Do</li>
</ol>
<a id="more"></a>
<h2 id="全新成就系统"><a href="#全新成就系统" class="headerlink" title="全新成就系统"></a>全新成就系统</h2> <img src="/post/43761082/01.png" class="">
<p><strong>界面如图</strong>，在「成就」页面可以浏览成就的完成条件、完成时间，以及领取奖励等。</p>
<p>每个成就下方那个横条<strong>其实是进度条，代表着该成就的完成进度。</strong></p>
 
<p><strong>目前成就分为了五类：</strong></p>
<ol>
<li>基础成就 17个</li>
<li>事项成就 15个</li>
<li>商店成就 7个</li>
<li>社区成就 10个</li>
</ol>
<p>总计是56个成就。</p>
<h3 id="解锁条件类别"><a href="#解锁条件类别" class="headerlink" title="解锁条件类别"></a>解锁条件类别</h3><p><strong>基础成就类似于新手引导，引导用户去体验应用里的各个功能。</strong></p>
<p>比如新建清单、商店上架商品等。</p>
 <img src="/post/43761082/03.jpg" class="">
<p><strong>其中有一些是秘密成就，在完成前不会显示成就的描述，只有成就的标题。</strong></p>
<p><strong>为的是增加成就系统的趣味性。</strong></p>
<p>用户可以根据成就的标题，猜测成就的完成条件，可以当作是解谜小游戏~</p>
 <img src="/post/43761082/04.png" class="">
<p>另外还有一些是累积性成就，这些成就比较有难度，十分具有挑战性。<strong>比如连续180天完成任意事项。</strong></p>
<h3 id="解锁提示框"><a href="#解锁提示框" class="headerlink" title="解锁提示框"></a>解锁提示框</h3> <img src="/post/43761082/05.jpg" class="">
<p><strong>解锁成就的时候，会有成就解锁提示框弹出。</strong></p>
<p>如果一次性解锁了数个成就，提示框也会依次弹出数次。</p>
<blockquote>
<p>之前版本也有这个提示框，但是显示界面只有”告示板“，并且不支持数个成就同时解锁的提示。</p>
</blockquote>
<h3 id="领取奖励"><a href="#领取奖励" class="headerlink" title="领取奖励"></a>领取奖励</h3> <img src="/post/43761082/06.jpg" class="">
<p>解锁了成就之后，就能前往「成就」页面领取奖励了。</p>
<p>奖励大致<strong>分为「经验值」和「金币」</strong>两类，并且为了防止影响用户自己的经验值、金币体系，奖励的数值普遍设置得偏小，起一个小激励作用~</p>
<p>当然了，越高难度的成就设置的奖励还是越丰富的。</p>
<p>已经领取奖励的成就，则会显示成就解锁的日期。</p>
<h3 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h3><p>当前这个版本的成就还没有做服务器同步功能，会在后续加上。</p>
<hr>
<h2 id="日历视图"><a href="#日历视图" class="headerlink" title="日历视图"></a>日历视图</h2> <img src="/post/43761082/07.jpg" class="">
<p>日历视图也是个坑了很久的功能点。</p>
<p>默认打开如图，日历部分显示为月视图。</p>
<p>每个日期上的⭕指的是<strong>这一天期限的任务的完成状况</strong>。</p>
<p>下方则是三个标签（Tab），可以查看选择的那一天的情况：</p>
<ul>
<li><strong>即将期限</strong>（这一天期限的事项）</li>
<li><strong>进行中</strong>（这一天可以完成/已经开始的事项）</li>
<li><p><strong>已结束</strong>（这一天完成、逾期或放弃的事项）</p>
<img src="/post/43761082/08.jpg" class="">
</li>
</ul>
<p>列表拉动后，可以收缩为周视图。</p>
<h3 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h3><p>To Do应用还是与日程管理应用不太一样。</p>
<p>因为<em>《人升》</em>是弱化了开始时间的设置，只强调了期限日期。（其实大部分To Do可能更弱化开始时间）</p>
<p><strong>所以很难实现在日历上显示每个事项的始终情况。</strong></p>
<p>所以我们选择的是，展示某一天期限的完成情况。</p>
<p><br /></p>
<p>另外，日历视图<strong>暂时</strong>并不支持完成、放弃、删除事项等操作。</p>
<p>这方面是有多层考虑的，一开始是打算也加上这些操作项的。</p>
<p>但是<strong>技术上</strong>是由于「告示板」页面的逻辑又多又杂，抽取有一定难度。</p>
<p>随后<strong>设计上</strong>，如果日历视图页面也支持这些操作的话，定位和「告示板」会有大量冲突，与「事项详情」页面也有冲突。并且以后不好维护。</p>
<p><br /></p>
<p>总之，日历视图现在的定位是<strong>总览事项情况</strong>，能更方便的查看某一天的情况，回顾某一天结束的事项。</p>
<hr>
<h2 id="金币详情"><a href="#金币详情" class="headerlink" title="金币详情"></a>金币详情</h2> <img src="/post/43761082/09.jpg" class="">
<p>类似于「经验值详情」页面，这个页面是展示金币的各种变动情况。</p>
<p>设计上参考了一些app的账单页面，会以日期分隔开每天的变动</p>
<p><strong>并且日期的右方会汇总这一天的收入和支出。</strong></p>
 <img src="/post/43761082/10.jpg" class="">
<p><strong>入口：</strong>侧边栏「统计」页面里的金币图表右上角“收支详情”。</p>
<hr>
<h2 id="历史页面"><a href="#历史页面" class="headerlink" title="历史页面"></a>历史页面</h2> <img src="/post/43761082/11.png" class="">
<p>历史页面这次也进行了一些<strong>UI更新</strong>：</p>
<ul>
<li>加入了日期分隔头部</li>
<li>取消了分割线的显示</li>
<li><p>加大了间距</p>
<img src="/post/43761082/12.jpg" class="">
</li>
</ul>
<p>功能方面则是加了按清单筛选，可以指查看所选清单的历史记录。</p>
<hr>
<h2 id="其他改进"><a href="#其他改进" class="headerlink" title="其他改进"></a>其他改进</h2> <img src="/post/43761082/13.jpg" class="">
<p><strong>自定义金币惩罚系数</strong></p>
<p>现在可以在「自定义设置」调整当事项逾期、放弃时的金币惩罚系数了。</p>
<p>默认值为0。</p>
<p><br /></p>
 <img src="/post/43761082/14.jpg" class="">
<p><strong>团队事项设置</strong></p>
<p>加入团队的时候，可以直接<strong>设置团队事项的所属清单</strong>了。</p>
<p>并且还有个功能，可以把团队的描述当作事项的备注。</p>
<blockquote>
<p>后续会开放团队事项的备注编辑、提醒设置功能，这个版本暂不支持。</p>
</blockquote>
<p><br /></p>
 <img src="/post/43761082/15.jpg" class="">
<p>商店购买商品的时候，可以<strong>直接选择是否使用</strong>。</p>
<p>另外，商店和仓库页面也加入了搜素功能。（后续会加上类似于事项的清单分类功能）</p>
<p><br /></p>
<p>更多更新内容可参考详细更新日志。</p>
<h2 id="To-Do"><a href="#To-Do" class="headerlink" title="To Do"></a>To Do</h2><ol>
<li>桌面小部件改进：支持清单选择等</li>
<li>选择所有清单时，按清单排序并且显示相应的清单名字头部。</li>
<li>备份功能改进等。</li>
</ol>
<p><br /></p>
<p>扫码关注人升公众号，可以尽快收到更新介绍<del>而且我们说不定能赚点服务器钱:)</del></p>
 <img src="/post/43761082/16.jpg" class="">
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
        <tag>更新介绍</tag>
      </tags>
  </entry>
  <entry>
    <title>人升Lifeup 捐赠名单</title>
    <url>/post/22d5d0d5.html</url>
    <content><![CDATA[<p>现在人升国内没有设置任何盈利手段，你们的捐赠和支持是我们更新的极大动力！😘</p>
<h2 id="捐赠手段"><a href="#捐赠手段" class="headerlink" title="捐赠手段"></a>捐赠手段</h2><h3 id="支付宝"><a href="#支付宝" class="headerlink" title="支付宝"></a>支付宝</h3><p>支付宝可以直接在应用内的关于界面跳转捐赠~</p>
<p><strong>or</strong></p>
 <img src="/post/22d5d0d5/alipay.jpg" class="">
<h3 id="微信"><a href="#微信" class="headerlink" title="微信"></a>微信</h3> <img src="/post/22d5d0d5/01.jpg" class="">
<h3 id="QQ"><a href="#QQ" class="headerlink" title="QQ"></a>QQ</h3> <img src="/post/22d5d0d5/02.png" class="">
<hr>
<h2 id="捐赠名单"><a href="#捐赠名单" class="headerlink" title="捐赠名单"></a>捐赠名单</h2><p><strong>感谢以下各位的捐赠：</strong></p>
<p>更新时间：2020年9月4日 01点51分；如有遗漏请邮件联系~</p>
<p>（按时间倒序排序）</p>
<table>
<thead>
<tr>
<th>时间</th>
<th>姓名</th>
<th>留言</th>
<th>金额</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>2020/09/17</td>
<td>（微信）渡鸦5270</td>
<td>很早就关注你的软件了，很不错的，希望继续做下去</td>
<td>6.00</td>
</tr>
<tr>
<td>2020/09/08</td>
<td>（微信）卷心菜白白</td>
<td>超级喜欢人升这个软件，加油哦！会一直支持你们的！！！</td>
<td>6.66</td>
</tr>
<tr>
<td>2020/09/03</td>
<td>（微信）庸人自扰</td>
<td>加油啊，让人升变得更好、更优秀！</td>
<td>6.00</td>
</tr>
<tr>
<td>2020/09/01</td>
<td>（微信）亿</td>
<td>加油更新哦，期待更多功能</td>
<td>6.00</td>
</tr>
<tr>
<td>2020/09/01</td>
<td>（微信）小丑鱼</td>
<td>超级喜欢这个软件，学生党福音，一起加油呀~٩(๑^o^๑)۶</td>
<td>6.00</td>
</tr>
<tr>
<td>2020/09/01</td>
<td>*李</td>
<td></td>
<td>10.00</td>
</tr>
<tr>
<td>2020/08/31</td>
<td>*苏婷</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2020/08/31</td>
<td>（公众号）hoshea</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2020/08/30</td>
<td>*瀚文</td>
<td>厉害了！懒癌重度患者的福音！</td>
<td>66.60</td>
</tr>
<tr>
<td>2020/08/23</td>
<td>*惠燕</td>
<td>加油(ง •̀_•́)ง</td>
<td>8.88</td>
</tr>
<tr>
<td>2020/08/22</td>
<td>*颍龙</td>
<td>大佬加油，虽然钱现在很少d(ŐдŐ๑)</td>
<td>2.00</td>
</tr>
<tr>
<td>2020/08/17</td>
<td>（公众号）樱鹤</td>
<td></td>
<td>2.00</td>
</tr>
<tr>
<td>2020/08/17</td>
<td>（微信）阿桑</td>
<td>辛苦啦，喝点快乐水吧~</td>
<td>10.00</td>
</tr>
<tr>
<td>2020/08/14</td>
<td>*柏禧</td>
<td>软件惊艳，加油开发者大大！！会持续支持</td>
<td>5.00</td>
</tr>
<tr>
<td>2020/08/12</td>
<td>*诗文</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2020/08/12</td>
<td>*田</td>
<td>要继续加油鸭！</td>
<td>5.00</td>
</tr>
<tr>
<td>2020/08/09</td>
<td>（微信）shall we</td>
<td>感谢开发者大大！学生党没什么💰，以后富裕了还会支持的</td>
<td>2.66</td>
</tr>
<tr>
<td>2020/08/06</td>
<td>（微信）*丽楠</td>
<td></td>
<td>2.00</td>
</tr>
<tr>
<td>2020/08/04</td>
<td>*平</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2020/08/04</td>
<td>（微信）凉茶</td>
<td>夏日炎炎，请开发者喝瓶冰可乐，加油呀！！！</td>
<td>3.00</td>
</tr>
<tr>
<td>2020/08/03</td>
<td>*富霖</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2020/08/01</td>
<td>*尚坤</td>
<td></td>
<td>1.00</td>
</tr>
<tr>
<td>2020/07/30</td>
<td>（微信）Su</td>
<td>程序开发得特别有创意！很实用支持作者大大继续完善😁</td>
<td>1.00</td>
</tr>
<tr>
<td>2020/07/30</td>
<td>*科铭</td>
<td></td>
<td>1.00</td>
</tr>
<tr>
<td>2020/07/29</td>
<td>（微信）Crafty.</td>
<td></td>
<td>1.00</td>
</tr>
<tr>
<td>2020/07/27</td>
<td>*卉</td>
<td></td>
<td>16.00</td>
</tr>
<tr>
<td>2020/07/23</td>
<td>*雨晨</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2020/07/26</td>
<td>（微信）</td>
<td>加油(ง •̀_•́)ง 希望开发者和使用者都能一同前进</td>
<td>6.66</td>
</tr>
<tr>
<td>2020/07/18</td>
<td>*天诚</td>
<td></td>
<td>0.50</td>
</tr>
<tr>
<td>2020/07/17</td>
<td>（微信）</td>
<td>期待了4年，相见恨晚！谢谢您（或你们）！</td>
<td>1.00</td>
</tr>
<tr>
<td>2020/07/14</td>
<td>*一阳</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2020/07/13</td>
<td>（微信）zong</td>
<td>真棒！希望也祝愿越来越好！</td>
<td>6.00</td>
</tr>
<tr>
<td>2020/07/10</td>
<td>（微信）布尔什维克</td>
<td>朋友学编程在帮我做类似的来练手（</td>
<td>2.99</td>
</tr>
<tr>
<td>2020/07/09</td>
<td>（微信）</td>
<td>一直在寻找的app，感谢</td>
<td>10.00</td>
</tr>
<tr>
<td>2020/07/08</td>
<td>*洛浩</td>
<td></td>
<td>1.00</td>
</tr>
<tr>
<td>2020/07/06</td>
<td>（微信）抚玉</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2020/06/30</td>
<td>*可嘉</td>
<td>来自人升</td>
<td>2.00</td>
</tr>
<tr>
<td>2020/06/23</td>
<td>（微信）</td>
<td></td>
<td>1.00</td>
</tr>
<tr>
<td>2020/06/23</td>
<td>*雯雯</td>
<td>谢谢开发(*°∀°)=3加油</td>
<td>5.00</td>
</tr>
<tr>
<td>2020/06/23</td>
<td>*宏地</td>
<td></td>
<td>0.50</td>
</tr>
<tr>
<td>2020/06/14</td>
<td>*丹阳</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2020/06/14</td>
<td>*珏龙</td>
<td>来自酷友windywolf的支持</td>
<td>6.66</td>
</tr>
<tr>
<td>2020/06/13</td>
<td>（QQ）渡鸦</td>
<td>很不错的想法，支持一下</td>
<td>6.00</td>
</tr>
<tr>
<td>2020/06/07</td>
<td>*瑞键</td>
<td>app很棒！</td>
<td>10.00</td>
</tr>
<tr>
<td>2020/06/04</td>
<td>（QQ）六级</td>
<td>大佬 喝可乐</td>
<td>3.00</td>
</tr>
<tr>
<td>2020/06/01</td>
<td>*仁良</td>
<td>很用心，真棒，支持一下！</td>
<td>20.00</td>
</tr>
<tr>
<td>2020/06/01</td>
<td>*梦露</td>
<td>许愿事件管理器或者番茄钟功能</td>
<td>10.00</td>
</tr>
<tr>
<td>2020/05/27</td>
<td>*浩然</td>
<td></td>
<td>10.00</td>
</tr>
<tr>
<td>2020/05/25</td>
<td>*明</td>
<td></td>
<td>1.00</td>
</tr>
<tr>
<td>2020/05/19</td>
<td>（微信）Z7mi</td>
<td>一个有趣的创意，希望作者大大一直做下去</td>
<td>5.00</td>
</tr>
<tr>
<td>2020/05/18</td>
<td>*地根</td>
<td></td>
<td>10.00</td>
</tr>
<tr>
<td>2020/05/18</td>
<td>（微信）光风霁月</td>
<td>加油，支持一下。希望后期可以开通账号制</td>
<td>6.00</td>
</tr>
<tr>
<td>2020/05/18</td>
<td>（微信）洛翎</td>
<td>大佬加油呀，我感觉你做的软件特别棒</td>
<td>1.00</td>
</tr>
<tr>
<td>2020/05/16</td>
<td>*茗</td>
<td>很喜欢这款软件，感谢开发者小哥哥！</td>
<td>16.60</td>
</tr>
<tr>
<td>2020/05/16</td>
<td>（QQ）小绿小绿，无所畏惧</td>
<td>学生党，挺好用！加油鸭</td>
<td>1.88</td>
</tr>
<tr>
<td>2020/05/15</td>
<td>*帅兵</td>
<td></td>
<td>3.00</td>
</tr>
<tr>
<td>2020/05/13</td>
<td>*希</td>
<td></td>
<td>2.00</td>
</tr>
<tr>
<td>2020/05/09</td>
<td>*群</td>
<td></td>
<td>2.97</td>
</tr>
<tr>
<td>2020/05/09</td>
<td>（微信）fluke.</td>
<td>这个想法之前在书上看到过，没想到就有小天才们做出来了哇！</td>
<td>5.00</td>
</tr>
<tr>
<td>2020/05/08</td>
<td>*玉勤</td>
<td></td>
<td>6.00</td>
</tr>
<tr>
<td>2020/05/07</td>
<td>（微信）Eline</td>
<td>梦想中的app，作者加油，期待软件的更新</td>
<td>6.66</td>
</tr>
<tr>
<td>2020/05/06</td>
<td>*亚杰</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2020/05/05</td>
<td>*著</td>
<td></td>
<td>2.00</td>
</tr>
<tr>
<td>2020/05/04</td>
<td>*美岑</td>
<td></td>
<td>10.00</td>
</tr>
<tr>
<td>2020/05/04</td>
<td>*城</td>
<td>喜欢这软件，支持一下</td>
<td>10.00</td>
</tr>
<tr>
<td>2020/05/03</td>
<td>*思达</td>
<td>安卓绿色 加油(ง •_•)ง</td>
<td>5.00</td>
</tr>
<tr>
<td>2020/05/02</td>
<td>（微信）空气</td>
<td>好像打破66次赞赏了😂，很喜欢，希望能出团队加入时间修改</td>
<td>2.00</td>
</tr>
<tr>
<td>2020/04/29</td>
<td>（微信）秦川月</td>
<td>（留下贫穷泪水）一张紫毛聊表心意</td>
<td>5.00</td>
</tr>
<tr>
<td>2020/04/27</td>
<td>（QQ）学习使我快乐</td>
<td>小小心意希望软件以后更好</td>
<td>1.00</td>
</tr>
<tr>
<td>2020/04/25</td>
<td>（微信）zyF</td>
<td>感觉挺有意思的</td>
<td>1.00</td>
</tr>
<tr>
<td>2020/04/25</td>
<td>（微信）少年お书生</td>
<td>学生党一枚，小小心意，不成敬意。特别喜欢这个软件，加油鸭</td>
<td>1.00</td>
</tr>
<tr>
<td>2020/04/24</td>
<td>*婧茹</td>
<td></td>
<td>1.00</td>
</tr>
<tr>
<td>2020/04/23</td>
<td>*志坚</td>
<td>喜欢人升，感恩。</td>
<td>3.00</td>
</tr>
<tr>
<td>2020/04/22</td>
<td>（微信）小健</td>
<td>太感动了，找了20多款学习软件，终于找到适合我的。继续加油！</td>
<td>2.00</td>
</tr>
<tr>
<td>2020/04/21</td>
<td>*波</td>
<td>加油，很喜欢这个软件</td>
<td>22.22</td>
</tr>
<tr>
<td>2020/04/20</td>
<td>*剑桥</td>
<td>这就是我想要的TODO，加油＾０＾~</td>
<td>4.00</td>
</tr>
<tr>
<td>2020/04/20</td>
<td>*韬宇</td>
<td></td>
<td>1.00</td>
</tr>
<tr>
<td>2020/04/20</td>
<td>*昱汐</td>
<td>等我有钱了再多捐点，期待更新</td>
<td>3.58</td>
</tr>
<tr>
<td>2020/04/20</td>
<td>*一乘</td>
<td></td>
<td>6.00</td>
</tr>
<tr>
<td>2020/04/20</td>
<td>（微信）夜雨</td>
<td>感谢，希望能持续更新，哈哈。</td>
<td>6.00</td>
</tr>
<tr>
<td>2020/04/19</td>
<td>（微信）太难了</td>
<td>你好作者我非常喜欢人升这款APP，一点心意希望APP越做越好</td>
<td>4.00</td>
</tr>
<tr>
<td>2020/04/18</td>
<td>*寒啸</td>
<td>一点点</td>
<td>3.00</td>
</tr>
<tr>
<td>2020/04/17</td>
<td>*蕊杭</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2020/04/17</td>
<td>（微信）月亮和星星</td>
<td>（学生党，没啥钱）希望能继续把这么好的软件做下去哈！</td>
<td>0.99</td>
</tr>
<tr>
<td>2020/04/16</td>
<td>（微信）涵</td>
<td>感想作出我梦想中的APP。如果能推出更多的货币体系就更好了</td>
<td>2.00</td>
</tr>
<tr>
<td>2020/04/15</td>
<td>*梓浩</td>
<td>感谢</td>
<td>0.88</td>
</tr>
<tr>
<td>2020/04/15</td>
<td>*晓丽</td>
<td></td>
<td>6.70</td>
</tr>
<tr>
<td>2020/04/14</td>
<td>（微信）禾乌</td>
<td>加油，这个软件太赞了</td>
<td>1.00</td>
</tr>
<tr>
<td>2020/04/14</td>
<td>（微信）Dong Jiahao</td>
<td>学生，微信里没钱乐，感谢创造出这么好的软件</td>
<td>1.00</td>
</tr>
<tr>
<td>2020/04/14</td>
<td>（微信）画墨</td>
<td>很喜欢，作者加油😀。希望能自己设置完成任务属性增加量</td>
<td>6.00</td>
</tr>
<tr>
<td>2020/04/13</td>
<td>（微信）</td>
<td>太棒啦，👍👍👍</td>
<td>1.00</td>
</tr>
<tr>
<td>2020/04/13</td>
<td>（微信）</td>
<td>姑且叫我童年想像打游戏一样去把上课当成打游戏now程序秃一枚</td>
<td>2.00</td>
</tr>
<tr>
<td>2020/04/13</td>
<td>*旭</td>
<td></td>
<td>0.10</td>
</tr>
<tr>
<td>2020/04/12</td>
<td>（微信）嘤嘤嘤</td>
<td>要好好做下去啊冲冲冲</td>
<td>5.00</td>
</tr>
<tr>
<td>2020/04/11</td>
<td>（微信）雨点·葡萄猪</td>
<td>学生党没啥钱，请你吃包辣条hhhhh</td>
<td>2.00</td>
</tr>
<tr>
<td>2020/04/10</td>
<td>一随</td>
<td>做的真的很不错，加油(学生党聊表心意)</td>
<td>1.00</td>
</tr>
<tr>
<td>2020/04/10</td>
<td>酷安@Σ松鼠蒸鱼巛</td>
<td>学生党，支持一下😂</td>
<td>2.33</td>
</tr>
<tr>
<td>2020/04/10</td>
<td>（微信）🍋青柠</td>
<td>我把它用作平行实境游戏的辅助，若有专门的工具就好了可能会买</td>
<td>1.00</td>
</tr>
<tr>
<td>2020/04/09</td>
<td>*明鑫</td>
<td>学生党，没啥钱，只能表示点心意了😂</td>
<td>2.00</td>
</tr>
<tr>
<td>2020/04/09</td>
<td>*张建</td>
<td>不多，一瓶快乐肥宅水请收下</td>
<td>3.00</td>
</tr>
<tr>
<td>2020/04/09</td>
<td>（微信）Wanten</td>
<td>希望继续良心改进、优化♥，我们会一直支持你们的。</td>
<td>10.00</td>
</tr>
<tr>
<td>2020/04/09</td>
<td>（微信）*影</td>
<td>感谢！加油！</td>
<td>5.00</td>
</tr>
<tr>
<td>2020/04/07</td>
<td>胡智博</td>
<td>果真不错。好活当赏，加油(ง •̀_•́)ง</td>
<td>1.00</td>
</tr>
<tr>
<td>2020/04/06</td>
<td>**宏</td>
<td>作者加油(ง •̀_•́)ง，小小心意</td>
<td>2.00</td>
</tr>
<tr>
<td>2020/04/05</td>
<td>（微信）Redamancy</td>
<td>真的好棒啊，这个软件！祝毕业顺利！人升越来越好！</td>
<td>5.00</td>
</tr>
<tr>
<td>2020/04/05</td>
<td>（微信）东风</td>
<td>加油！</td>
<td>3.00</td>
</tr>
<tr>
<td>2020/04/05</td>
<td>*伟俊</td>
<td>请你吃辣条哈哈哈</td>
<td>1.00</td>
</tr>
<tr>
<td>2020/04/05</td>
<td>Xin_</td>
<td>超喜欢人升！突然想好好过好自己的人生！期待人升存在发展999</td>
<td>9.99</td>
</tr>
<tr>
<td>2020/04/04</td>
<td>*明阳</td>
<td>加油，长长久久</td>
<td>2.33</td>
</tr>
<tr>
<td>2020/04/02</td>
<td>*周丁</td>
<td>小小心意</td>
<td>2.00</td>
</tr>
<tr>
<td>2020/04/02</td>
<td>（微信）YOLO</td>
<td>很有创意的软件，希望作者以后可以开发出更多有意思的功能</td>
<td>3.00</td>
</tr>
<tr>
<td>2020/04/01</td>
<td>（微信）惜文</td>
<td>感谢，一点点支持（学生党）</td>
<td>2.00</td>
</tr>
<tr>
<td>2020/04/01</td>
<td>（微信）阿莉司</td>
<td>UI舒服，很棒的创意、也很有用…感谢作者！(<em>˘︶˘</em>)</td>
<td>2.33</td>
</tr>
<tr>
<td>2020/03/31</td>
<td>*文鑫</td>
<td>加油！</td>
<td>4.00</td>
</tr>
<tr>
<td>2020/03/29</td>
<td>*雯</td>
<td>很喜欢！！ 每天都在用！要一直做下去呀！</td>
<td>3.90</td>
</tr>
<tr>
<td>2020/03/28</td>
<td>*小庆</td>
<td>支持。</td>
<td>1.00</td>
</tr>
<tr>
<td>2020/03/28</td>
<td>*铖昊</td>
<td></td>
<td>1.00</td>
</tr>
<tr>
<td>2020/03/28</td>
<td>*军</td>
<td>给瓶农夫山泉，学生党一枚</td>
<td>2.00</td>
</tr>
<tr>
<td>2020/03/27</td>
<td>**楠</td>
<td>很棒的创意 作者棒棒 一起往前..</td>
<td>5.00</td>
</tr>
<tr>
<td>2020/03/26</td>
<td>*洪实</td>
<td>期待新的功能，加油</td>
<td>10.00</td>
</tr>
<tr>
<td>2020/03/26</td>
<td>（微信）平凡的人生</td>
<td>感谢你的软件对我的帮助，也在此给予一些力所能及的谢礼</td>
<td>1.00</td>
</tr>
<tr>
<td>2020/03/26</td>
<td>（微信）Jamin</td>
<td>用起来很舒服，正在慢慢摸索中，作者大大继续加油哦</td>
<td>5.00</td>
</tr>
<tr>
<td>2020/03/22</td>
<td>*锦荣</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2020/03/21</td>
<td>张不song~</td>
<td>开发者棒棒~为数不多的能让我坚持一个月不卸载的清单类软件\</td>
<td>5.00</td>
</tr>
<tr>
<td>2020/03/21</td>
<td>*之沫</td>
<td>炒鸡棒的创意，谢谢开发大大！请继续更新哦</td>
<td>3.00</td>
</tr>
<tr>
<td>2020/03/21</td>
<td>*宇欣</td>
<td></td>
<td>4.00</td>
</tr>
<tr>
<td>2020/03/21</td>
<td>*镇杰</td>
<td></td>
<td>4.08</td>
</tr>
<tr>
<td>2020/03/21</td>
<td>（微信）</td>
<td>有创意小而美</td>
<td>6.00</td>
</tr>
<tr>
<td>2020/03/20</td>
<td>（微信）方糖Ricky</td>
<td>我一直很想要这样的应用！感谢！希望后续会出iOS端的，加油！</td>
<td>6.66</td>
</tr>
<tr>
<td>2020/03/18</td>
<td>（微信）Xm</td>
<td>半睡不醒的考研党表示棒极了XD</td>
<td>10.00</td>
</tr>
<tr>
<td>2020/03/18</td>
<td>*菁</td>
<td>学生，不多，加油</td>
<td>2.00</td>
</tr>
<tr>
<td>2020/03/17</td>
<td>*婷</td>
<td>希望一直更新下去，谢谢！很喜欢</td>
<td>6.00</td>
</tr>
<tr>
<td>2020/03/17</td>
<td>*丽豪</td>
<td>非常感谢相遇!功能又细又强大!爱您!</td>
<td>10.00</td>
</tr>
<tr>
<td>2020/03/14</td>
<td>（微信）方程式-高二党</td>
<td>超级感谢你们。成功让一个整天恍恍惚惚的高中生改变了自己。</td>
<td>5.00</td>
</tr>
<tr>
<td>2020/03/14</td>
<td>**呈</td>
<td></td>
<td>15.00</td>
</tr>
<tr>
<td>2020/03/14</td>
<td>（微信）</td>
<td>真的很好用，加油</td>
<td>2.00</td>
</tr>
<tr>
<td>2020/03/13</td>
<td>（微信）Eggness!</td>
<td>谢谢您开发这个好应用，对我很有帮助，开发者加油！</td>
<td>1.00</td>
</tr>
<tr>
<td>2020/03/13</td>
<td>（微信）</td>
<td>加油 奥利给!</td>
<td>2.00</td>
</tr>
<tr>
<td>2020/03/13</td>
<td>**鑫</td>
<td>学生党的支持</td>
<td>2.33</td>
</tr>
<tr>
<td>2020/03/13</td>
<td>*汶</td>
<td></td>
<td>6.00</td>
</tr>
<tr>
<td>2020/03/12</td>
<td>*国鸿</td>
<td>学生党微小的支持</td>
<td>3.00</td>
</tr>
<tr>
<td>2020/03/12</td>
<td>*晓烽</td>
<td></td>
<td>2.00</td>
</tr>
<tr>
<td>2020/03/11</td>
<td>*峰</td>
<td></td>
<td>10.00</td>
</tr>
<tr>
<td>2020/03/10</td>
<td>（微信）缕缕不倦</td>
<td>以后进度了一定还会回来感谢开发者！</td>
<td>5.00</td>
</tr>
<tr>
<td>2020/03/09</td>
<td>*雨潇</td>
<td></td>
<td>6.66</td>
</tr>
<tr>
<td>2020/03/08</td>
<td>*莉</td>
<td>非常好的软件，继续完善，一定能火</td>
<td>10.00</td>
</tr>
<tr>
<td>2020/03/06</td>
<td>（微信）酷安-概念1337</td>
<td>给有心回复的作者(((о´∀<code>о)ノ♡ヽ(о´∀</code>о</td>
<td>1.23</td>
</tr>
<tr>
<td>2020/03/06</td>
<td>（微信）酷安-概念1337</td>
<td>ｸﾞｯ!(๑•̀ㅂ•́)و✧</td>
<td>3.21</td>
</tr>
<tr>
<td>2020/03/06</td>
<td>（微信）酷安-概念1337</td>
<td>游戏人升咯~</td>
<td>3.88</td>
</tr>
<tr>
<td>2020/03/06</td>
<td>*阳杭</td>
<td></td>
<td>1.80</td>
</tr>
<tr>
<td>2020/03/05</td>
<td>（微信）Jason.</td>
<td>支持一下！继续加油</td>
<td>6.00</td>
</tr>
<tr>
<td>2020/03/05</td>
<td>（微信）腊月不知寒冬暖</td>
<td>期待(o^^o)</td>
<td>4.00</td>
</tr>
<tr>
<td>2020/03/05</td>
<td>（微信）粽子今天高兴吗？</td>
<td>希望人升找到一个合适的盈利模式，长久发展下去，宝藏软件加油鸭</td>
<td>6.66</td>
</tr>
<tr>
<td>2020/03/03</td>
<td>*赠涵</td>
<td>很棒的软件</td>
<td>1.00</td>
</tr>
<tr>
<td>2020/03/02</td>
<td>（微信）泛舟</td>
<td>非常好用！希望能坚持做下去，不断完善</td>
<td>6.00</td>
</tr>
<tr>
<td>2020/03/02</td>
<td>*淇锋</td>
<td>还是个学生只能表示下心意，希望能越来越好</td>
<td>2.33</td>
</tr>
<tr>
<td>2020/03/02</td>
<td>*俊俊</td>
<td>一点心意，请收下。</td>
<td>5.00</td>
</tr>
<tr>
<td>2020/03/01</td>
<td>*俊辉</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2020/03/01</td>
<td>*东升</td>
<td></td>
<td>0.10</td>
</tr>
<tr>
<td>2020/02/29</td>
<td>*永红</td>
<td></td>
<td>0.15</td>
</tr>
<tr>
<td>2020/02/28</td>
<td>*宇航</td>
<td>虽然很少，但是应该或许大概能请你喝奶茶？</td>
<td>5.00</td>
</tr>
<tr>
<td>2020/02/26</td>
<td>*竟楠</td>
<td>完美软件。</td>
<td>2.00</td>
</tr>
<tr>
<td>2020/02/26</td>
<td>*钰华</td>
<td></td>
<td>5.20</td>
</tr>
<tr>
<td>2020/02/24</td>
<td>（微信）汉十一</td>
<td>我喜欢这个软件的创意，感谢开发者</td>
<td>3.00</td>
</tr>
<tr>
<td>2020/02/23</td>
<td>*智灏</td>
<td></td>
<td>1.00</td>
</tr>
<tr>
<td>2020/02/22</td>
<td>（微信）匿名</td>
<td></td>
<td>10.00</td>
</tr>
<tr>
<td>2020/02/16</td>
<td>*培星</td>
<td></td>
<td>6.66</td>
</tr>
<tr>
<td>2020/02/15</td>
<td>*子贤</td>
<td></td>
<td>10.00</td>
</tr>
<tr>
<td>2020/02/15</td>
<td>*文涛</td>
<td></td>
<td>2.00</td>
</tr>
<tr>
<td>2020/02/15</td>
<td>（微信）夏</td>
<td>Singerson</td>
<td>10.00</td>
</tr>
<tr>
<td>2020/02/14</td>
<td>（微信）楸</td>
<td>很棒的应用，加油！情人节快乐吗orz</td>
<td>1.00</td>
</tr>
<tr>
<td>2020/02/14</td>
<td>*钰瑶</td>
<td></td>
<td>8.88</td>
</tr>
<tr>
<td>2020/02/13</td>
<td>（微信）我的名字</td>
<td>很有意思的软件，希望能一直做下去。</td>
<td>18.00</td>
</tr>
<tr>
<td>2020/02/13</td>
<td>（微信）就暮</td>
<td>加油，祝越来越好~——就暮</td>
<td>2.88</td>
</tr>
<tr>
<td>2020/02/12</td>
<td>（微信）夏元素</td>
<td>加油＾０＾~</td>
<td>5.00</td>
</tr>
<tr>
<td>2020/02/11</td>
<td>（微信匿名）</td>
<td>超级喜欢</td>
<td>5.00</td>
</tr>
<tr>
<td>2020/02/09</td>
<td>*凯航</td>
<td></td>
<td>1.88</td>
</tr>
<tr>
<td>2020/02/09</td>
<td>*立国</td>
<td></td>
<td>9.99</td>
</tr>
<tr>
<td>2020/02/08</td>
<td>*杨</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2020/02/06</td>
<td>*君瑞</td>
<td></td>
<td>2.77</td>
</tr>
<tr>
<td>2020/02/05</td>
<td>（微信）gorkor</td>
<td>共勉之</td>
<td>5.20</td>
</tr>
<tr>
<td>2020/02/05</td>
<td>*明</td>
<td></td>
<td>6.66</td>
</tr>
<tr>
<td>2020/02/04</td>
<td>*鑫</td>
<td></td>
<td>3.65</td>
</tr>
<tr>
<td>2020/01/28</td>
<td>（微信）Good luck,Mr. Gosky.</td>
<td>软件和UI都很好看，加油！</td>
<td>20.00</td>
</tr>
<tr>
<td>2020/01/26</td>
<td>（微信）长欢</td>
<td></td>
<td>6.00</td>
</tr>
<tr>
<td>2020/01/22</td>
<td>（支付宝）*—</td>
<td></td>
<td>10.00</td>
</tr>
<tr>
<td>2020/01/18</td>
<td>（微信）Player</td>
<td></td>
<td>3.00</td>
</tr>
<tr>
<td>2020/01/17</td>
<td>（微信）sin</td>
<td>加油！</td>
<td>1.00</td>
</tr>
<tr>
<td>2019/12/30</td>
<td>（微信）HouRuilong</td>
<td></td>
<td>6.66</td>
</tr>
<tr>
<td>2019/12/28</td>
<td>*宇轩</td>
<td></td>
<td>3.00</td>
</tr>
<tr>
<td>2019/12/15</td>
<td>*银川</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2019/12/13</td>
<td>*子秋</td>
<td></td>
<td>3.00</td>
</tr>
<tr>
<td>2019/12/11</td>
<td>（微信）竹璃纷染</td>
<td>ヾ(❀╹◡╹)ﾉ~支持！</td>
<td>3.00</td>
</tr>
<tr>
<td>2019/12/10</td>
<td>*奕斯</td>
<td></td>
<td>2.00</td>
</tr>
<tr>
<td>2019/12/08</td>
<td>*柏墚</td>
<td></td>
<td>2.00</td>
</tr>
<tr>
<td>2019/12/08</td>
<td>（微信）孙書云101029</td>
<td>软件实在是太棒了！学生党很穷，这就是一点心意，表达一下感谢！</td>
<td>2.00</td>
</tr>
<tr>
<td>2019/12/06</td>
<td>（微信匿名）</td>
<td>用了快一年了，很舒服。</td>
<td>6.66</td>
</tr>
<tr>
<td>2019/12/05</td>
<td>*谦</td>
<td></td>
<td>7.77</td>
</tr>
<tr>
<td>2019/12/03</td>
<td>*裕钦</td>
<td></td>
<td>2.00</td>
</tr>
<tr>
<td>2019/11/23</td>
<td>*阳</td>
<td></td>
<td>10.00</td>
</tr>
<tr>
<td>2019/11/23</td>
<td>*克富</td>
<td></td>
<td>1.00</td>
</tr>
<tr>
<td>2019/11/04</td>
<td>【红巢】夕阳薄暮</td>
<td></td>
<td>1.00</td>
</tr>
<tr>
<td>2019/10/31</td>
<td>*孝宇</td>
<td></td>
<td>6.00</td>
</tr>
<tr>
<td>2019/10/31</td>
<td>*静</td>
<td></td>
<td>6.00</td>
</tr>
<tr>
<td>2019/10/31</td>
<td>酷安 @该账号涉嫌严重违纪</td>
<td></td>
<td>6.66</td>
</tr>
<tr>
<td>2019/10/28</td>
<td>*刚</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2019/10/28</td>
<td>*江</td>
<td></td>
<td>6.00</td>
</tr>
<tr>
<td>2019/10/27</td>
<td>*艺</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2019/10/26</td>
<td>*博超</td>
<td></td>
<td>1.00</td>
</tr>
<tr>
<td>2019/10/20</td>
<td>*海涛</td>
<td></td>
<td>3.00</td>
</tr>
<tr>
<td>2019/10/17</td>
<td>*佳佳</td>
<td></td>
<td>1.00</td>
</tr>
<tr>
<td>2019/10/10</td>
<td>*进伟</td>
<td></td>
<td>30.00</td>
</tr>
<tr>
<td>2019/10/03</td>
<td>*心煌</td>
<td></td>
<td>10.00</td>
</tr>
<tr>
<td>2019/09/24</td>
<td>*羽</td>
<td></td>
<td>2.00</td>
</tr>
<tr>
<td>2019/08/29</td>
<td>*步军</td>
<td></td>
<td>10.00</td>
</tr>
<tr>
<td>2019/08/29</td>
<td>*金陆</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2019/08/25</td>
<td>*永振</td>
<td></td>
<td>3.00</td>
</tr>
<tr>
<td>2019/08/25</td>
<td>*静</td>
<td></td>
<td>10.00</td>
</tr>
<tr>
<td>2019/06/22</td>
<td>*思远</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2019/05/21</td>
<td>*瀚禧</td>
<td></td>
<td>57.21</td>
</tr>
<tr>
<td>2019/04/12</td>
<td>*国浩</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2019/04/06</td>
<td>*耿</td>
<td></td>
<td>0.01</td>
</tr>
<tr>
<td>2019/04/03</td>
<td>*金娥</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2019/03/29</td>
<td>*浩宗</td>
<td></td>
<td>1.00</td>
</tr>
<tr>
<td>2019/03/21</td>
<td>*晓阳</td>
<td></td>
<td>10.00</td>
</tr>
<tr>
<td>2019/03/20</td>
<td>*泽恺</td>
<td></td>
<td>1.00</td>
</tr>
<tr>
<td>2019/03/19</td>
<td>*伟棠</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2019/03/09</td>
<td>*翊淇</td>
<td></td>
<td>3.00</td>
</tr>
<tr>
<td>2019/02/27</td>
<td>*汉凯</td>
<td></td>
<td>6.66</td>
</tr>
<tr>
<td>2019/02/27</td>
<td>*京</td>
<td></td>
<td>9.99</td>
</tr>
<tr>
<td>2019/02/15</td>
<td>*猛</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2019/02/14</td>
<td>*涵予</td>
<td></td>
<td>5.00</td>
</tr>
<tr>
<td>2019/02/02</td>
<td>*佳融</td>
<td></td>
<td>5.00</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>项目</category>
        <category>人升Q&amp;A</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>PopupMenu弹出导致RecyclerView滚动的解决方法</title>
    <url>/post/91d5b971.html</url>
    <content><![CDATA[<blockquote>
<p> 参考： <a href="https://blog.csdn.net/qq_16445551/article/details/70213660">https://blog.csdn.net/qq_16445551/article/details/70213660</a></p>
</blockquote>
<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>这个问题其实一直存在，但是新版本增加了Toolbar收缩之后，就因为这个自动滚动直接导致了Toolbar收缩，现象更为明显。</p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>参考<a href="">原文</a>两个解决办法</p>
<p><strong>如果你的应用的最小支持版本达到了<em>Android KitKat 4.4</em>的话，建议使用第一种方法。</strong></p>
<p><strong>简单总结一下：</strong></p>
<ol>
<li><blockquote>
<p>将<code>support.v7</code>包的PopupMenu换成<code>android.widget.PopupWindow</code>包下的PopupMenu。</p>
</blockquote>
<p><strong>对应到AndroidX的话</strong>，就是将<code>androidx.appcompat.widget.PopupMenu</code>换成<code>import android.widget.PopupMenu</code></p>
</li>
</ol>
<ol start="2">
<li><blockquote>
<p>重写与<code>PopupMenu</code>绑定的<code>AnchorView</code>的<code>requestRectangleOnScreen(Rect rectangle, boolean immediate)</code>方法，并且<code>return false</code>。</p>
</blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Kotlin协程混淆规则</title>
    <url>/post/5d88e185.html</url>
    <content><![CDATA[<blockquote>
<p> 参考： <a href="https://github.com/Kotlin/kotlinx.coroutines/issues/799">https://github.com/Kotlin/kotlinx.coroutines/issues/799</a></p>
</blockquote>
<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>发布了《人升》新版本后，</p>
<p>线上突然出现了数个Kotlin协程相关的异常。</p>
<blockquote>
<p> IllegalStateException: Module with the Main dispatcher is missing. Add dependency providing the Main dispatcher, e.g. ‘kotlinx-coroutines-android’</p>
</blockquote>
<p>而我们肯定是已经依赖了kotlin的协程库的，问题不在于此。</p>
<p><strong>不是很懂为什么在更新的好几天之后才集中爆发这个问题。</strong></p>
<p>查询了一下发现是升级kotlin版本后的混淆bug，要增加几条混淆规则。</p>
<h1 id="混淆规则"><a href="#混淆规则" class="headerlink" title="混淆规则"></a>混淆规则</h1><p><a href="https://github.com/Kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/resources/META-INF/proguard/coroutines.pro">https://github.com/Kotlin/kotlinx.coroutines/blob/master/kotlinx-coroutines-core/jvm/resources/META-INF/proguard/coroutines.pro</a></p>
<p>将以下混淆规则加入到项目的混淆规则文件中：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># ServiceLoader support</span><br><span class="line">-keepnames class kotlinx.coroutines.internal.MainDispatcherFactory &#123;&#125;</span><br><span class="line">-keepnames class kotlinx.coroutines.CoroutineExceptionHandler &#123;&#125;</span><br><span class="line">-keepnames class kotlinx.coroutines.android.AndroidExceptionPreHandler &#123;&#125;</span><br><span class="line">-keepnames class kotlinx.coroutines.android.AndroidDispatcherFactory &#123;&#125;</span><br><span class="line"></span><br><span class="line"># Most of volatile fields are updated with AFU and should not be mangled</span><br><span class="line">-keepclassmembernames class kotlinx.** &#123;</span><br><span class="line">    volatile &lt;fields&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后重新编译打包发版吧~</p>
]]></content>
      <categories>
        <category>技术</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>人升开发日志#17 | 08/25 接入Firebase、Crashlytics</title>
    <url>/post/be07a40.html</url>
    <content><![CDATA[<p>找到实习后，挺长一段时间没更新了。</p>
<p>《人升》的话，最近接入了Crashlytics，更新了金币系统等等。</p>
<p>回忆一下Crashlytics的接入过程~</p>
<h1 id="为什么选择Crashlytics"><a href="#为什么选择Crashlytics" class="headerlink" title="为什么选择Crashlytics?"></a>为什么选择Crashlytics?</h1><ul>
<li><p><strong>不需要额外权限</strong></p>
<p>而国内很多崩溃统计向的都有不少权限要求，比如友盟统计必须依赖READ_PHONE_STATE等权限。</p>
</li>
<li><p><strong>国内也能访问</strong></p>
<p>是的，虽然Crashlytics属于Firebase，但是并没有用到Google的服务器。</p>
</li>
<li><p><strong>配置简单，不需要额外代码</strong></p>
<p>这一点我也很惊喜，只需要在Gradle文件里进行一些配置。项目代码甚至不需要任何变动。</p>
</li>
<li><p><strong>能直接在Crashlytics后台看到混淆前的堆栈信息</strong></p>
<img src="/post/be07a40/01.jpg" class="">
<img src="/post/be07a40/02.jpg" class="">
</li>
</ul>
<p>另外除了崩溃分析/管理功能外，其实还能在控制台看到活跃用户统计、用户行为分析、次日留存率、版本情况等等。</p>
<p><strong>查看这些信息感觉很有助于维持更新兴趣~</strong></p>
 <img src="/post/be07a40/03.jpg" class="">
<p>总体来讲，感觉Crashlytics很适合独立开发者使用。</p>
<h1 id="接入Firebase以及Crashlytics"><a href="#接入Firebase以及Crashlytics" class="headerlink" title="接入Firebase以及Crashlytics"></a>接入Firebase以及Crashlytics</h1><p>Crashlytics已经被并入了Firebase体系，所以要先接入Firebase。</p>
<blockquote>
<p>Fabric虽然还能直接加入Crashlytics，<strong>但是仅提供支持到2020年3月31号</strong>，官网也在建议用户迁移至Firebase。</p>
</blockquote>
<p>接入Firebase可以参考<a href="https://firebase.google.com/docs/android/setup?hl=zh-cn">官方教程</a>。</p>
<p><strong>流程可以概述为：</strong></p>
<ol>
<li><p>创建Firebase项目</p>
</li>
<li><p>注册应用，上传签名的SHA码</p>
<p><strong>这两步在官网跟着流程走就可以，就不详细说明了。</strong></p>
</li>
<li><p><strong>下载 google-services.json</strong>放到项目的模块目录（一般是app文件夹里）中。</p>
</li>
<li><p>项目级gradle文件里加入Firebase和Crashlytics配置：</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">buildscript &#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    repositories &#123;</span><br><span class="line">        <span class="comment">// 加上这两个仓库地址</span></span><br><span class="line">        google()</span><br><span class="line">        maven &#123;</span><br><span class="line">            url <span class="string">&#x27;https://maven.fabric.io/public&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath <span class="string">&#x27;com.google.gms:google-services:4.3.0&#x27;</span> <span class="comment">// Google 服务</span></span><br><span class="line">        classpath <span class="string">&#x27;io.fabric.tools:gradle:1.29.0&#x27;</span>  <span class="comment">// Crashlytics 插件</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>模块级gradle文件里加入：</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">apply <span class="attr">plugin:</span> <span class="string">&#x27;com.google.gms.google-services&#x27;</span></span><br><span class="line">apply <span class="attr">plugin:</span> <span class="string">&#x27;io.fabric&#x27;</span></span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** firebase **/</span></span><br><span class="line">    implementation <span class="string">&#x27;com.google.firebase:firebase-core:17.0.0&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;com.crashlytics.sdk.android:crashlytics:2.10.1&#x27;</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>到这一步为止，其实已经集成完毕了。</strong></p>
</li>
<li><p>（可选）如果你的应用开启了代码混淆的话，建议在proguard-rules.pro文件里加入以下规则，<strong>以便拿到混淆前的堆栈信息：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Crashlytics</span><br><span class="line">-keepattributes *Annotation*</span><br><span class="line">-keepattributes SourceFile,LineNumberTable</span><br><span class="line">-keep public class * extends java.lang.Exception</span><br><span class="line">-keep class com.crashlytics.** &#123; *; &#125;</span><br><span class="line">-dontwarn com.crashlytics.**</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>测试一下崩溃吧</strong></p>
<p>在相应的地方可以用以下语句制造一个崩溃，然后过几分钟后，前往Firebase的后台查看崩溃信息吧~</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Crashlytics.getInstance().crash() <span class="comment">// 制造一个崩溃</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="更多玩法"><a href="#更多玩法" class="headerlink" title="更多玩法"></a>更多玩法</h1><p>更多Crashlytics的用法可以参考<a href="https://firebase.google.com/docs/crashlytics/customize-crash-reports?hl=zh-cn&amp;platform=android#nav-buttons-1">官方的页面</a>，比如可以记录try-catch住的异常，自定义一些key-value信息方便分析崩溃等等。</p>
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>Pray For KyoAni</title>
    <url>/post/c3b7d6d1.html</url>
    <content><![CDATA[<p><a href="https://www.zhihu.com/question/335530471/answer/755246197">Original Publish</a></p>
<p>这件事的最恐怖之处在于，既不是意外，也不是群体作案，<strong>只是一个恶魔因不明原因想报复就造成了这么大的损伤。</strong></p>
<p>京阿尼在日本动画业界是独树一帜的存在：几乎所有的工作都是内部员工完成，培养自己的原画师，福利制度，以及<strong>完全不用担心的作品高质量。只因为一个疯子就损失了大半有生力量。</strong></p>
<p>7月18号，早上看到京阿尼工作室遭纵火的消息。初还不相信，看到死亡1人的时候还觉得不是特别严重。然后看着死亡人数慢慢升到了33人，再后来变成34人遇难。心情非常复杂，难受。又忍不住继续看事件的报道更新，然后继续难受。</p>
<p>一开始是看了《K-ON》接触到了京阿尼，动画演绎的形式让这部音乐题材的漫画焕发了新生。初还觉得不会对音乐类的动画感兴趣，看完感觉真香。原来日常都能演绎得这么温馨有趣！</p>
<p>后续看了京阿尼的其他作品，无一不是制作精良。生活忙碌之后，虽然有几部京阿尼的番剧还没看，但想着，有京阿尼在，优秀的番剧总会源源不断地产出吧，囤着慢慢看也不迟。<strong>但…</strong></p>
<p><strong>希望奇迹能发生，希望不要再有遇难人数增加了。希望我们还能再遇见京阿尼。</strong></p>
<p>也希望各方能依此次事件加强安保，减少、杜绝这种个人恐怖袭击事件。</p>
 <img src="/post/c3b7d6d1/01.jpg" class="" title="大火中留存的一张原画">
<hr>
<p>另外，看到一些幸灾乐祸和道德绑架捐赠者的言论也很是难受。</p>
<p>拿捐赠来说，他人捐赠何方是他人意愿，哪容得你一个外人干预。<strong>甚至你可以去呼吁不要捐赠，但请不要恶意评论捐赠者。</strong>更何况，我甚至怀疑那些人可曾进行过捐赠。</p>
<p>不过，他们也不会看这些的吧。</p>
<hr>
 <img src="/post/c3b7d6d1/02.jpg" class="" title="希望能帮助到京阿尼吧">]]></content>
      <categories>
        <category>个人</category>
      </categories>
      <tags>
        <tag>个人</tag>
        <tag>京阿尼</tag>
      </tags>
  </entry>
  <entry>
    <title>人升开发日志#15 | 06/16 夜间模式</title>
    <url>/post/33771fff.html</url>
    <content><![CDATA[<p>收到多次需要夜间模式的反馈，就研究了一下要怎么实现~</p>
<p>本以为需要手动替换Theme，实际上Android已经提供了相应的功能。</p>
<p>实际使用之后才发现，Fragment能实现到和Activity在使用上分辨不出的效果。</p>
<h1 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h1><p>首先是依赖，需要使用appcompat：（我这里用的androidx库，support库同理）</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">implementation <span class="string">&#x27;androidx.appcompat:appcompat:1.1.0-beta01&#x27;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p><br /></p>
<h1 id="准备资源"><a href="#准备资源" class="headerlink" title="准备资源"></a>准备资源</h1><ol>
<li><p>Activity的主题要继承自 DayNight 主题</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Base application theme. --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;AppTheme&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;Theme.AppCompat.DayNight&quot;</span>&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;colorPrimary&quot;</span>&gt;</span>@color/colorPrimary<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;colorPrimaryDark&quot;</span>&gt;</span>@color/colorPrimaryDark<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;colorAccent&quot;</span>&gt;</span>@color/colorAccent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>创建values-night文件夹，并在里面放置一份相应的colors.xml</p>
<p><strong>步骤：</strong></p>
<ol>
<li>res文件夹右键 -&gt; <code>New</code> -&gt; <code>New Resource Directory</code> </li>
</ol>
<ul>
<li><p>Directory name 输入<code>values-night</code></p>
</li>
<li><p>Resource type 输入<code>values</code></p>
</li>
</ul>
<ol start="2">
<li>将原本的colors.xml复制一份到values-night文件夹内。</li>
</ol>
</li>
<li><p>调整夜间模式内的颜色值。</p>
</li>
</ol>
<p><br /></p>
<h2 id="编程实现切换"><a href="#编程实现切换" class="headerlink" title="编程实现切换"></a>编程实现切换</h2><p>需要注意的是，这里切换没有考虑到状态的保留。用的是finish+startActivity+动画效果。</p>
<p>一开始使用recreate方法，发现会卡顿一下，而且没有动画效果。</p>
<p><strong>切换按钮的逻辑</strong></p>
<blockquote>
<p>判断模式的代码参考了：<a href="https://juejin.im/entry/586863f1ac502e006d6f1aa8">https://juejin.im/entry/586863f1ac502e006d6f1aa8</a></p>
</blockquote>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//获取当前的模式，设置相反的模式，这里只使用了，夜间和非夜间模式</span></span><br><span class="line"><span class="keyword">val</span> currentMode = resources.configuration.uiMode and Configuration.UI_MODE_NIGHT_MASK</span><br><span class="line"><span class="keyword">val</span> editor = SharedPreferencesUtils.getStatusPreferencesInstance().edit()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (currentMode != Configuration.UI_MODE_NIGHT_YES) &#123;</span><br><span class="line">    <span class="comment">//保存夜间模式状态,Application中可以根据这个值判断是否设置夜间模式</span></span><br><span class="line">    AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_YES)</span><br><span class="line">    <span class="comment">//ThemeConfig主题配置，这里只是保存了是否是夜间模式的boolean值</span></span><br><span class="line">    editor.putBoolean(<span class="string">&quot;isNightMode&quot;</span>, <span class="literal">true</span>).apply()</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_NO)</span><br><span class="line">    editor.putBoolean(<span class="string">&quot;isNightMode&quot;</span>, <span class="literal">false</span>).apply()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> intent = Intent(<span class="keyword">this</span>, MainActivity::<span class="keyword">class</span>.java)</span><br><span class="line">finish()</span><br><span class="line">overridePendingTransition(R.anim.fade_in, R.anim.fade_out)</span><br><span class="line">startActivity(intent)</span><br></pre></td></tr></table></figure>
<p><strong>自定义Application的相应逻辑</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (SharedPreferencesUtils.getStatusPreferencesInstance().getBoolean(<span class="string">&quot;isNightMode&quot;</span>, <span class="literal">false</span>)) &#123;</span><br><span class="line">    AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_YES)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_NO)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="难点"><a href="#难点" class="headerlink" title="难点"></a>难点</h2><p><strong>其实，夜间模式的实现并不困难。难的是：</strong></p>
<ul>
<li>相应的夜间模式颜色配置</li>
<li>切换实现流畅的动画效果</li>
<li>切换实现保留状态</li>
<li>切换后确保所有页面都是夜间模式</li>
</ul>
<p>我这里是将夜间模式的按钮放在了主页的侧边栏，所以finish之后肯定是唯一一个activity，所以不用考虑残留页面的问题。</p>
<p>保留状态这一点也没有考虑，有需要的话可以参考一下<a href="https://juejin.im/entry/58eb498e0ce463005869dd3b">https://juejin.im/entry/58eb498e0ce463005869dd3b</a></p>
<p>另外还有<a href="https://www.jianshu.com/p/f30ebec8b4ed">通过windowAnimation配合recreate的方法</a>，但是实际测试好像动画不会生效。</p>
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>Git修改已经提交的用户名信息</title>
    <url>/post/5d88e185.html</url>
    <content><![CDATA[<blockquote>
<p> 参考： <a href="https://www.jianshu.com/p/93bb4d049955">https://www.jianshu.com/p/93bb4d049955</a></p>
</blockquote>
<h1 id="最近的一条记录"><a href="#最近的一条记录" class="headerlink" title="最近的一条记录"></a>最近的一条记录</h1><p>如果只是需要修改最近的一条记录的话，只需要</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git commit --amend --author&#x3D;&quot;作者名 &lt;邮箱@xxxx.com&gt;&quot;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：这里的尖括号是要带上的。</p>
</blockquote>
<h1 id="多条记录"><a href="#多条记录" class="headerlink" title="多条记录"></a>多条记录</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 第一步，（n）代表提交次数</span><br><span class="line">git rebase -i HEAD~n</span><br><span class="line"># 第二步</span><br><span class="line">然后按&#96;i&#96;编辑，把&#96;pick&#96; 改成 &#96;edit&#96;，按&#39;Esc&#39;退出编辑，按&#96;:wq&#96;保存退出</span><br><span class="line"># 第三步</span><br><span class="line">git commit --amend --author&#x3D;&quot;作者 &lt;邮箱@xxxx.com&gt;&quot; --no-edit</span><br><span class="line"># 第四步（多条记录的话，会跳转到下一条记录，返回第三步）</span><br><span class="line">git rebase --continue</span><br><span class="line"># 第五步（全部完成后，覆盖远程git记录，危险操作要谨慎操作）</span><br><span class="line">git push --force</span><br></pre></td></tr></table></figure>
<h1 id="非常多条记录更改"><a href="#非常多条记录更改" class="headerlink" title="非常多条记录更改"></a>非常多条记录更改</h1><p>转自网络：</p>
<blockquote>
<p>如果是多个修改，那么就需要使用到<code>git filter-branch</code>这个工具来做批量修改<br>为了方便大家使用，封装了一个简单的shell脚本，直接修改<code>[XXX]</code>中的变量为对应的值即可</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"> </span><br><span class="line">git filter-branch --env-filter <span class="string">&#x27;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">an=&quot;$GIT_AUTHOR_NAME&quot;</span></span><br><span class="line"><span class="string">am=&quot;$GIT_AUTHOR_EMAIL&quot;</span></span><br><span class="line"><span class="string">cn=&quot;$GIT_COMMITTER_NAME&quot;</span></span><br><span class="line"><span class="string">cm=&quot;$GIT_COMMITTER_EMAIL&quot;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">if [ &quot;$GIT_COMMITTER_EMAIL&quot; = &quot;[Your Old Email]&quot; ]</span></span><br><span class="line"><span class="string">then</span></span><br><span class="line"><span class="string">    cn=&quot;[Your New Author Name]&quot;</span></span><br><span class="line"><span class="string">    cm=&quot;[Your New Email]&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">if [ &quot;$GIT_AUTHOR_EMAIL&quot; = &quot;[Your Old Email]&quot; ]</span></span><br><span class="line"><span class="string">then</span></span><br><span class="line"><span class="string">    an=&quot;[Your New Author Name]&quot;</span></span><br><span class="line"><span class="string">    am=&quot;[Your New Email]&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">export GIT_AUTHOR_NAME=&quot;$an&quot;</span></span><br><span class="line"><span class="string">export GIT_AUTHOR_EMAIL=&quot;$am&quot;</span></span><br><span class="line"><span class="string">export GIT_COMMITTER_NAME=&quot;$cn&quot;</span></span><br><span class="line"><span class="string">export GIT_COMMITTER_EMAIL=&quot;$cm&quot;</span></span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>[Android]多语言、Google授权登陆</title>
    <url>/post/7096aa00.html</url>
    <content><![CDATA[<p><strong>以此文总结一下<a href="https://play.google.com/store/apps/details?id=net.sarasarasa.lifeup">《LifeUp》上架 GooglePlay</a> 的全过程~</strong></p>
<h1 id="多语言"><a href="#多语言" class="headerlink" title="多语言"></a>多语言</h1><p>App默认会根据系统语言加载不同的字符串资源文件，这是我们实现多语言的基础。</p>
<h2 id="新建资源文件"><a href="#新建资源文件" class="headerlink" title="新建资源文件"></a>新建资源文件</h2><p>首先是建立相应的资源文件，可以手动建立，也可以用 Android Studio 的选项建立：</p>
<p><strong>右键 res 文件夹选择<code>File</code>–&gt;<code>New</code>–&gt;<code>Android resource file</code>选择 <code>Locale</code></strong></p>
<p>可以见到下图</p>
 <img src="/post/7096aa00/01.jpg" class="">
<p>选择你要新建的语言，并且改文件名为strings即可。</p>
<p>实际上，就是新建一个value-(语言缩写)的文件夹（简体中文的话就是<code>value-zh</code>），然后在其中放上string.xml文件。</p>
<h2 id="提取代码、Layout中的字符串"><a href="#提取代码、Layout中的字符串" class="headerlink" title="提取代码、Layout中的字符串"></a>提取代码、Layout中的字符串</h2><p>点击相应的字符串，按下<code>ALT+ENTER</code>，然后选择 <strong>Extract string resouces</strong>。</p>
<p>然后输入字符串资源的名称，勾选相应的资源文件：</p>
 <img src="/post/7096aa00/02.jpg" class="">
<p>按下确定后，AS就会提取该字符串到资源文件内了，同时代码会被替换成：</p>
<p>Context getString(resouceId)</p>
<p>在Layout中操作同理，利用这个操作可以替换掉App内大部分的静态的字符串。</p>
<p>那么需要动态赋值的字符串该怎么办呢？</p>
<a id="more"></a>
<h2 id="字符串资源文件中的变量设置"><a href="#字符串资源文件中的变量设置" class="headerlink" title="字符串资源文件中的变量设置"></a>字符串资源文件中的变量设置</h2><p>比如我们的字符串需要传入一个整数型变量的话：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;你已经完成了<span class="subst">$&#123;getCount()&#125;</span>个任务&quot;</span> <span class="comment">// kotlin的String模板写法</span></span><br></pre></td></tr></table></figure>
<p>当然，你可以简单地拆分为两个字符串<code>&quot;你已经完成了&quot;</code>和<code>&quot;个任务&quot;</code>，然后</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">getString(R.string.string1) + getCount() + getString(R.string.string2)</span><br></pre></td></tr></table></figure>
<p><strong>只是这种写法很不优雅，而且会有些小问题。</strong></p>
<p>getString的时候，会自动去掉取得的字符串头尾的空格，这会让我们不太好控制格式。</p>
<p>特别是英文的时候，经常需要空格隔开。</p>
<p>何况，有些语言我们需要更改语序，这种简单拼接的方法就很不合适。</p>
<p>其实，字符串资源文件里可以用变量占位的方法：</p>
<blockquote>
<ol>
<li><p>%n$md：代表输出的是整数，n代表是第几个参数，设置m的值可以在输出之前放置空格。</p>
</li>
<li><p>%n$ms：代表输出的是字符串，n代表是第几个参数，设置m的值可以在输出之前放置空格。</p>
</li>
<li><p>%n$mf：代表输出的是浮点数，n代表是第几个参数，设置m的值可以控制小数位数，如m=2.2时，输出格式为0.00。</p>
</li>
</ol>
<p>如果只有一个变量的话，可以直接不写前面的“%n”。</p>
<p>m的值为0的话，也可以留空。</p>
</blockquote>
<p>比如上面的例子中，可以在资源文件里这样写：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;task_finish&quot;</span>&gt;</span>你已经完成了%1$d个任务，共%2$d个<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>英文就可以：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;task_finish&quot;</span>&gt;</span>You have already completed %1$d of %2$d tasks<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>代码中可以这样传入参数：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// getCompletedCount() 就对应 %1$d，getTotalCount()对应%2$d</span></span><br><span class="line">getString(R.string.task_finish,getCompletedCount(),getTotalCount())</span><br></pre></td></tr></table></figure>
<p>利用这个技巧就能完成整个应用的多语言化了。</p>
<p><br /></p>
<h1 id="多语言切换"><a href="#多语言切换" class="headerlink" title="多语言切换"></a>多语言切换</h1><blockquote>
<p>参考：<a href="https://www.jianshu.com/p/b9e32fad36a2">https://www.jianshu.com/p/b9e32fad36a2</a></p>
</blockquote>
<p>主要参考的是上面这篇文章，非常感谢原作者，稍作了一些代码更改。</p>
<ol>
<li><p>工具类代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.SharedPreferences;</span><br><span class="line"><span class="keyword">import</span> android.content.res.Configuration;</span><br><span class="line"><span class="keyword">import</span> android.content.res.Resources;</span><br><span class="line"><span class="keyword">import</span> android.os.Build;</span><br><span class="line"><span class="keyword">import</span> android.os.LocaleList;</span><br><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"><span class="keyword">import</span> android.util.DisplayMetrics;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.RequiresApi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LanguageUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 中文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Locale LOCALE_CHINESE = Locale.CHINESE;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 英文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Locale LOCALE_ENGLISH = Locale.ENGLISH;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LOCALE_SP = <span class="string">&quot;LOCALE_SP&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LOCALE_SP_KEY = <span class="string">&quot;LOCALE_SP_KEY&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Locale <span class="title">getLocale</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        SharedPreferences spLocale = context.getSharedPreferences(LOCALE_SP, Context.MODE_PRIVATE);</span><br><span class="line">        String localeJson = spLocale.getString(LOCALE_SP_KEY, <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(localeJson))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        Gson gson = <span class="keyword">new</span> Gson();</span><br><span class="line">        <span class="keyword">return</span> gson.fromJson(localeJson, Locale.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setLocale</span><span class="params">(Context pContext, Locale pUserLocale)</span> </span>&#123;</span><br><span class="line">        SharedPreferences spLocal = pContext.getSharedPreferences(LOCALE_SP, Context.MODE_PRIVATE);</span><br><span class="line">        SharedPreferences.Editor edit = spLocal.edit();</span><br><span class="line">        String json = <span class="keyword">new</span> Gson().toJson(pUserLocale);</span><br><span class="line">        edit.putString(LOCALE_SP_KEY, json);</span><br><span class="line">        edit.apply();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">clearLocale</span><span class="params">(Context pContext)</span> </span>&#123;</span><br><span class="line">        SharedPreferences spLocal = pContext.getSharedPreferences(LOCALE_SP, Context.MODE_PRIVATE);</span><br><span class="line">        SharedPreferences.Editor edit = spLocal.edit();</span><br><span class="line">        edit.putString(LOCALE_SP_KEY, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        edit.apply();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">updateLocale</span><span class="params">(Context context, Locale locale)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (needUpdateLocale(context, locale)) &#123;</span><br><span class="line">            Configuration configuration = context.getResources().getConfiguration();</span><br><span class="line">            <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.JELLY_BEAN_MR1) &#123;</span><br><span class="line">                configuration.setLocale(locale);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                configuration.locale = locale;</span><br><span class="line">            &#125;</span><br><span class="line">            DisplayMetrics displayMetrics = context.getResources().getDisplayMetrics();</span><br><span class="line">            context.getResources().updateConfiguration(configuration, displayMetrics);</span><br><span class="line">            setLocale(context, locale);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">needUpdateLocale</span><span class="params">(Context pContext, Locale newUserLocale)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> newUserLocale != <span class="keyword">null</span> &amp;&amp; !getCurrentLocale(pContext).equals(newUserLocale);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Locale <span class="title">getCurrentLocale</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        Locale locale;</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.N) &#123; <span class="comment">//7.0有多语言设置获取顶部的语言</span></span><br><span class="line">            locale = context.getResources().getConfiguration().getLocales().get(<span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            locale = context.getResources().getConfiguration().locale;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> locale;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Context <span class="title">languageWork</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 8.0及以上使用createConfigurationContext设置configuration</span></span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) &#123;</span><br><span class="line">            <span class="keyword">return</span> updateResources(context);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> context;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequiresApi(api = Build.VERSION_CODES.O)</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Context <span class="title">updateResources</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        Resources resources = context.getResources();</span><br><span class="line">        Locale locale = LanguageUtil.getLocale(context);</span><br><span class="line">        <span class="keyword">if</span> (locale == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> context;</span><br><span class="line">        &#125;</span><br><span class="line">        Configuration configuration = resources.getConfiguration();</span><br><span class="line">        configuration.setLocale(locale);</span><br><span class="line">        configuration.setLocales(<span class="keyword">new</span> LocaleList(locale));</span><br><span class="line">        <span class="keyword">return</span> context.createConfigurationContext(configuration);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>BaseActivity配置（Kotlin）：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">attachBaseContext</span><span class="params">(newBase: <span class="type">Context</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> context = LanguageUtil.languageWork(newBase)</span><br><span class="line">    <span class="keyword">super</span>.attachBaseContext(context)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>工具类使用：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LanguageUtil.updateLocale(context, LanguageUtil.LOCALE_ENGLISH)</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><strong>注意：</strong>切换语言后，之前创建的Activity的语言不会马上切换。这里应该引导用户重启应用，或者是想方设法让之前的Activity销毁重建一遍。</p>
<p><br /></p>
<h1 id="接入Google登陆"><a href="#接入Google登陆" class="headerlink" title="接入Google登陆"></a>接入Google登陆</h1><blockquote>
<p>科学上网肯定是要需要的~这里不提供解决方案。</p>
</blockquote>
<h2 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h2><blockquote>
<p> Google Develper原文：<a href="https://developers.google.com/identity/sign-in/android/start-integrating">https://developers.google.com/identity/sign-in/android/start-integrating</a></p>
</blockquote>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ul>
<li>Android 设备至少是Android 4.1及以上，并且安装有15.0.0以上版本的 Google Play 服务。</li>
<li>项目配置编译版本对应Android 4.1及以上。</li>
<li>安装 Google Play Services SDK<ol>
<li>在Android Studio，选择Tools &gt; Android &gt; SDK Manager。</li>
<li>移到底部选择 Extras &gt; Google Repository</li>
</ol>
</li>
</ul>
<h3 id="Gradle配置"><a href="#Gradle配置" class="headerlink" title="Gradle配置"></a>Gradle配置</h3><p>项目级别的build.gradle文件中配置Google的Maven仓库：</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        google()</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果你使用的Gradle版本低于4.1，使用下面语句代替:</span></span><br><span class="line">        <span class="comment">// maven &#123;</span></span><br><span class="line">        <span class="comment">//     url &#x27;https://maven.google.com&#x27;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后在app模块级别的build.gradle文件里，声明Google Play服务依赖：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apply plugin: &#39;com.android.application&#39;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    dependencies &#123;</span><br><span class="line">        compile &#39;com.google.android.gms:play-services-auth:16.0.1&#39;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h2 id="配置-Google-API-控制台项目"><a href="#配置-Google-API-控制台项目" class="headerlink" title="配置 Google API 控制台项目"></a>配置 Google API 控制台项目</h2><p>点击<a href="https://developers.google.com/identity/sign-in/android/start-integrating">原文</a>中的CONFIGURE A PROJECT按钮，然后按照步骤进行就可以配置项目了。</p>
<p>或者前往<a href="https://console.developers.google.com/apis/配置也可以。">https://console.developers.google.com/apis/配置也可以。</a></p>
<h3 id="所需的信息"><a href="#所需的信息" class="headerlink" title="所需的信息"></a>所需的信息</h3><ul>
<li><p>项目名</p>
</li>
<li><p>签名证书的指纹</p>
<p>可以通过这条命令获取：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">keytool -exportcert -keystore &lt;将这里替换成你的keystore文件路径，不含尖括号&gt; -list -v</span><br></pre></td></tr></table></figure>
</li>
<li><p>软件包名</p>
</li>
</ul>
<h3 id="获得Client-ID"><a href="#获得Client-ID" class="headerlink" title="获得Client ID"></a>获得Client ID</h3><p>配置完后，你能在Google APIs看到你配置的OAuth 2.0客户端ID。</p>
<p>其中有一个是Web应用类型的，一个是Android应用类型的。</p>
<p>前者是提供给有后端服务器验证需求使用的，具体可以参考：<a href="https://developers.google.com/identity/sign-in/android/backend-auth">https://developers.google.com/identity/sign-in/android/backend-auth</a></p>
<h1 id="项目配置实现Google登录"><a href="#项目配置实现Google登录" class="headerlink" title="项目配置实现Google登录"></a>项目配置实现Google登录</h1><h2 id="配置-GoogleSignInClient"><a href="#配置-GoogleSignInClient" class="headerlink" title="配置 GoogleSignInClient"></a>配置 GoogleSignInClient</h2><p>直接看代码吧：</p>
<ol>
<li><p>在activity的<code>onCreate</code>方法中使用 GoogleSignInOptions 配置你所需要申请的 API 范围：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 配置获取用户ID、邮箱和头像等基础信息</span></span><br><span class="line"><span class="comment">// 其中 DEFAULT_SIGN_IN 用户ID和头像等基础信息。</span></span><br><span class="line">GoogleSignInOptions gso = <span class="keyword">new</span> GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)</span><br><span class="line">        .requestEmail()</span><br><span class="line">        .build();</span><br></pre></td></tr></table></figure>
</li>
<li><p>同样在<code>onCreate</code>方法中构建一个 GoogleSIgnInClient 实例</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 利用你刚才的gso配置构建GoogleSIgnInClient实例</span></span><br><span class="line">mGoogleSignInClient = GoogleSignIn.getClient(<span class="keyword">this</span>, gso);</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="检查登录状态"><a href="#检查登录状态" class="headerlink" title="检查登录状态"></a>检查登录状态</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 检查用户是否已经登录过，如果已经登陆过会返回一个GoogleSignInAccount实例</span></span><br><span class="line"><span class="comment">// 接着你就应该拿着这些信息去更新 UI 了</span></span><br><span class="line"><span class="comment">// 如果没有登录，account会返回null值。</span></span><br><span class="line">GoogleSignInAccount account = GoogleSignIn.getLastSignedInAccount(<span class="keyword">this</span>);</span><br><span class="line">updateUI(account);</span><br></pre></td></tr></table></figure>
<h2 id="布局增加登录按钮"><a href="#布局增加登录按钮" class="headerlink" title="布局增加登录按钮"></a>布局增加登录按钮</h2><ol>
<li><p>在布局文件中加入：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;com.google.android.gms.common.SignInButton</span><br><span class="line"> android:id=&quot;@+id/sign_in_button&quot;</span><br><span class="line"> android:layout_width=&quot;wrap_content&quot;</span><br><span class="line"> android:layout_height=&quot;wrap_content&quot; /&gt;</span><br></pre></td></tr></table></figure>
<p>你能得到一个这样的登录按钮：</p>
 <img src="/post/7096aa00/03.jpg" class="">
</li>
<li><p><strong>可选：</strong>你可以使用setSize方法修改按钮的样式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 设置登录按钮的尺寸样式</span></span><br><span class="line">SignInButton signInButton = findViewById(R.id.sign_in_button);</span><br><span class="line">signInButton.setSize(SignInButton.SIZE_STANDARD);</span><br></pre></td></tr></table></figure>
</li>
<li><p>设置<strong>onClickListener</strong>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">findViewById(R.id.sign_in_button).setOnClickListener(<span class="keyword">this</span>);</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="实现登录逻辑"><a href="#实现登录逻辑" class="headerlink" title="实现登录逻辑"></a>实现登录逻辑</h2><ol>
<li><p>实现 activity 的onClick方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (v.getId()) &#123;</span><br><span class="line">        <span class="keyword">case</span> R.id.sign_in_button:</span><br><span class="line">            signIn();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>实现 signIn 方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">signIn</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Intent signInIntent = mGoogleSignInClient.getSignInIntent();</span><br><span class="line">    startActivityForResult(signInIntent, RC_SIGN_IN);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在用户登录成功后，你会在activity的<code>onActivityResult</code> 方法回调中获得一个 <a href="https://developers.google.com/android/reference/com/google/android/gms/auth/api/signin/GoogleSignInAccount.html"><code>GoogleSignInAccount</code></a>实例。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 结果是从 GoogleSignInClient.getSignInIntent(...) 回调回来的;</span></span><br><span class="line">    <span class="keyword">if</span> (requestCode == RC_SIGN_IN) &#123;</span><br><span class="line">        Task&lt;GoogleSignInAccount&gt; task = GoogleSignIn.getSignedInAccountFromIntent(data);</span><br><span class="line">        handleSignInResult(task);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>处理GoogleSignInAccount实例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleSignInResult</span><span class="params">(Task&lt;GoogleSignInAccount&gt; completedTask)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        GoogleSignInAccount account = completedTask.getResult(ApiException.class);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 登录成功，更新UI</span></span><br><span class="line">        <span class="comment">// 可以通过account.getId()获取Id，account.getDisplayName获得昵称等</span></span><br><span class="line">        updateUI(account);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ApiException e) &#123;</span><br><span class="line">        <span class="comment">// ApiException 的状态码代表着错误原因</span></span><br><span class="line">        <span class="comment">// 可以参考 GoogleSignInStatusCodes 类查询具体原因</span></span><br><span class="line">        Log.w(TAG, <span class="string">&quot;signInResult:failed code=&quot;</span> + e.getStatusCode());</span><br><span class="line">        updateUI(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>可选：</strong>如果你需要让后端去调用相应API，应该通过</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String idToken = account.getIdToken();</span><br></pre></td></tr></table></figure>
<p>获取到 IdToken 然后通过HTTP POST方法发送给后端，然后后端拿去验证，调用API。</p>
<p>具体参考：<a href="https://developers.google.com/identity/sign-in/android/backend-auth">https://developers.google.com/identity/sign-in/android/backend-auth</a></p>
</li>
</ol>
<h2 id="完整登录代码（Kotlin"><a href="#完整登录代码（Kotlin" class="headerlink" title="完整登录代码（Kotlin)"></a>完整登录代码（Kotlin)</h2><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginActivity</span> : <span class="type">BaseActivity</span></span>() &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> mGoogleSignInClient: GoogleSignInClient</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> RC_SIGN_IN = <span class="number">416</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 登录配置</span></span><br><span class="line">        <span class="keyword">val</span> gso = GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)</span><br><span class="line">        .build()</span><br><span class="line"></span><br><span class="line">        mGoogleSignInClient = GoogleSignIn.getClient(<span class="keyword">this</span>, gso)</span><br><span class="line">        sign_in_button.setOnClickListener &#123; signInViaGoogle() &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">signInViaGoogle</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="comment">// 发起登录的Intent</span></span><br><span class="line">        <span class="keyword">val</span> signInIntent = mGoogleSignInClient.signInIntent</span><br><span class="line">        startActivityForResult(signInIntent, RC_SIGN_IN)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onActivityResult</span><span class="params">(requestCode: <span class="type">Int</span>, resultCode: <span class="type">Int</span>, <span class="keyword">data</span>: <span class="type">Intent</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, <span class="keyword">data</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (requestCode == RC_SIGN_IN) &#123;</span><br><span class="line">            <span class="comment">// 回调收到结果</span></span><br><span class="line">            <span class="keyword">val</span> task = GoogleSignIn.getSignedInAccountFromIntent(<span class="keyword">data</span>)</span><br><span class="line">            handleSignInResult(task)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">handleSignInResult</span><span class="params">(completedTask: <span class="type">Task</span>&lt;<span class="type">GoogleSignInAccount</span>&gt;)</span></span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 拿到结果去更新UI，发起网络请求</span></span><br><span class="line">            <span class="keyword">val</span> account = completedTask.getResult(ApiException::<span class="keyword">class</span>.java)</span><br><span class="line">            <span class="keyword">val</span> signUpVO = SignUpVO()</span><br><span class="line"></span><br><span class="line">            with(signUpVO) &#123;</span><br><span class="line">                authIdentifier = account?.id</span><br><span class="line">                authType = <span class="string">&quot;google&quot;</span></span><br><span class="line">                nickname = account?.displayName</span><br><span class="line">                userHead = account?.photoUrl.toString()</span><br><span class="line">                idToken = account?.idToken</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            loginNetworkImpl.loginOrSignUp(signUpVO, <span class="string">&quot;google&quot;</span>)</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (e: ApiException) &#123;</span><br><span class="line">            Log.w(<span class="string">&quot;SIGN&quot;</span>, <span class="string">&quot;signInResult:failed code=&quot;</span> + e.statusCode())</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Toolbar减少标题和 Navigation icon 的间距</title>
    <url>/post/96ecb474.html</url>
    <content><![CDATA[<p>Toolbar 默认配置下，标题和Navigation icon（比如返回按钮）之间的间隔会迷之过长，</p>
<p>可以通过配置toolbar的属性调整：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">app:contentInsetStartWithNavigation=&quot;0dp&quot;</span><br></pre></td></tr></table></figure>
<p>这个间隔的设计好像是配合没有Navigation icon的情况的，默认值为16dp。</p>
<p>有Navigation icon的情况下应该手动调整。</p>
<p><strong>完整的Toolbar配置：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;com.google.android.material.appbar.AppBarLayout</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">    android:theme=&quot;@style/AppTheme.AppBarOverlay&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;androidx.appcompat.widget.Toolbar</span><br><span class="line">            android:id=&quot;@+id/toolbar&quot;</span><br><span class="line">            android:layout_width=&quot;match_parent&quot;</span><br><span class="line">            android:layout_height=&quot;?attr/actionBarSize&quot;</span><br><span class="line">            android:background=&quot;?attr/colorPrimary&quot;</span><br><span class="line">            app:contentInsetStartWithNavigation=&quot;0dp&quot;</span><br><span class="line">            app:popupTheme=&quot;@style/AppTheme.PopupOverlay&quot; /&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">com.google.android.material.appbar.AppBarLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>桌面小部件-IntentService-Oreo的那些事</title>
    <url>/post/5e0f1c47.html</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>之前在《人升》的桌面小部件，实现ListView中的点击事件监听的方式是：</p>
<p>使用fillInIntent发送广播到Widget类中，并在onReceive方法中拦截，处理业务逻辑。</p>
<p><strong>但是，</strong></p>
<p>Widget的本质是个广播接收器，不适宜在里面处理耗时操作。</p>
<p>（完成团队事项的时候需要发送网络请求，普通事项需要更改数据库，都可以视为是耗时操作。）</p>
<p>所以，我决定改用IntentService处理完成事项的业务逻辑。</p>
<p><strong>IntentService的特点是后台运行、自动销毁、异步运行。</strong></p>
<p>首先尝试直接用fillInIntent启动服务失败了。</p>
<p><strong>然后改成了先发送广播，然后在Widget类中，并在onReceive方法拦截再启动IntentService：</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onReceive</span><span class="params">(context: <span class="type">Context</span>, intent: <span class="type">Intent</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.onReceive(context, intent)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (...) &#123;</span><br><span class="line">    ...</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (intent.action == FINISH_TASK) &#123;</span><br><span class="line">        <span class="comment">// 将耗时操作交给IntentService完成</span></span><br><span class="line">        <span class="keyword">val</span> finishIntent = Intent(context, FinishTaskIntentService::<span class="keyword">class</span>.java)</span><br><span class="line">        <span class="keyword">if</span> (intent.extras != <span class="literal">null</span>) &#123;</span><br><span class="line">            finishIntent.putExtras(intent.extras!!)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) &#123;</span><br><span class="line">                context.startForegroundService(finishIntent)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                context.startService(finishIntent)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e: Exception) &#123;</span><br><span class="line">            e.printStackTrace()</span><br><span class="line">            ToastUtils.showShortToast(<span class="string">&quot;完成事项似乎出现了一些问题，请尝试刷新下。&quot;</span>, LifeUpApplication.getLifeUpApplication())</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后就遇到了坑。</p>
<a id="more"></a>
<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>一开始我是没写对Oreo的判断的，直接startService。</p>
<p>简单测试了成功，但是应用放置一会后，再测试，会发现应用抛出了异常：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java.lang.IllegalStateException: Not allowed to start service Intent</span><br></pre></td></tr></table></figure>
<p>查询了一下，是Oreo不允许后台启动服务。</p>
<p>首先需要以startForegroundService的方式启动服务，然后启动后5s内切换到前台服务（调用startForeground方法）：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FinishTaskIntentService</span> : <span class="type">IntentService</span></span>(<span class="string">&quot;FinishTaskIntentService&quot;</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate()</span><br><span class="line">        Log.i(<span class="string">&quot;FinishTaskIntentService&quot;</span>, <span class="string">&quot;onCreate()&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onHandleIntent</span><span class="params">(intent: <span class="type">Intent</span>?)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) &#123;</span><br><span class="line">            <span class="keyword">val</span> NOTIFICATION_CHANNEL_ID = <span class="string">&quot;net.sarasarasa.lifeup&quot;</span></span><br><span class="line">            <span class="keyword">val</span> channelName = <span class="string">&quot;FinishTaskIntentService&quot;</span></span><br><span class="line">            <span class="keyword">val</span> channel = NotificationChannel(NOTIFICATION_CHANNEL_ID, channelName,</span><br><span class="line">                    NotificationManager.IMPORTANCE_MIN)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">val</span> manager = getSystemService(Context.NOTIFICATION_SERVICE) <span class="keyword">as</span> NotificationManager</span><br><span class="line">            manager.createNotificationChannel(channel)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">val</span> notification = Notification.Builder(applicationContext, NOTIFICATION_CHANNEL_ID).build()</span><br><span class="line"></span><br><span class="line">            startForeground(<span class="number">1001</span>, notification)       </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">val</span> extras = intent?.extras</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (extras != <span class="literal">null</span>) &#123;</span><br><span class="line">            ... <span class="comment">// 业务逻辑</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>一开始我是直接new Notification传参，然后测试发现又抛了一个异常：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bad notification for startForeground: java.lang.RuntimeException: invalid channel for service notification: Notification</span><br></pre></td></tr></table></figure>
<p>嗯，这是Android 8.1新添加的限制。</p>
<p><strong>在Android 8.1中，必须创建自己的Notification Channel。</strong></p>
<p><strong>在 Android 9（P）中，还需要声明前台服务权限：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.FOREGROUND_SERVICE&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="JobIntentService"><a href="#JobIntentService" class="headerlink" title="JobIntentService"></a>JobIntentService</h1><p>其实 Google 推荐的是使用 JobIntentService 处理那些后台业务。</p>
<p><strong>特色：</strong></p>
<ul>
<li>8.0以下会被当作普通的Service。</li>
<li>8.0及以上会被作为job用jobScheduler.enqueue()方法来分发。</li>
</ul>
<p>但是呢，JobIntentService 并不适用于我们这个场景：</p>
<p><strong>它的任务会在合适的时刻执行，（即使空闲）也并不保证会立即执行。</strong></p>
<p>这里的<a href="https://stackoverflow.com/questions/46856171/jobintentservice-doesnt-start-immediately-on-android-8-0">讨论</a>挺有意思的，可以看看~</p>
<p>结论就是，需要立即执行的业务最好还是靠前台Service实现。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://stackoverflow.com/questions/46445265/android-8-0-java-lang-illegalstateexception-not-allowed-to-start-service-inten">https://stackoverflow.com/questions/46445265/android-8-0-java-lang-illegalstateexception-not-allowed-to-start-service-inten</a></p>
<p><a href="https://blog.csdn.net/Houson_c/article/details/78461751">JobIntentService详解及使用</a></p>
]]></content>
      <categories>
        <category>技术</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>实现Snackbar弹出时任意View闪躲</title>
    <url>/post/4f03117d.html</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Snackbar 是一个底部弹出消息的控件，类似Toast。</p>
<p><strong>基本使用：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Snackbar.make(view, message_text, duration)</span><br><span class="line">   .setAction(action_text, click_listener)</span><br><span class="line">   .show();</span><br></pre></td></tr></table></figure>
<p>我们知道，在根布局是CoordinatorLayout，并且设置CoordinatorLayout的behavior之后，可以实现Snackbar弹出的时候，fab（浮动按钮）会自动向上移动防止被遮挡。</p>
<a id="more"></a>
<p>代码如下：</p>
<p><strong>布局文件</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.coordinatorlayout.widget.CoordinatorLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/coordinator_layout&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@color/background_color&quot;</span></span></span><br><span class="line">    &lt;!-- 注意这里要设置 layout_behavior --&gt;</span><br><span class="line">    app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;</span><br><span class="line">    tools:context=&quot;.fragment.TodoFragment&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;androidx.constraintlayout.widget.ConstraintLayout</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;match_parent&quot;&gt;</span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 其他View的布局 --&gt;</span></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;com.google.android.material.floatingactionbutton.FloatingActionButton</span><br><span class="line">        android:id=&quot;@+id/fab&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_gravity=&quot;end|bottom&quot;</span><br><span class="line">        android:layout_marginEnd=&quot;16dp&quot;</span><br><span class="line">        android:layout_marginBottom=&quot;16dp&quot;</span><br><span class="line">        android:adjustViewBounds=&quot;false&quot;</span><br><span class="line">        android:clickable=&quot;true&quot;</span><br><span class="line">        app:backgroundTint=&quot;@color/blue&quot;</span><br><span class="line">        app:fabSize=&quot;normal&quot;</span><br><span class="line">        app:srcCompat=&quot;@drawable/ic_add_d&quot; /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.coordinatorlayout.widget.CoordinatorLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>注：</strong>我这里用了AndroidX的支持库，如果你没迁移到AndroidX，需要改下控件的引用路径。</p>
<p>然后在activity中：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">Snackbar.make(coordinator_layout, <span class="string">&quot;Snackbar弹出信息&quot;</span>,  Snackbar.LENGTH_SHORT)</span><br><span class="line">   .show();</span><br></pre></td></tr></table></figure>
<p>效果（其实这里已经实现了ConstraintLayout的闪躲）：</p>
 
<h1 id="实现任意View闪躲"><a href="#实现任意View闪躲" class="headerlink" title="实现任意View闪躲"></a>实现任意View闪躲</h1><p>那么如何实现任意View的闪躲呢？</p>
<p>查了一番StackOverflow，发现最佳的实践应该就是实现一个通用的behavior。</p>
<p>废话不多说，直接上代码（Java）：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Keep</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MoveUpwardBehavior</span> <span class="keyword">extends</span> <span class="title">CoordinatorLayout</span>.<span class="title">Behavior</span>&lt;<span class="title">View</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MoveUpwardBehavior</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MoveUpwardBehavior</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">layoutDependsOn</span><span class="params">(CoordinatorLayout parent, View child, View dependency)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dependency <span class="keyword">instanceof</span> Snackbar.SnackbarLayout;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onDependentViewChanged</span><span class="params">(CoordinatorLayout parent, View child, View dependency)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">float</span> translationY = Math.min(<span class="number">0</span>, ViewCompat.getTranslationY(dependency) - dependency.getHeight());</span><br><span class="line">        child.setTranslationY(translationY);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重写这个方法才能实现滑动清除消息</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDependentViewRemoved</span><span class="params">(CoordinatorLayout parent, View child, View dependency)</span> </span>&#123;</span><br><span class="line">        ViewCompat.animate(child).translationY(<span class="number">0</span>).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后在布局文件中，在你想要实现闪躲的View上增加这个layout_behavior：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;androidx.constraintlayout.widget.ConstraintLayout</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;match_parent&quot;</span><br><span class="line">    <span class="comment">&lt;!-- 就是这句了，注意要有完整的包名 --&gt;</span></span><br><span class="line">    app:layout_behavior=&quot;net.sarasarasa.lifeup.base.MoveUpwardBehavior&quot;&gt;</span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 其他View的布局 --&gt;</span></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>可以在AS里快速获取含完整报名的引用：右键你的类文件，选择<strong>Copy Reference</strong>。</p>
<p>没错，这样就完成了~测试去吧。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://stackoverflow.com/questions/33217241/how-to-move-a-view-above-snackbar-just-like-floatingbutton">https://stackoverflow.com/questions/33217241/how-to-move-a-view-above-snackbar-just-like-floatingbutton</a></p>
]]></content>
      <categories>
        <category>技术</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot2+Jpa+Shiro实现用户鉴权</title>
    <url>/post/27139efb.html</url>
    <content><![CDATA[<p>课设有个额外任务是用Shiro实现用户鉴权，记录一下。</p>
<p>大部分步骤都参考了 <a href="https://xlui.me/t/spring-boot-shiro/">https://xlui.me/t/spring-boot-shiro/</a> 这篇文章，安利一下~</p>
<p>不过也遇到了一些小问题。</p>
<a id="more"></a>
<h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><p>或是添加以下 Maven 依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- shiro --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><br /></p>
<h2 id="建表和实体类"><a href="#建表和实体类" class="headerlink" title="建表和实体类"></a>建表和实体类</h2><p>Sql语句建表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `shiro_permission`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `shiro_permission` (</span><br><span class="line">  `permission_id` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `permission` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `create_time` datetime(<span class="number">6</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `remark` <span class="type">varchar</span>(<span class="number">1000</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`permission_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">6</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `shiro_role`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `shiro_role` (</span><br><span class="line">  `role_id` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `role` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `create_time` datetime(<span class="number">6</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `remark` <span class="type">varchar</span>(<span class="number">1000</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`role_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">7</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `shiro_role_permission`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `shiro_role_permission` (</span><br><span class="line">  `rp_id` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `permission_id` <span class="type">int</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `role_id` <span class="type">int</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`rp_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">16</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `shiro_user`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `shiro_user` (</span><br><span class="line">  `user_id` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `password` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `salt` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `username` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `nickname` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `create_time` datetime(<span class="number">6</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `remark` <span class="type">varchar</span>(<span class="number">1000</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`user_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">11</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `shiro_user_role`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `shiro_user_role` (</span><br><span class="line">  `ur_id` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `user_id` <span class="type">int</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `role_id` <span class="type">int</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`ur_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">16</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure>
<p>PermissionDO.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> net.sarasarasa.dataobject;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> AyagiKei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@url</span> https://github.com/Ayagikei</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;shiro_permission&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PermissionDO</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">2815922618943120009L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue(strategy = GenerationType.IDENTITY)</span></span><br><span class="line">    <span class="meta">@Column(name = &quot;permission_id&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer permissionId;</span><br><span class="line">    <span class="keyword">private</span> String permission;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建时间</span></span><br><span class="line">    <span class="meta">@Column(name = &quot;create_time&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String remark;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToMany</span></span><br><span class="line">    <span class="meta">@JoinTable(name = &quot;shiro_role_permission&quot;, joinColumns = &#123;@JoinColumn(name = &quot;permission_id&quot;)&#125;, inverseJoinColumns = &#123;@JoinColumn(name = &quot;role_id&quot;)&#125;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;RoleDO&gt; roleList;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> permission;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>RoleDO.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> net.sarasarasa.dataobject;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> AyagiKei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@url</span> https://github.com/Ayagikei</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;shiro_role&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RoleDO</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">2532670665590869938L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue(strategy = GenerationType.IDENTITY)</span></span><br><span class="line">    <span class="meta">@Column(name = &quot;role_id&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer roleId;</span><br><span class="line">    <span class="keyword">private</span> String role;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToMany</span></span><br><span class="line">    <span class="meta">@JoinTable(name = &quot;shiro_user_role&quot;, joinColumns = &#123;@JoinColumn(name = &quot;role_id&quot;)&#125;, inverseJoinColumns = &#123;@JoinColumn(name = &quot;user_id&quot;)&#125;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;UserDO&gt; userList;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToMany</span></span><br><span class="line">    <span class="meta">@JoinTable(name = &quot;shiro_role_permission&quot;, joinColumns = &#123;@JoinColumn(name = &quot;role_id&quot;)&#125;, inverseJoinColumns = &#123;@JoinColumn(name = &quot;permission_id&quot;)&#125;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;PermissionDO&gt; permissionList;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建时间</span></span><br><span class="line">    <span class="meta">@Column(name = &quot;create_time&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String remark;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> role;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>UserDO.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> net.sarasarasa.dataobject;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> AyagiKei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@url</span> https://github.com/Ayagikei</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;shiro_user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDO</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">2319943079325710028L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue(strategy = GenerationType.IDENTITY)</span></span><br><span class="line">    <span class="meta">@Column(name = &quot;user_id&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer userId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Column(name = &quot;username&quot;, nullable = false, unique = true)</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String nickname;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String salt;    <span class="comment">// 密码加盐</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToMany(fetch = FetchType.EAGER)</span></span><br><span class="line">    <span class="meta">@JoinTable(name = &quot;shiro_user_role&quot;, joinColumns = &#123;@JoinColumn(name = &quot;user_id&quot;)&#125;, inverseJoinColumns = &#123;@JoinColumn(name = &quot;role_id&quot;)&#125;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;RoleDO&gt; roleList;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建时间</span></span><br><span class="line">    <span class="meta">@Column(name = &quot;create_time&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String remark;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User[id = &quot;</span> + userId + <span class="string">&quot;, username = &quot;</span> + username + <span class="string">&quot;, password = &quot;</span> + password + <span class="string">&quot;, salt = &quot;</span> + salt + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意Username是要保证唯一性的。</p>
<p><br /></p>
<h2 id="初始化数据库数据"><a href="#初始化数据库数据" class="headerlink" title="初始化数据库数据"></a>初始化数据库数据</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> shiro_user (id, password, salt, username) <span class="keyword">VALUES</span></span><br><span class="line">  (<span class="number">1</span>, &quot;dev&quot;, &quot;salt&quot;, &quot;admin&quot;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> shiro_role (id, role) <span class="keyword">VALUES</span></span><br><span class="line">  (<span class="number">1</span>, &quot;admin&quot;),</span><br><span class="line">  (<span class="number">2</span>, &quot;normal&quot;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> shiro_permission (id, permission) <span class="keyword">VALUES</span></span><br><span class="line">  (<span class="number">1</span>, &quot;user info&quot;),</span><br><span class="line">  (<span class="number">2</span>, &quot;user add&quot;),</span><br><span class="line">  (<span class="number">3</span>, &quot;user del&quot;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> shiro_user_role (user_id, role_id) <span class="keyword">VALUES</span></span><br><span class="line">  (<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> shiro_role_permission (permission_id, role_id) <span class="keyword">VALUES</span></span><br><span class="line">  (<span class="number">1</span>, <span class="number">1</span>),</span><br><span class="line">  (<span class="number">2</span>, <span class="number">1</span>);</span><br></pre></td></tr></table></figure>
<p>这里的数据直接来自参考的文章（偷懒。</p>
<p><br /></p>
<h1 id="JPA查询接口"><a href="#JPA查询接口" class="headerlink" title="JPA查询接口"></a>JPA查询接口</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">User</span>, <span class="title">Integer</span>&gt; </span>&#123;</span><br><span class="line">  <span class="function">User <span class="title">findByUsername</span><span class="params">(String username)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>对于Shiro暂时只需要这个接口。</p>
<p><br /></p>
<h1 id="Shiro-配置"><a href="#Shiro-配置" class="headerlink" title="Shiro 配置"></a>Shiro 配置</h1> <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> net.sarasarasa.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.SecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.spring.web.ShiroFilterFactoryBean;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.web.mgt.DefaultWebSecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> AyagiKei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@url</span> https://github.com/Ayagikei</span></span><br><span class="line"><span class="comment"> * 对Shiro的配置</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShiroConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开启对注解 `<span class="doctag">@RequirePermission</span>` 的支持</span></span><br><span class="line"><span class="comment">     * 在按参考的文章写完配置之后，依然不能使用RequirePermission注解，</span></span><br><span class="line"><span class="comment">     * 在加上这个方法之后才ok。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DefaultAdvisorAutoProxyCreator <span class="title">getDefaultAdvisorAutoProxyCreator</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        DefaultAdvisorAutoProxyCreator defaultAdvisorAutoProxyCreator = <span class="keyword">new</span> DefaultAdvisorAutoProxyCreator();</span><br><span class="line">        defaultAdvisorAutoProxyCreator.setUsePrefix(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> defaultAdvisorAutoProxyCreator;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AuthorizationAttributeSourceAdvisor <span class="title">authorizationAttributeSourceAdvisor</span><span class="params">(SecurityManager securityManager)</span> </span>&#123;</span><br><span class="line">        AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor = <span class="keyword">new</span> AuthorizationAttributeSourceAdvisor();</span><br><span class="line">        authorizationAttributeSourceAdvisor.setSecurityManager(securityManager);</span><br><span class="line">        <span class="keyword">return</span> authorizationAttributeSourceAdvisor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自己实现的 Realm，Shiro 的认证最终都交给 Realm 进行执行了。我们需要自己实现一个 Realm，继承自 AuthrozingRealm</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MyShiroRealm <span class="title">myShiroRealm</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MyShiroRealm();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DefaultWebSecurityManager <span class="title">securityManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DefaultWebSecurityManager securityManager = <span class="keyword">new</span> DefaultWebSecurityManager();</span><br><span class="line">        securityManager.setRealm(myShiroRealm());</span><br><span class="line">        <span class="keyword">return</span> securityManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ShiroFilterFactoryBean <span class="title">shiroFilterFactoryBean</span><span class="params">(SecurityManager securityManager)</span> </span>&#123;</span><br><span class="line">        ShiroFilterFactoryBean shiroFilterFactoryBean = <span class="keyword">new</span> ShiroFilterFactoryBean();</span><br><span class="line">        shiroFilterFactoryBean.setSecurityManager(securityManager);</span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt; filterChainDefinitionMap = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 指定访问所需要的权限perms或者roles</span></span><br><span class="line">        <span class="comment">// url可以用**或者*表示不同程度的通配符匹配</span></span><br><span class="line">        <span class="comment">// 这里重叠匹配的url好像跟调用顺序有关</span></span><br><span class="line">        filterChainDefinitionMap.put(<span class="string">&quot;/page/manage/**&quot;</span>, <span class="string">&quot;perms[manage]&quot;</span>);</span><br><span class="line">        filterChainDefinitionMap.put(<span class="string">&quot;/page/manage/**&quot;</span>, <span class="string">&quot;roles[manager]&quot;</span>);</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        filterChainDefinitionMap.put(<span class="string">&quot;/static/**&quot;</span>, <span class="string">&quot;anon&quot;</span>);                    </span><br><span class="line">        filterChainDefinitionMap.put(<span class="string">&quot;/login&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterChainDefinitionMap.put(<span class="string">&quot;/**&quot;</span>, <span class="string">&quot;authc&quot;</span>);</span><br><span class="line">        <span class="comment">// authc 表示需要验证身份才能访问，anon 表示不需要</span></span><br><span class="line">        </span><br><span class="line">        filterChainDefinitionMap.put(<span class="string">&quot;/toUser&quot;</span>, <span class="string">&quot;user&quot;</span>);</span><br><span class="line">        <span class="comment">// user与authc比较相似，</span></span><br><span class="line">        <span class="comment">// 表示用户不一定需要已经通过认证,只需要曾经被Shiro记住过登录状态(rememberMe)就可以正常访问。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置登陆页面，在没有登陆之前访问需要验证的页面会跳转到这里</span></span><br><span class="line">        shiroFilterFactoryBean.setLoginUrl(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">        <span class="comment">// 设置未授权页面，在登陆后访问权限不够的页面会跳转到这里（不设置默认返回401页面）</span></span><br><span class="line">        shiroFilterFactoryBean.setUnauthorizedUrl(<span class="string">&quot;/unauthorized&quot;</span>);</span><br><span class="line">        <span class="comment">// 如果不设置，默认 Shiro 会寻找 classpath:/template/login.jsp 文件</span></span><br><span class="line">        shiroFilterFactoryBean.setSuccessUrl(<span class="string">&quot;/index&quot;</span>);</span><br><span class="line">        <span class="comment">// 成功登陆后跳转</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 配置注销页面，访问该链接会自动实现注销（登出）功能</span></span><br><span class="line">        filterChainDefinitionMap.put(<span class="string">&quot;/logout&quot;</span>, <span class="string">&quot;logout&quot;</span>);</span><br><span class="line">        shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap);</span><br><span class="line">        <span class="keyword">return</span> shiroFilterFactoryBean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><br /></p>
<h2 id="Shiro-认证和授权"><a href="#Shiro-认证和授权" class="headerlink" title="Shiro 认证和授权"></a>Shiro 认证和授权</h2><p>Shiro 的认证和授权操作都是交给 Realm 类实现的，我们要自定义一个 Realm 实现获取数据（用户对应的角色、权限，还有密码等）的具体逻辑。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> net.sarasarasa.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> net.sarasarasa.dao.UserRepository;</span><br><span class="line"><span class="keyword">import</span> net.sarasarasa.dataobject.PermissionDO;</span><br><span class="line"><span class="keyword">import</span> net.sarasarasa.dataobject.RoleDO;</span><br><span class="line"><span class="keyword">import</span> net.sarasarasa.dataobject.UserDO;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.SimpleAuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.credential.CredentialsMatcher;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.credential.HashedCredentialsMatcher;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.AuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.SimpleAuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.AuthorizingRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.PrincipalCollection;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.ByteSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> AyagiKei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@url</span> https://github.com/Ayagikei</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyShiroRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserRepository userRepository;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 负责授权，获取用户所拥有的所有权限</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principalCollection)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;权限配置：MyShiroRealm.doGetAuthorizationInfo&quot;</span>);</span><br><span class="line">        SimpleAuthorizationInfo authorizationInfo = <span class="keyword">new</span> SimpleAuthorizationInfo();</span><br><span class="line">        UserDO user = (UserDO) principalCollection.getPrimaryPrincipal();</span><br><span class="line">        log.info(<span class="string">&quot;为用户 &quot;</span> + user.getUsername() + <span class="string">&quot; 进行权限配置&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (RoleDO role : user.getRoleList()) &#123;</span><br><span class="line">            authorizationInfo.addRole(role.getRole());</span><br><span class="line">            <span class="keyword">for</span> (PermissionDO permission : role.getPermissionList()) &#123;</span><br><span class="line">                authorizationInfo.addStringPermission(permission.getPermission());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> authorizationInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 负责身份认证，即登陆的时候验证密码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken authenticationToken)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;开始身份认证&quot;</span>);</span><br><span class="line">        String username = (String) authenticationToken.getPrincipal();</span><br><span class="line">        log.info(<span class="string">&quot;输入得到的用户名：&quot;</span> + username);</span><br><span class="line">        UserDO user = userRepository.findByUsername(username);</span><br><span class="line">        <span class="comment">// 从数据库中查找 UserDO</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (user == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;用户信息：\n&quot;</span> + user.toString());</span><br><span class="line">        SimpleAuthenticationInfo authenticationInfo = <span class="keyword">new</span> SimpleAuthenticationInfo(</span><br><span class="line">                user,</span><br><span class="line">                user.getPassword(),</span><br><span class="line">                <span class="comment">// ByteSource.Util.bytes(user.getSalt()),  // 对密码进行加盐验证</span></span><br><span class="line">                getName()</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">return</span> authenticationInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>没有进行加盐验证的Shiro配置就这样写好了，可以先进行简单测试。</p>
<p><br /></p>
<h2 id="Controller-测试"><a href="#Controller-测试" class="headerlink" title="Controller + 测试"></a>Controller + 测试</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> net.sarasarasa.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> net.sarasarasa.dao.UserRepository;</span><br><span class="line"><span class="keyword">import</span> net.sarasarasa.dataobject.UserDO;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.DisabledAccountException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.IncorrectCredentialsException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UnknownAccountException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserRepository userRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function">Map&lt;String, Object&gt; <span class="title">login</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(value = &quot;username&quot;)</span> String username,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="meta">@RequestParam(value = &quot;password&quot;)</span> String password)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;用户登陆，使用username=&quot;</span> + username + <span class="string">&quot; password=&quot;</span> + password);</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        Subject user = SecurityUtils.getSubject();</span><br><span class="line">        UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(username, password);</span><br><span class="line">        map.put(<span class="string">&quot;success&quot;</span>, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            user.login(token);</span><br><span class="line">            map.put(<span class="string">&quot;success&quot;</span>, <span class="keyword">true</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownAccountException | IncorrectCredentialsException e) &#123;</span><br><span class="line">            map.put(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;账号不存在或密码错误！&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (DisabledAccountException e) &#123;</span><br><span class="line">            map.put(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;账号未启用！&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">            map.put(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;未知错误！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里就不放页面了，可以用Postman之类的简单测试下。</p>
<p>接下来讲讲开始加盐验证。</p>
<p><br /></p>
<h1 id="加盐验证"><a href="#加盐验证" class="headerlink" title="加盐验证"></a>加盐验证</h1><p>首先先让我们的admin账号的密码加个密，Controller中加入：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 临时使用对admin用户的密码进行加盐操作的方法</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/en&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">encrypt</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    UserDO user = userRepository.findByUsername(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">    <span class="comment">// 这里用的盐选择是时间+固定字符串然后MD5的结果</span></span><br><span class="line">    user.setSalt((<span class="keyword">new</span> SimpleHash(<span class="string">&quot;MD5&quot;</span>, userDO.getPassword(), ByteSource.Util.bytes(<span class="keyword">new</span> Date().toString() + <span class="string">&quot;Sara&quot;</span>), <span class="number">1024</span>)).toString());</span><br><span class="line">    user.setPassword((<span class="keyword">new</span> SimpleHash(<span class="string">&quot;MD5&quot;</span>, userDO.getPassword(), ByteSource.Util.bytes(userDO.getSalt()), <span class="number">1024</span>)).toString());</span><br><span class="line">    userRepository.save(user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后访问一下“/en”。</p>
<p><br /></p>
<h2 id="注入加密方式"><a href="#注入加密方式" class="headerlink" title="注入加密方式"></a>注入加密方式</h2><h3 id="方法1：重写-MyShiroRealm（自定义-Realm-类）的-setCredentialsMatcher-方法："><a href="#方法1：重写-MyShiroRealm（自定义-Realm-类）的-setCredentialsMatcher-方法：" class="headerlink" title="方法1：重写 MyShiroRealm（自定义 Realm 类）的 setCredentialsMatcher 方法："></a>方法1：重写 <code>MyShiroRealm</code>（自定义 Realm 类）的 <code>setCredentialsMatcher</code> 方法：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用加盐验证</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCredentialsMatcher</span><span class="params">(CredentialsMatcher credentialsMatcher)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 重写 setCredentialsMatcher 方法为自定义的 Realm 设置 hash 验证方法</span></span><br><span class="line">    HashedCredentialsMatcher hashedCredentialsMatcher = <span class="keyword">new</span> HashedCredentialsMatcher();</span><br><span class="line">    hashedCredentialsMatcher.setHashAlgorithmName(<span class="string">&quot;MD5&quot;</span>);</span><br><span class="line">    hashedCredentialsMatcher.setHashIterations(<span class="number">1024</span>);</span><br><span class="line">    <span class="keyword">super</span>.setCredentialsMatcher(hashedCredentialsMatcher);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="方法2：在-ShiroConfiguration-中注入："><a href="#方法2：在-ShiroConfiguration-中注入：" class="headerlink" title="方法2：在 ShiroConfiguration 中注入："></a>方法2：在 <code>ShiroConfiguration</code> 中注入：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShiroConfiguration</span> </span>&#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Bean</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> HashedCredentialsMatcher <span class="title">hashedCredentialsMatcher</span><span class="params">()</span></span>&#123;</span><br><span class="line">    HashedCredentialsMatcher hashedCredentialsMatcher = <span class="keyword">new</span> HashedCredentialsMatcher();</span><br><span class="line">    hashedCredentialsMatcher.setHashAlgorithmName(<span class="string">&quot;md5&quot;</span>);</span><br><span class="line">    hashedCredentialsMatcher.setHashIterations(<span class="number">1024</span>);</span><br><span class="line">    <span class="keyword">return</span> hashedCredentialsMatcher;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Bean</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> MyShiroRealm <span class="title">myShiroRealm</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    MyShiroRealm myShiroRealm = <span class="keyword">new</span> MyShiroRealm();</span><br><span class="line">    myShiroRealm.setCredentialsMatcher(hashedCredentialsMatcher());</span><br><span class="line">    <span class="keyword">return</span> myShiroRealm;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><br /></p>
<h2 id="在MyShiroRealm的doGetAuthenticationInfo方法中传入盐"><a href="#在MyShiroRealm的doGetAuthenticationInfo方法中传入盐" class="headerlink" title="在MyShiroRealm的doGetAuthenticationInfo方法中传入盐"></a>在MyShiroRealm的doGetAuthenticationInfo方法中传入盐</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken authenticationToken)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">    log.info(<span class="string">&quot;开始身份认证&quot;</span>);</span><br><span class="line">    String username = (String) authenticationToken.getPrincipal();</span><br><span class="line">    log.info(<span class="string">&quot;输入得到的用户名：&quot;</span> + username);</span><br><span class="line">    UserDO user = userRepository.findByUsername(username);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (user == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    log.info(<span class="string">&quot;用户信息：\n&quot;</span> + user.toString());</span><br><span class="line">    SimpleAuthenticationInfo authenticationInfo = <span class="keyword">new</span> SimpleAuthenticationInfo(</span><br><span class="line">            user,</span><br><span class="line">            user.getPassword(),</span><br><span class="line">            ByteSource.Util.bytes(user.getSalt()),  <span class="comment">// 其实就是加上这句</span></span><br><span class="line">            getName()</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">return</span> authenticationInfo;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>至此应该就实现了Shiro的完整配置了。</p>
<p><br /></p>
<h1 id="遇到过的一些问题"><a href="#遇到过的一些问题" class="headerlink" title="遇到过的一些问题"></a>遇到过的一些问题</h1><h2 id="LazyInitializationException"><a href="#LazyInitializationException" class="headerlink" title="LazyInitializationException"></a>LazyInitializationException</h2><p>JPA + shiro好像可能会遇到这个懒加载的问题，这个异常出现在已经认证的用户访问一些需要特定权限的页面</p>
<p>。</p>
<p>我采用的解决方案是在application.yml中加入一句：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">spring.jpa.properties.hibernate.enable_lazy_load_no_trans = true</span><br></pre></td></tr></table></figure>
<p>这个可能有些弊端，，可以参考下另外的解决方案：<a href="https://blog.csdn.net/zcs20082015/article/details/80751626">https://blog.csdn.net/zcs20082015/article/details/80751626</a></p>
<p><br /></p>
<h2 id="RequiresPermissions不生效，并且不会跳转到指定的未验证页面"><a href="#RequiresPermissions不生效，并且不会跳转到指定的未验证页面" class="headerlink" title="@RequiresPermissions不生效，并且不会跳转到指定的未验证页面"></a>@RequiresPermissions不生效，并且不会跳转到指定的未验证页面</h2><p>其实上面的代码已经解决了不生效的问题，原本参考的文章里没有注入这个方法，加入之后就没问题了。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DefaultAdvisorAutoProxyCreator <span class="title">getDefaultAdvisorAutoProxyCreator</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    DefaultAdvisorAutoProxyCreator defaultAdvisorAutoProxyCreator = <span class="keyword">new</span> DefaultAdvisorAutoProxyCreator();</span><br><span class="line">    defaultAdvisorAutoProxyCreator.setUsePrefix(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> defaultAdvisorAutoProxyCreator;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注解的使用方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequiresPermissions(value = &quot;manage add update&quot;)</span></span><br></pre></td></tr></table></figure>
<p>然后注解拦截的确实不会跳转到我们在Shiro配置里指定的页面，而是会抛出一个异常UnauthorizedException，我们可以在全局异常处理中接收这个异常然后重定向：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> net.sarasarasa.exception.handler</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.UnauthorizedException</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.ControllerAdvice</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.ExceptionHandler</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.ResponseBody</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> AyagiKei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@url</span> https://github.com/Ayagikei</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GlobalExceptionHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> log = LoggerFactory.getLogger(<span class="keyword">this</span>.javaClass)</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 拦截未授权异常，重定向到&quot;未授权&quot;页面</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(value = UnauthorizedException::class)</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">handleUserAuthorizeException</span><span class="params">()</span></span>: String &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:/unauthorized&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(value = Exception::class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">handleGlobalException</span><span class="params">(e: <span class="type">Exception</span>)</span></span>: ModelAndView &#123;</span><br><span class="line">        e.printStackTrace()</span><br><span class="line">        log.error(<span class="string">&quot;系统异常：&quot;</span>, e.toString())</span><br><span class="line">        <span class="keyword">val</span> view = ModelAndView()</span><br><span class="line">        <span class="keyword">return</span> view</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><br /></p>
<h2 id="尝试混用-Kotlin-启动报错"><a href="#尝试混用-Kotlin-启动报错" class="headerlink" title="尝试混用 Kotlin 启动报错"></a>尝试混用 Kotlin 启动报错</h2><p>上面的全局异常用的就是Kotlin，发现少了一个maven依赖：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- kotlin --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jetbrains.kotlin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>kotlin-stdlib-jdk8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;kotlin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jetbrains.kotlin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>kotlin-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;kotlin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 就是少了这个reflect的依赖，启动的时候会失败 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jetbrains.kotlin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>kotlin-reflect<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.41<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
        <category>后端</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Java</tag>
        <tag>框架</tag>
        <tag>后端</tag>
        <tag>SpringBoot2</tag>
      </tags>
  </entry>
  <entry>
    <title>人升开发日志#15 | 04/02 用Fragment改造设置页面</title>
    <url>/post/6f83efb3.html</url>
    <content><![CDATA[<p>之前使用Fragment都是配合ViewPager或者配合TabLayout+ViewPager，基本没用过FragmentManager。</p>
<p>实际使用之后才发现，Fragment能实现到和Activity在使用上分辨不出的效果。</p>
<h1 id="布局文件"><a href="#布局文件" class="headerlink" title="布局文件"></a>布局文件</h1><p>其实我们要实现的效果很简单，一个主Fragment显示各个设置的大类（比如显示设置、小部件设置等），点击之后切换到不同的Fragment显示，然后那些Fragment只能回退到主Fragment，主Fragment再回退就是结束Activity。</p>
<p>大概这样：</p>
 <img src="/post/6f83efb3/01.jpg" class="">
<p>Fragment的布局文件正常就好。</p>
<p>Activity要怎么样呢？<strong>我们的Activity本身是不需要任何内容的，只需要充当一个容器的作用就行：</strong></p>
<p><code>activity_setting.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/fragment_container&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@color/background_color&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:fitsSystemWindows</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.activities.SettingActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p><br /></p>
<h1 id="填充Fragment"><a href="#填充Fragment" class="headerlink" title="填充Fragment"></a>填充Fragment</h1><p><strong>在Activity对Fragment进行操作是要，通过FragmentManager获得FragmentTransaction进行add/remove/replace等处理的。</strong></p>
<p>具体如何对上述布局里的<code>fragment_container</code>填充Fragment呢？</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">    setContentView(R.layout.activity_setting)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这是为了防止重复添加</span></span><br><span class="line">    <span class="keyword">if</span> (supportFragmentManager.findFragmentById(R.id.fragment_container) == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">val</span> transaction = supportFragmentManager.beginTransaction()</span><br><span class="line">        transaction.add(R.id.fragment_container, SettingMainFragment())</span><br><span class="line">        <span class="comment">// 在对transaction进行各种操作之后，要用commit()方法提交修改</span></span><br><span class="line">                .commit()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>那么如何替换Fragment呢？</p>
<p><strong>使用FragmentTransaction，只不过调用的方法是replace()</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">mainToSettingChildrenFragment</span><span class="params">(childrenFragment: <span class="type">Fragment</span>)</span></span> &#123;</span><br><span class="line">    supportFragmentManager.beginTransaction()</span><br><span class="line">            <span class="comment">// 在我们这个例子中，只有Main Fragment会调用这个方法</span></span><br><span class="line">            .replace(R.id.fragment_container, childrenFragment)</span><br><span class="line">            <span class="comment">// 这里可以将当前的Fragment压入回退栈，等会返回使用</span></span><br><span class="line">            .addToBackStack(<span class="string">&quot;main&quot;</span>)</span><br><span class="line">            .commit()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在其他Fragment返回Main Fragment的方法：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">popBackStack</span><span class="params">()</span></span> &#123;</span><br><span class="line">    supportFragmentManager.popBackStack()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><br /></p>
<h1 id="接口回调实现Activity和Fragment通信"><a href="#接口回调实现Activity和Fragment通信" class="headerlink" title="接口回调实现Activity和Fragment通信"></a>接口回调实现Activity和Fragment通信</h1><p>这些方法是写在Activity中的，Fragment要怎么调用Activity的方法呢？</p>
<p>这里可以使用到接口回调的方法。</p>
<p>定义一个BaseSettingFragment，并且在其中定义接口：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseSettingFragment</span> : <span class="type">Fragment</span></span>() &#123;</span><br><span class="line">    <span class="class"><span class="keyword">interface</span> <span class="title">SettingActivityListener</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">mainToSettingChildrenFragment</span><span class="params">(childrenFragment: <span class="type">Fragment</span>)</span></span></span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">popBackStack</span><span class="params">()</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">abstract</span> <span class="function"><span class="keyword">fun</span> <span class="title">initView</span><span class="params">(rootView:<span class="type">View</span>)</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Activity要实现这个两个接口，然后在Fragment之中：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">val</span> settingActivityListener: SettingActivityListener? <span class="keyword">by</span> lazy &#123;</span><br><span class="line">    <span class="keyword">if</span> (activity != <span class="literal">null</span> &amp;&amp; activity <span class="keyword">is</span> SettingActivityListener)</span><br><span class="line">        activity <span class="keyword">as</span> SettingActivityListener</span><br><span class="line">    <span class="keyword">else</span> <span class="literal">null</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 然后你就能调用Activity之中这两个方法了：</span></span><br><span class="line">...</span><br><span class="line">settingActivityListener?.popBackStack()</span><br><span class="line">settingActivityListener?.mainToSettingChildrenFragment(SettingDisplayFragment())</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p><br /></p>
<h1 id="让Fragment伪装成Activity"><a href="#让Fragment伪装成Activity" class="headerlink" title="让Fragment伪装成Activity"></a>让Fragment伪装成Activity</h1><h2 id="Toolbar和回退按钮"><a href="#Toolbar和回退按钮" class="headerlink" title="Toolbar和回退按钮"></a>Toolbar和回退按钮</h2><p>因为我们的例子中Activity的布局文件是没有加上Toolbar的，所以我们要在Fragment之中实现Toolbar。</p>
<p><strong>我们这里是把Toolbar当做独立控件使用，即Standalone Toolbar。</strong></p>
<p>有个问题就是，这样子我们在Fragment是调用不了<strong>setDisplayHomeAsUpEnabled()</strong>方法显示出回退键的，那么该怎么办呢？</p>
<p>查了一下<a href="https://stackoverflow.com/questions/26732952/how-to-enable-homeasup-or-call-setdisplayhomeasupenabled-on-standalone-toolbar">Stackoverflow</a>，发现加上一个神奇的参数就可以了：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">app:navigationIcon=&quot;?homeAsUpIndicator&quot;</span><br></pre></td></tr></table></figure>
<p>Toolbar相关的布局内容：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;com.google.android.material.appbar.AppBarLayout</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">    android:theme=&quot;@style/AppTheme.AppBarOverlay&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;androidx.appcompat.widget.Toolbar</span><br><span class="line">        android:id=&quot;@+id/setting_toolbar&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;?attr/actionBarSize&quot;</span><br><span class="line">        android:background=&quot;?attr/colorPrimary&quot;</span><br><span class="line">        app:navigationIcon=&quot;?homeAsUpIndicator&quot;</span><br><span class="line">        app:popupTheme=&quot;@style/AppTheme.PopupOverlay&quot; /&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">com.google.android.material.appbar.AppBarLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>然后你就可以设置Title和按键监听：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">toolbar.setNavigationOnClickListener &#123; settingActivityListener?.popBackStack() &#125;</span><br><span class="line">toolbar.title = &quot;桌面小部件设置&quot;</span><br></pre></td></tr></table></figure>
<p>这样的效果就和普通的Activity无异了。</p>
<p>当然，除了一点：</p>
<p><br /></p>
<h2 id="切换动画"><a href="#切换动画" class="headerlink" title="切换动画"></a>切换动画</h2><p>实际运行会发现Fragment的切换是默认不带动画的。</p>
<p>其中Fragment是有默认的切换动画的，只是没有开启。</p>
<p><strong>调用FragmentTransaction的setTransition(int)方法就可以设置相应的动画效果。</strong></p>
<p>参数可以传入TRANSIT_FRAGMENT_FADE、TRANSIT_FRAGMENT_OPEN、TRANSIT_FRAGMENT_CLOSE等，具体可以参考<a href="https://developer.android.com/reference/android/app/FragmentTransaction">https://developer.android.com/reference/android/app/FragmentTransaction</a></p>
<p>自带的这几个效果并没有Activity默认的SLIDE_IN等，这时候就要用到自定义动画了。</p>
<p>调用FragmentTransaction的setCustomAnimations方法即可。</p>
<p>该方法有两种使用方法，一种是只传入ENTER和EXIT动画，另外一种是再这两种的基础上再加上入栈出栈的动画。</p>
 <img src="/post/6f83efb3/02.jpg" class="">
 <img src="/post/6f83efb3/03.jpg" class="">
<p><strong>因为我们的例子中，回退是用出栈实现的，自然要实现第二种。</strong></p>
<p><strong>首先新建动画文件：</strong></p>
<p><strong>slide_left_in.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    &lt;translate</span><br><span class="line">        android:duration=&quot;300&quot;</span><br><span class="line">        android:fromXDelta=&quot;-100.0%p&quot;</span><br><span class="line">        android:toXDelta=&quot;0.0&quot; /&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>slide_left_out.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    &lt;translate</span><br><span class="line">        android:duration=&quot;300&quot;</span><br><span class="line">        android:fromXDelta=&quot;0.0&quot;</span><br><span class="line">        android:toXDelta=&quot;-100.0%p&quot; /&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>slide_right_in.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    &lt;translate</span><br><span class="line">        android:duration=&quot;300&quot;</span><br><span class="line">        android:fromXDelta=&quot;100.0%p&quot;</span><br><span class="line">        android:toXDelta=&quot;0.0&quot; /&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>slide_right_out.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    &lt;translate</span><br><span class="line">        android:duration=&quot;300&quot;</span><br><span class="line">        android:fromXDelta=&quot;0.0&quot;</span><br><span class="line">        android:toXDelta=&quot;100.0%p&quot; /&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>更改我们的mainToSettingChildrenFragment(childrenFragment: Fragment)方法的实现：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">mainToSettingChildrenFragment</span><span class="params">(childrenFragment: <span class="type">Fragment</span>)</span></span> &#123;</span><br><span class="line">    supportFragmentManager.beginTransaction()</span><br><span class="line">            <span class="comment">// 其实就是加上了这一句</span></span><br><span class="line">            .setCustomAnimations(R.anim.slide_right_in, R.anim.slide_left_out, R.anim.slide_left_in, R.anim.slide_right_out)</span><br><span class="line">            .replace(R.id.fragment_container, childrenFragment)</span><br><span class="line">            .addToBackStack(<span class="string">&quot;main&quot;</span>)</span><br><span class="line">            .commit()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>还有一点要注意，setCustomAnimations方法要在add/remove/replace/addToBackStack等方法前调用，要不然动画效果不会生效。</p>
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>人升开发日志#14 | 03/21 几个小问题的解决</title>
    <url>/post/b122a7c6.html</url>
    <content><![CDATA[<h1 id="ViewPager-Fragments-导致的选项菜单错乱解决"><a href="#ViewPager-Fragments-导致的选项菜单错乱解决" class="headerlink" title="ViewPager + Fragments 导致的选项菜单错乱解决"></a>ViewPager + Fragments 导致的选项菜单错乱解决</h1><h2 id="原先的Toolbar实现"><a href="#原先的Toolbar实现" class="headerlink" title="原先的Toolbar实现"></a>原先的Toolbar实现</h2><p>在Fragment中获取Toolbar这个View，然后调用Activity的<code>setSupportActionBar(toolbar)</code>方法。</p>
<p>然后实现Option菜单的方法：在Fragment中设置<code>setHasOptionsMenu(true)</code>，然后重写<code>fun onCreateOptionsMenu(menu: Menu, inflater: MenuInflater)</code>方法。</p>
<p><strong>出现的问题：</strong>似乎是因为ViewPager的缓存机制，导致切换Fragments切换的时候可能出现菜单错乱的情况。</p>
<h2 id="解决：把Toolbar当做控件使用"><a href="#解决：把Toolbar当做控件使用" class="headerlink" title="解决：把Toolbar当做控件使用"></a>解决：把Toolbar当做控件使用</h2><p><strong>MainActivity.kt</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">initToolBar</span><span class="params">(toolbar: <span class="type">Toolbar</span>)</span></span> &#123;</span><br><span class="line">    <span class="comment">//setSupportActionBar(toolbar) 注释掉这条</span></span><br><span class="line"></span><br><span class="line">    currentToolbar = toolbar</span><br><span class="line">    <span class="keyword">val</span> toggle = ActionBarDrawerToggle(</span><br><span class="line">            <span class="keyword">this</span>, drawer_layout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close)</span><br><span class="line">    drawer_layout.addDrawerListener(toggle)</span><br><span class="line">    nav_view.setNavigationItemSelectedListener(<span class="keyword">this</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getCurrentToolbar</span><span class="params">()</span></span>: Toolbar? &#123;</span><br><span class="line">    <span class="keyword">return</span> currentToolbar</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>Fragment.kt</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">initToolbar</span><span class="params">(view: <span class="type">View</span>)</span></span> &#123;</span><br><span class="line">    <span class="comment">//设置toolbar</span></span><br><span class="line">    mToolbar = view.findViewById(R.id.toolbar)</span><br><span class="line">    (activity <span class="keyword">as</span> MainActivity).initToolBar(mToolbar)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 填充菜单</span></span><br><span class="line">    mToolbar?.inflateMenu(R.menu.main)</span><br><span class="line">    mToolbar?.setOnMenuItemClickListener &#123; item -&gt;</span><br><span class="line">        <span class="keyword">when</span> (item.itemId) &#123;</span><br><span class="line">            R.id.action_sort -&gt; &#123;</span><br><span class="line">                <span class="comment">// do something</span></span><br><span class="line">                <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> -&gt; <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p><br /></p>
<h1 id="菜单同时显示图标和文字"><a href="#菜单同时显示图标和文字" class="headerlink" title="菜单同时显示图标和文字"></a>菜单同时显示图标和文字</h1><p><strong>没有直接实现的方法，这里可以利用反射：</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (mToolbar != <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">val</span> mMenu = mToolbar!!.menu</span><br><span class="line">    <span class="keyword">if</span> (mMenu.javaClass.simpleName.contentEquals(<span class="string">&quot;MenuBuilder&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">val</span> method = mMenu.javaClass.getDeclaredMethod(<span class="string">&quot;setOptionalIconsVisible&quot;</span>, java.lang.<span class="built_in">Boolean</span>.TYPE)</span><br><span class="line">            method.isAccessible = <span class="literal">true</span></span><br><span class="line">            method.invoke(mMenu, <span class="literal">true</span>)</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e: Exception) &#123;</span><br><span class="line">            e.printStackTrace()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><br /></p>
<h1 id="用代码动态调整MaxWidth"><a href="#用代码动态调整MaxWidth" class="headerlink" title="用代码动态调整MaxWidth"></a>用代码动态调整MaxWidth</h1><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> tw = helper.getView(R.id.tv_nickname) <span class="keyword">as</span> TextView</span><br><span class="line"><span class="keyword">val</span> cw = helper.getView(R.id.cl_history) <span class="keyword">as</span> ConstraintLayout</span><br><span class="line"><span class="keyword">val</span> twDate = helper.getView(R.id.tv_btn) <span class="keyword">as</span> TextView</span><br><span class="line">cw.post &#123;</span><br><span class="line">    <span class="keyword">val</span> newMaxWidth = cw.width - DensityUtil.dp2px(<span class="number">72f</span>) - twDate.width</span><br><span class="line">    <span class="keyword">if</span> (newMaxWidth &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        tw.maxWidth = newMaxWidth</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><br /></p>
<h1 id="Android-P-发送不了网络请求"><a href="#Android-P-发送不了网络请求" class="headerlink" title="Android P 发送不了网络请求"></a>Android P 发送不了网络请求</h1><p>这是因为Android P默认禁用了HTTP请求，只支持HTTPS。</p>
<p><strong>1. 在<code>AndroidManifest.xml</code>的Application标签加上：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:networkSecurityConfig=&quot;@xml/network_security_config&quot;</span><br></pre></td></tr></table></figure>
<p><strong>2. 然后在res/xml文件夹里新建network_security_config.xml文件：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">network-security-config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base-config</span> <span class="attr">cleartextTrafficPermitted</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">network-security-config</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><br /></p>
<h1 id="全面屏简单适配"><a href="#全面屏简单适配" class="headerlink" title="全面屏简单适配"></a>全面屏简单适配</h1><p>在`AndroidManifest.xml的Application标签里声明一下支持的<strong>屏幕高宽比</strong>：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">&quot;android.max_aspect&quot;</span> <span class="attr">android:value</span>=<span class="string">&quot;2.4&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>人升开发日志#13 | 03/21 迁移至AndroidX</title>
    <url>/post/d848a650.html</url>
    <content><![CDATA[<p>AndroidX是 Google 发布的对原来的支持库整理后的新一代支持库。并且原来的支持库的最后版本将停留在“28.0.0”，迁移是迟早的事情。</p>
<p>主要动机还是想要用一个框架，结果它只支持AndroidX，就这样决定开始迁移了。</p>
<h1 id="利用Android-Studio迁移"><a href="#利用Android-Studio迁移" class="headerlink" title="利用Android Studio迁移"></a>利用Android Studio迁移</h1><p><strong>需求：</strong>Android Studio版本3.2以上</p>
<p><strong>操作：</strong>Refactor -&gt; Migrate to Androidx</p>
<p>IDE会询问是否要备份一份当前的项目，并且会告知可能需要你手动解决一些项目Error。</p>
<p>继续操作，IDE会搜索所有的要改变的依赖路径，然后点击<code>DO REFACTOR</code>按钮吧。</p>
<a id="more"></a>
<p><br /></p>
<h1 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h1><h2 id="马上Gradle-Build就出现了第一个问题"><a href="#马上Gradle-Build就出现了第一个问题" class="headerlink" title="马上Gradle Build就出现了第一个问题"></a>马上Gradle Build就出现了第一个问题</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Android resource compilation failed</span><br><span class="line"> error: duplicate value for resource &#39;attr&#x2F;visibility&#39; with config &#39;&#39;. and error: resource previously defined here.</span><br></pre></td></tr></table></figure>
<p>检索可知，这是依赖库的一个Bug。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">androidx.constraintlayout:constraintlayout:2.0.0-alpha3  </span><br></pre></td></tr></table></figure>
<p><strong>解决方法：</strong>暂时将alpha3降级到alpha2，等待下一个版本解决。</p>
<p><strong>参考链接：</strong><a href="https://stackoverflow.com/questions/53908854/android-resource-compilation-failed-error-duplicate-value-for-resource-attr-vi">https://stackoverflow.com/questions/53908854/android-resource-compilation-failed-error-duplicate-value-for-resource-attr-vi</a></p>
<p><br /></p>
<h2 id="Kotlin的View依赖失效"><a href="#Kotlin的View依赖失效" class="headerlink" title="Kotlin的View依赖失效"></a>Kotlin的View依赖失效</h2><p><strong>解决方法：</strong>重新导一下View的依赖就好。</p>
<p><br /></p>
<h2 id="第三方框架的错误"><a href="#第三方框架的错误" class="headerlink" title="第三方框架的错误"></a>第三方框架的错误</h2><p>第三方框架有的可能还依赖于原始的支持库，这时IDE会报错。</p>
<p>这里有2个解决方案：</p>
<h3 id="1-更新框架"><a href="#1-更新框架" class="headerlink" title="1. 更新框架"></a>1. 更新框架</h3><p>一般坚持维护的大型框架都有提供 AndroidX 版本，更新一下即可。</p>
<h3 id="2-修改-gradle-properties"><a href="#2-修改-gradle-properties" class="headerlink" title="2. 修改 gradle.properties"></a>2. 修改 gradle.properties</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android.useAndroidX=true</span><br><span class="line">android.enableJetifier=true</span><br></pre></td></tr></table></figure>
<ul>
<li><code>android.useAndroidX=true</code> 表示当前项目启用 AndroidX</li>
<li><code>android.enableJetifier=true</code>表示启用 Jetifier。而Jetifier会在构建项目的时候，将你的第三方依赖里面的旧支持库依赖自动转换为AndroidX支持库。</li>
</ul>
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>VectorDrawable(xml)转换回SVG</title>
    <url>/post/396831a4.html</url>
    <content><![CDATA[<p>Android 用的矢量图是 VectorDrawable（xml格式）。</p>
<p>如果我们想对已经转换成 VectorDrawable 的矢量图进行修改的话，</p>
<p>最好先转换回 SVG 格式再使用 inkscape 之类的矢量图图形编辑工具进行修改。</p>
<h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><ol>
<li><p><strong>将头部的：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">vector</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br></pre></td></tr></table></figure>
<p><strong>替换成</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span></span></span><br></pre></td></tr></table></figure>
<p>闭标签也做相应修改。</p>
</li>
<li><p><strong>将<code>android:width</code>替换成<code>width</code></strong></p>
</li>
<li><p><strong>将<code>android:height</code>替换成<code>height</code></strong></p>
</li>
<li><p><strong>将<code>android:pathData</code>替换成<code>d</code>。</strong></p>
</li>
<li><p><strong>将<code>android:fillColor</code>替换成<code>fill</code>。</strong></p>
<p>如果没有<code>android:fillcolor</code>的话，要加上<code>fill=&quot;#ffffff&quot;</code></p>
</li>
<li><p><strong>将<code>android:viewportHeight=&quot;24&quot; android:viewportWidth=&quot;24&quot;</code>替换成<code>viewBox=&quot;0 0 24 24&quot;</code>的形式。</strong></p>
</li>
</ol>
<h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><p>Vector Drawable</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">vector</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:width</span>=<span class="string">&quot;24dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:height</span>=<span class="string">&quot;24dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:viewportHeight</span>=<span class="string">&quot;24&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:viewportWidth</span>=<span class="string">&quot;24&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;path</span><br><span class="line">        android:fillColor=&quot;#ffffff&quot;</span><br><span class="line">        android:pathData=&quot;M12,3L2,12h3v8h2.5v-0.8c0-1.5,3-2.2,4.5-2.2s4.5,0.8,4.5,2.2V20H19v-8h3L12,3zM12,15.2c1.2,0-2.2-1-2.2-2.2 s1-2.2,2.2-2.2s2.2,1,2.2,2.2S13.2,15.2,12,15.2z&quot; /&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span> <span class="attr">android:pathData</span>=<span class="string">&quot;M0,0h24v24H0V0z&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">vector</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>SVG</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">width</span>=<span class="string">&quot;24&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">height</span>=<span class="string">&quot;24&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">viewBox</span>=<span class="string">&quot;0 0 24 24&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">fill</span>=<span class="string">&quot;#ffffff&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">d</span>=<span class="string">&quot;M12,3L2,12h3v8h2.5v-0.8c0-1.5,3-2.2,4.5-2.2s4.5,0.8,4.5,2.2V20H19v8h3L12,3zM12,15.2c1.2,0-2.2-1-2.2-2.2 s1-2.2,2.2-2.2s2.2,1,2.2,2.2S13.2,15.2,12,15.2z&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M0,0h24v24H0V0z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;none&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://stackoverflow.com/questions/44948396/convert-vectordrawable-to-svg">https://stackoverflow.com/questions/44948396/convert-vectordrawable-to-svg</a></p>
]]></content>
      <categories>
        <category>技术</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>人升开发日志#12 | 01/17 图表</title>
    <url>/post/3974e9e2.html</url>
    <content><![CDATA[<p>本文讲讲怎么用 <strong>MPAndroidChart</strong> 框架实现折线图、柱形图、饼图，并且进行样式设置，达到和宣传图差不多的效果。</p>
<p>一开始看到 <strong>MPAndroidChart</strong> 的各种图表介绍图感觉很好看，但是直接New一个相应图表，仅仅填充数据的话，样式稍微有些丑。经过一番阅览文档才把样式调整得好看些。所以就写了这篇文章记录下。</p>
<p>APP 里实现的最终效果：</p>
 <img src="/post/3974e9e2/01.jpg" class="">
<h1 id="引入框架"><a href="#引入框架" class="headerlink" title="引入框架"></a>引入框架</h1><p>首先是引入框架：</p>
<p><a href="https://github.com/PhilJay/MPAndroidChart">https://github.com/PhilJay/MPAndroidChart</a></p>
<p><strong>Gradle设置一下：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">repositories &#123;</span><br><span class="line">    maven &#123; url &#x27;https://jitpack.io&#x27; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    implementation &#x27;com.github.PhilJay:MPAndroidChart:v3.1.0-alpha&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="LineChart-折线图"><a href="#LineChart-折线图" class="headerlink" title="LineChart 折线图"></a><strong>LineChart </strong>折线图</h1><h2 id="显示数据"><a href="#显示数据" class="headerlink" title="显示数据"></a>显示数据</h2><p>首先，先让我们的图标正确显示数据吧~</p>
<ol>
<li><strong>XML 布局文件内加入：</strong></li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;com.github.mikephil.charting.charts.LineChart</span><br><span class="line">     android:id=&quot;@+id/line_chart&quot;</span><br><span class="line">     android:layout_width=&quot;match_parent&quot;</span><br><span class="line">     android:layout_height=&quot;match_parent&quot;/&gt;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li><strong>Entry</strong>，Entry 可以理解为一个点，赋值 x 和 y 数值。</li>
</ol>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> lineEntries = ArrayList&lt;Entry&gt;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ((i, e) <span class="keyword">in</span> countList.withIndex()) &#123;</span><br><span class="line">    <span class="keyword">val</span> entry = Entry(i.toFloat(), e.toFloat())</span><br><span class="line">    lineEntries.add(entry)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li><strong>LineDataSet</strong>，可以理解为一条线。</li>
</ol>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> lineDataSet = LineDataSet(lineEntries, <span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>
<ol start="4">
<li><strong>LineData</strong>，可以理解为多条线的集合。</li>
</ol>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> lineData = LineData(lineDataSet)</span><br><span class="line">view.line_chart.<span class="keyword">data</span> = lineData</span><br><span class="line"></span><br><span class="line"><span class="comment">// 填充数据后要重绘图表</span></span><br><span class="line">view.line_chart.invalidate()</span><br></pre></td></tr></table></figure>
<p>然后你会得到：</p>
 <img src="/post/3974e9e2/02.jpg" class="">
<p>嗯，默认样式有点丑。接下来就是修改样式了。</p>
<p><br /></p>
<h2 id="设置样式"><a href="#设置样式" class="headerlink" title="设置样式"></a>设置样式</h2><ol>
<li><strong>设置LineDataSet的样式。</strong></li>
</ol>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">lineDataSet.apply&#123;</span><br><span class="line">    <span class="comment">// 不在坐标点上显示 y 数值</span></span><br><span class="line">    setDrawValues(<span class="literal">false</span>)</span><br><span class="line">    <span class="comment">/* 改为曲线显示模式，一共有四种显示模式：</span></span><br><span class="line"><span class="comment">        LINEAR,STEPPED,CUBIC_BEZIER,HORIZONTAL_BEZIER</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    mode = LineDataSet.Mode.HORIZONTAL_BEZIER</span><br><span class="line">    <span class="comment">// 改变线条颜色</span></span><br><span class="line">    color = resources.getColor(R.color.blue)</span><br><span class="line">    <span class="comment">// 不显示相应坐标点的小圆圈</span></span><br><span class="line">    setDrawCircles(<span class="literal">false</span>)</span><br><span class="line">    setDrawCircleHole(<span class="literal">false</span>)</span><br><span class="line">    <span class="comment">// 设置线的宽度</span></span><br><span class="line">    lineWidth = <span class="number">1.5f</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li><strong>设置 X 轴的样式。</strong></li>
</ol>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> xAxis = view.chart.xAxis</span><br><span class="line"><span class="comment">// 这里的listStringDatePastDays方法的功能是获取近7天的日期字符串数组</span></span><br><span class="line"><span class="keyword">val</span> stringDateList = DateUtil.listStringDatePastDays(<span class="number">7</span>)</span><br><span class="line"></span><br><span class="line">xAxis.apply&#123;</span><br><span class="line">    <span class="comment">// 取消网格线显示</span></span><br><span class="line">    setDrawGridLines(<span class="literal">false</span>)</span><br><span class="line">    <span class="comment">// 位置改到图表下方</span></span><br><span class="line">    position = XAxis.XAxisPosition.BOTTOM</span><br><span class="line">    <span class="comment">// x轴起始改为0</span></span><br><span class="line">    axisMinimum = <span class="number">0f</span></span><br><span class="line">    <span class="comment">// x轴的最小单位设置为1f</span></span><br><span class="line">    granularity = <span class="number">1f</span></span><br><span class="line">    <span class="comment">// 改变x轴的显示内容，</span></span><br><span class="line">    <span class="comment">// 然后设置valueFormatter将x轴的数值对应上日期，然后实际上就会显示日期了。</span></span><br><span class="line">    valueFormatter = IAxisValueFormatter &#123; value, axis -&gt;</span><br><span class="line">        stringDateList[value.toInt()]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li><strong>设置左侧 Y 轴的样式。</strong>（同理 x 轴）</li>
</ol>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> yAxis = view.line_chart_exp.axisLeft</span><br><span class="line">yAxis.granularity = <span class="number">1f</span></span><br><span class="line"><span class="comment">// 如果你的y轴数值是正数的话，建议最小值为0，因为默认的话会略小于0。</span></span><br><span class="line">yAxis.axisMinimum = <span class="number">0f</span></span><br></pre></td></tr></table></figure>
<ol start="4">
<li><strong>图表的样式设置。</strong></li>
</ol>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">view.chart.apply&#123;</span><br><span class="line">    <span class="comment">// 禁用图例</span></span><br><span class="line">    legend.isEnabled = <span class="literal">false</span></span><br><span class="line">    <span class="comment">// 禁用触摸响应</span></span><br><span class="line">    setTouchEnabled(<span class="literal">false</span>)</span><br><span class="line">    <span class="comment">// 禁用右侧的y轴</span></span><br><span class="line">    axisRight.isEnabled = <span class="literal">false</span></span><br><span class="line">    <span class="comment">// 取消右下角的Description Label</span></span><br><span class="line">    description.isEnabled = <span class="literal">false</span></span><br><span class="line">    <span class="comment">// 取消背景的网格绘制</span></span><br><span class="line">    setDrawGridBackground(<span class="literal">false</span>)</span><br><span class="line">    <span class="comment">// 没有数据的时候显示的文本内容</span></span><br><span class="line">    setNoDataText(<span class="string">&quot;暂时没有相应数据&quot;</span>)</span><br><span class="line">    <span class="comment">// 设置动画效果</span></span><br><span class="line">    animateY(<span class="number">1000</span>, Easing.Linear)</span><br><span class="line">    animateX(<span class="number">1000</span>, Easing.Linear)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后就能得到这样的效果：</p>
 <img src="/post/3974e9e2/03.jpg" class="">
<h1 id="BarChart-柱形图"><a href="#BarChart-柱形图" class="headerlink" title="BarChart 柱形图"></a>BarChart 柱形图</h1><p><strong>柱形图与折线图类似，只是：</strong></p>
<blockquote>
<ol>
<li>Entry 变成了 BarEntry</li>
<li>LineDataSet 变成了 BarDataSet</li>
<li>LineData 变成了 BarData</li>
<li>LineChart 变成了 BarChart</li>
</ol>
</blockquote>
<p><strong>样式设置也差不多，就直接贴代码了：</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">initStepBarChart</span><span class="params">(view: <span class="type">View</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> barEntries = ArrayList&lt;BarEntry&gt;()</span><br><span class="line">    <span class="keyword">val</span> stepList = stepService.listFinishTaskCountPastDays(<span class="number">7</span>)</span><br><span class="line">    <span class="keyword">for</span> ((i, e) <span class="keyword">in</span> stepList.withIndex()) &#123;</span><br><span class="line">        <span class="keyword">val</span> entry = BarEntry(i.toFloat(), e.toFloat())</span><br><span class="line">        barEntries.add(entry)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">val</span> barDataSet = BarDataSet(barEntries, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    context?.let &#123; barDataSet.color = (ContextCompat.getColor(it, R.color.color_bar_chart)) &#125;</span><br><span class="line">    barDataSet.setDrawValues(<span class="literal">true</span>)</span><br><span class="line">    <span class="keyword">val</span> barData = BarData(barDataSet)</span><br><span class="line">    <span class="keyword">val</span> xAxisOfBarData = view.bar_chart_step.xAxis</span><br><span class="line">    <span class="keyword">val</span> stringDateList = DateUtil.listStringDatePastDays(<span class="number">7</span>)</span><br><span class="line">    xAxisOfBarData.apply &#123;</span><br><span class="line">        valueFormatter = IAxisValueFormatter &#123; value, axis -&gt;</span><br><span class="line">            stringDateList[value.toInt()]</span><br><span class="line">        &#125;</span><br><span class="line">        position = XAxis.XAxisPosition.BOTTOM</span><br><span class="line">        <span class="comment">//xAxisOfBarData.setDrawAxisLine(false)</span></span><br><span class="line">        setDrawGridLines(<span class="literal">false</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">val</span> yAxisOfBarData = view.bar_chart_step.axisLeft</span><br><span class="line">    yAxisOfBarData.apply &#123;</span><br><span class="line">       axisMinimum = <span class="number">0f</span></span><br><span class="line">       setDrawGridLines(<span class="literal">false</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    view.bar_chart_step.apply &#123;</span><br><span class="line">        legend.isEnabled = <span class="literal">false</span></span><br><span class="line">        <span class="keyword">data</span> = barData</span><br><span class="line">        description.isEnabled = <span class="literal">false</span></span><br><span class="line">        setDrawGridBackground(<span class="literal">false</span>)</span><br><span class="line">        axisRight.isEnabled = <span class="literal">false</span></span><br><span class="line">        animateY(<span class="number">1000</span>, Easing.Linear)</span><br><span class="line">        animateX(<span class="number">1000</span>, Easing.Linear)</span><br><span class="line">        setNoDataText(<span class="string">&quot;暂时没有相应数据&quot;</span>)</span><br><span class="line">        invalidate()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="PieChart-饼图"><a href="#PieChart-饼图" class="headerlink" title="PieChart 饼图"></a>PieChart 饼图</h1><h2 id="填充数据"><a href="#填充数据" class="headerlink" title="填充数据"></a>填充数据</h2><p><strong>依旧类似：</strong></p>
<blockquote>
<ol>
<li>Entry 变成了 PieEntry</li>
<li>LineDataSet 变成了 PieDataSet</li>
<li>LineData 变成了 PieData</li>
<li>LineChart 变成了 PieChart</li>
</ol>
</blockquote>
<p><strong>完整代码：</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> pieEntries = ArrayList&lt;PieEntry&gt;()</span><br><span class="line">pieEntries.add(PieEntry(<span class="number">0.3</span>, <span class="string">&quot;Pie1&quot;</span>))</span><br><span class="line">pieEntries.add(PieEntry(<span class="number">0.5</span>, <span class="string">&quot;Pie2&quot;</span>))</span><br><span class="line">pieEntries.add(PieEntry(<span class="number">0.2</span>, <span class="string">&quot;Pie3&quot;</span>))</span><br><span class="line"><span class="keyword">val</span> pieDataSet = PieDataSet(pieEntries, <span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="keyword">val</span> pieData = PieData(pieDataSet)</span><br><span class="line">view.pie_chart_exp.<span class="keyword">data</span> = pieData</span><br><span class="line">view.pie_chart_exp.invalidate()</span><br></pre></td></tr></table></figure>
<p>稍微注意一点的地方是，PieEntry没有x、y值，只有一个value占比数值。</p>
<p>所有PieEntry的Value总和应该为1，要不然可能显示不正常。</p>
<p><strong>然后你会得到一块效果很丑的饼：</strong></p>
 <img src="/post/3974e9e2/04.jpg" class="">
<p>可以看到所有每一块的颜色都是相同的，图例也只显示了一个，并且所有饼块都紧邻在了一起，右下角的描述也需要去掉，冰块上方的数字应该改成百分比显示。</p>
<h2 id="设置样式-1"><a href="#设置样式-1" class="headerlink" title="设置样式"></a>设置样式</h2><ol>
<li>首先是设置颜色。</li>
</ol>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// pieColors的颜色会与pieEntries一一对应</span></span><br><span class="line"><span class="keyword">val</span> pieColors = ArrayList&lt;<span class="built_in">Int</span>&gt;()</span><br><span class="line">pieColors.add(ContextCompat.getColor(context,R.color.red))</span><br><span class="line">pieColors.add(ContextCompat.getColor(context,R.color.green))</span><br><span class="line">pieColors.add(ContextCompat.getColor(context,R.color.blue))</span><br><span class="line">pieDataSet.colors = pieColors</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>PieDataSet设置饼块间隔、数值字体大小。</li>
</ol>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">pieDataSet.sliceSpace = <span class="number">3.0f</span></span><br><span class="line">pieDataSet.valueTextSize = <span class="number">9.0f</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>PieData设置数值以百分比显示和字体颜色。</li>
</ol>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 设置ValueFormatter让数值变成百分号（%）形式显示，但是数值还是原来的0.x</span></span><br><span class="line">pieData.setValueFormatter(PercentFormatter())</span><br><span class="line">pieData.setValueTextColor(ContextCompat.getColor(it, R.color.white))</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>PieChart的样式设置。</li>
</ol>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">view.pie_chart_exp.apply&#123;</span><br><span class="line">    <span class="comment">// 设置以百分比显示，这里是指将原来的0.x乘100，并不会加上“%”符号</span></span><br><span class="line">    setUsePercentValues(<span class="literal">true</span>)</span><br><span class="line">    <span class="comment">// 设置Label的字体大小（比如上方的Pie1）</span></span><br><span class="line">    setEntryLabelTextSize(<span class="number">10.0f</span>)</span><br><span class="line">    <span class="comment">// 设置中间的文本显示</span></span><br><span class="line">    centerText = <span class="string">&quot;经验分布&quot;</span></span><br><span class="line">    <span class="comment">// 去掉右下角的Description</span></span><br><span class="line">    description.isEnabled = <span class="literal">false</span></span><br><span class="line">    setNoDataText(<span class="string">&quot;暂时没有相应数据&quot;</span>)</span><br><span class="line">    <span class="comment">// 开启动画效果</span></span><br><span class="line">    animateY(<span class="number">1000</span>, Easing.Linear)</span><br><span class="line">    animateX(<span class="number">1000</span>, Easing.Linear)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>至此，饼图已经变得挺好看了：</strong></p>
 <img src="/post/3974e9e2/05.jpg" class="">
<p><strong>当然，你还能进行更多的样式调整，可以参考官方Github Wiki和API文档的介绍。</strong></p>
<p><br /></p>
<h1 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h1><p><a href="https://github.com/PhilJay/MPAndroidChart/wiki">WIKI使用教程</a></p>
<p><a href="https://jitpack.io/com/github/PhilJay/MPAndroidChart/v3.1.0-alpha/javadoc/">详细API文档</a></p>
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>「工行星座卡校园版」从下卡到海外在线支付</title>
    <url>/post/325f3e25.html</url>
    <content><![CDATA[<h1 id="为什么需要一张信用卡"><a href="#为什么需要一张信用卡" class="headerlink" title="为什么需要一张信用卡"></a>为什么需要一张信用卡</h1><p>信用卡对于没有稳定收入的大学生可能显得有些遥远，但对我个人而言感觉很多地方，如果有一张<strong>支持visa的信用卡</strong>可以方便很多：</p>
<ul>
<li>美亚、日亚</li>
<li>Digital Ocean</li>
<li><strong>Google Play以及开发者认证</strong></li>
<li>甚至一些云服务的学生优惠领取都需要信用卡</li>
</ul>
<p>还有很多信用卡独有的优惠活动。</p>
<p>恰好学校用的银行卡是工行的，就在工行里找可以申办的信用卡，就看中了工行的这款星座卡校园版。</p>
 <img src="/post/325f3e25/01.jpg" class="">
<a id="more"></a>
<p><br /></p>
<h1 id="优与缺"><a href="#优与缺" class="headerlink" title="优与缺"></a>优与缺</h1><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ol>
<li><strong>双卡多币种（银联+Visa）</strong></li>
<li>颜值高</li>
<li>校园版，大学生如实填写信息就能下卡</li>
<li>免年费</li>
</ol>
<h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><ol>
<li><strong>0额度</strong>（除非你在白名单高校并且家长签写担保书）</li>
<li>易掉漆</li>
<li>多币种可能占征信多个账户（实际影响可以参考：<a href="https://www.zhihu.com/question/67828005）">https://www.zhihu.com/question/67828005）</a></li>
</ol>
<p><br /></p>
<h1 id="办卡流程"><a href="#办卡流程" class="headerlink" title="办卡流程"></a>办卡流程</h1><h2 id="1-申办新卡"><a href="#1-申办新卡" class="headerlink" title="1. 申办新卡"></a>1. 申办新卡</h2><p>我是在<strong>中国工商银行APP</strong>里申办的新卡，<a href="http://m.icbc.com.cn/icbc/%E4%B8%9A%E5%8A%A1%E6%8C%87%E5%8D%97/%E9%93%B6%E8%A1%8C%E5%8D%A1/%E7%89%A1%E4%B8%B9%E4%B8%BB%E9%A2%98%E4%BF%A1%E7%94%A8%E5%8D%A1/%E5%AE%87%E5%AE%99%E6%98%9F%E5%BA%A7%E4%BF%A1%E7%94%A8%E5%8D%A1%E6%A0%A1%E5%9B%AD%E7%89%88.htm">网页</a>应该可以。</p>
<p><strong>打开APP→信用卡→申请办卡→星座卡→立即申请→填写信息</strong>。</p>
<p>基本上如实填写即可，年薪可填生活费/奖学金等。（填写界面限制要大于0）</p>
<p>单位地址可填学校办公室地址，单位电话可填办公室电话（</p>
<p>住址可填学生宿舍。</p>
<p><br /></p>
<h2 id="2-等待发卡"><a href="#2-等待发卡" class="headerlink" title="2. 等待发卡"></a>2. 等待发卡</h2><p>几个工作日会告诉你审批结果，然后用邮政邮寄到你的住址。</p>
<p>拿到卡片就可以去启用卡片了。</p>
<p><strong>注意是分两个包裹分别邮寄银联卡和VISA卡。</strong></p>
<p>第一次启用工行信用卡的话，好像必须去网点启用。</p>
<p>如果不是第一次，可以尝试在<strong>APP→信用卡→卡片启用</strong>内启用。</p>
 <img src="/post/325f3e25/02.jpg" class="">
<p><strong>图为收到的卡片，两张卡星座居然不一样（</strong></p>
<p><br /></p>
<h2 id="3-网点启用卡片"><a href="#3-网点启用卡片" class="headerlink" title="3. 网点启用卡片"></a>3. 网点启用卡片</h2><p>带着<strong>身份证和两张信用卡</strong>去网点，告诉工作人员你要启用信用卡，就会被带到智能柜员机那里按照提示启用信用卡。<strong>启动之后最好同时开启电子银行（网银）。</strong>也可以领取U盾或者电子密码器。</p>
<p><br /></p>
<p>##4. 电子银行设置</p>
<p>打开APP→我的账户，查看两张卡是不是已经添加到了手机银行里，<strong>并且写着“柜面注册”而不是“自助注册”</strong>。</p>
 <img src="/post/325f3e25/03.jpg" class="">
<p><strong>柜面注册的卡片才在网银里有更高的权限</strong>：比如卡间转账、对外支付等。</p>
<p>如果是”自助注册”的话，先移除卡片，然后去到银行网点，对这张卡重新激活电子银行。（也是在智能柜员机弄就好了）</p>
<p><strong>返回APP首页→信用卡→划到VISA卡片→卡片设置→消费设置。</strong></p>
 <img src="/post/325f3e25/04.jpg" class="">
<p>然后<strong>开通境外实时购汇和外卡组织验证服务</strong>，就可以开启你的海淘之旅了~</p>
 <img src="/post/325f3e25/05.jpg" class="">
<p><br /></p>
<h1 id="海外在线支付步骤"><a href="#海外在线支付步骤" class="headerlink" title="海外在线支付步骤"></a>海外在线支付步骤</h1><h2 id="1-转钱到信用卡"><a href="#1-转钱到信用卡" class="headerlink" title="1. 转钱到信用卡"></a>1. 转钱到信用卡</h2><p>因为是0额度卡，<strong>如果你没有外币余额的话，绑定海外在线支付时候的验证会划扣失败</strong>。</p>
<p>所以，我们要先让这张卡有你要的外币余额。</p>
<p>可以先支付宝绑定银联信用卡，然后<strong>还款</strong>到信用卡。（这里<strong>还款</strong>对于0额度信用卡可以说是相当于<strong>提现</strong>了）。</p>
<p>比如这里还款到银联信用卡70元人民币。（略大于10美元）</p>
<p><br /></p>
<h2 id="2-人民币购汇外币"><a href="#2-人民币购汇外币" class="headerlink" title="2. 人民币购汇外币"></a>2. 人民币购汇外币</h2><p>然后打开工行APP→直接在搜索栏搜索<strong>“结售汇”</strong>。</p>
 <img src="/post/325f3e25/06.jpg" class="">
<p>选择你要的外币币种，选择交易类型为<strong>人民币购汇</strong>。</p>
<p>下一步，<strong>转入账号改成你的VISA卡卡号</strong>，支付账号可以是银联卡卡号。</p>
<p>钞汇标志应该强制为钞，购汇金额填写<strong>10</strong>（美元）。</p>
<p>然后填写购汇用途。</p>
<p>成功后，你的VISA信用卡会收到10美元余额。</p>
<p><br /></p>
<h2 id="3-海外支付网站绑卡消费"><a href="#3-海外支付网站绑卡消费" class="headerlink" title="3. 海外支付网站绑卡消费"></a>3. 海外支付网站绑卡消费</h2><p>一般绑卡需要的必须信息是卡号、有效期限、办卡姓名（大写拼音）、安全码（CVV，持卡人签名那里的3位数字）</p>
<p>同时绑卡会划扣一笔小费用来测试VISA卡信息是不是有效，这笔费用一般都会等会就还给你。<strong>即，如果你绑的是日本网站，那么上一步你就应该购汇日元而不是美元了。</strong></p>
<p><br /></p>
<h1 id="完"><a href="#完" class="headerlink" title="完"></a>完</h1><p>大概就这样了~</p>
<p>暂时还不清楚这张校园卡能不能提额，不过也可以曲线提额（申请另外一张工行信用卡，然后调整额度到该卡）。</p>
]]></content>
      <categories>
        <category>生活</category>
        <category>其他</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>信用卡</tag>
      </tags>
  </entry>
  <entry>
    <title>2018 年终总结</title>
    <url>/post/1f18a9aa.html</url>
    <content><![CDATA[<p>第一次写年终总结，也迟到了好几天。</p>
<p>今年真的经历了很多。</p>
<p>一整年没有写日记，也AFK了一整年的DOTA2（年末又玩回来了）。</p>
<p>也不知道要怎么写，就随便写写吧~</p>
<a id="more"></a>
<p><br /></p>
<h1 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h1><p>今年，我的知乎专栏只发表了<strong>两篇</strong>文章：</p>
<ol>
<li><p><a href="https://zhuanlan.zhihu.com/p/37306835">不下载相应游戏也能完成「Steam涤尘送春活动」任务</a></p>
</li>
<li><p><a href="https://zhuanlan.zhihu.com/p/37332897">查看你 Steam 账号的官方相关数据：总剁手金额、参与特卖数、探索队列历史等</a>。</p>
</li>
</ol>
<p>可以说，几乎等于没写。</p>
<p>倒是17年写的传送门的那篇文章进了知乎的<strong>编辑推荐</strong>：</p>
 <img src="/post/1f18a9aa/01.jpg" class="">
<p><strong>5月份的时候，看到了游研社的二周年征文比赛，动了把一直酝酿的一篇文章写出来的心。</strong></p>
 <img src="/post/1f18a9aa/02.jpg" class="">
 <img src="/post/1f18a9aa/03.jpg" class="">
<p>写文章的时候真的是困难重重，遣词造句更是难（</p>
<p>不停地使用重复的连接词（</p>
<p>可能是因为这种类型的长文写得少吧（</p>
<p><br /></p>
<p>投稿后，着急地各种刷着游研社的微博和公众号，突然有一天在公众号看到<strong>文章入选</strong>，开心得不行。</p>
<p>保底也拿到了300元~</p>
<p><a href="https://mp.weixin.qq.com/s/psuJ7EpAHa5lf7aWCFbuDg">https://mp.weixin.qq.com/s/psuJ7EpAHa5lf7aWCFbuDg</a></p>
<p>最后也止步300元，还是很满足的。</p>
 <img src="/post/1f18a9aa/04.jpg" class="">
<p>还被拉进了一个作者群。</p>
<p>这篇文章后续还没发到专栏和这个博客里，有时间完善一下再发吧~</p>
<p>另外，圣诞节突然收到了知乎的一个消息，被莫名加入了知乎新用户的关注推荐列表。</p>
<p>然后关注人数疯长了近300人。</p>
 <img src="/post/1f18a9aa/09.jpg" class="">
<p><strong>接着就是4月份的时候，看到了 hexo 搭建博客的文章，就搭起了这个博客。</strong></p>
<p>刚搭好博客的时候倒是热情满满，后续都没怎么更新了（特别是年末。</p>
<p>不过也积累了30篇文章的量，还行吧。</p>
<p><br /></p>
<h1 id="大创"><a href="#大创" class="headerlink" title="大创"></a>大创</h1><p>原本今年还有个计划是搞搞大创项目的，题材稍微有点烂：<strong>大学生租赁平台</strong>。</p>
<p>我毫无项目经验地居然想单独一个人负责安卓端（</p>
<p>拉着拉着人发现团队也略显臃肿，进行了投票调查和提案书编写，然后毫无意外地凉了。</p>
<p><br /></p>
<h1 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h1> <img src="/post/1f18a9aa/10.jpg" class="">
<p>今年Github的贡献.jpg</p>
<h2 id="人升LifeUp"><a href="#人升LifeUp" class="headerlink" title="人升LifeUp"></a>人升LifeUp</h2><p>今年最大的成果估计就是<strong>《人升LifeUp》</strong>了。</p>
 <img src="/post/1f18a9aa/05.png" class="">
<p>几年前就尝试找类似的<strong>游戏化TODO应用</strong>，最后找到了一个LifeRPG，但是用起来不是顺手。</p>
<p>后来又看到了<a href="https://www.zhihu.com/question/25365158">一个相关的知乎问题</a>，就产生了自己开发一款这样的应用的念头。</p>
<p>但是想法和实际开发出的东西果然还是有不少差距的（</p>
 <img src="/post/1f18a9aa/06.png" class="">
<p>这是一开始的<strong>思维导图</strong>，已经砍掉了人物角色的展示、职业之类的设定。</p>
<p>然后思维导图里面的<strong>技能</strong>也没实现（</p>
<p>Kotlin的文档都没能看下去，就直接用Kotlin进行了开发^_^，结果还行。</p>
<p>不过，最后实现的效果和取得的成就我还是很满意的，还要持续更新让APP更接近策划时候的样子~</p>
<p>在制作这款APP之前，我也就写了个记录书籍的demo。可以说没什么安卓的开发经验orz。</p>
<p>在这个项目中接触了安卓的网络请求、图片加载、TOKEN处理、Fragment、桌面小部件、适配等开发等诸多知识，可谓受益良多。</p>
<p>参加校内的应用开发比赛也斩获了一个一等奖（1k）和一个二等奖（0.8k）。</p>
<p><strong>上架了酷安平台，短短一个月收到了1k+的关注，9k+的下载量，有点被吓到了（</strong></p>
 <img src="/post/1f18a9aa/07.jpg" class="">
 <img src="/post/1f18a9aa/08.jpg" class="">
<p>一个月内接受了很多建议，也忽略了一些暂时不好实现的建议，更新了十几个版本。</p>
<p>途中有些版本更新重复制造了bug，实属开发经验不足。之后的更新发布需要更谨慎才行。</p>
<h2 id="XX管理系统"><a href="#XX管理系统" class="headerlink" title="XX管理系统"></a>XX管理系统</h2><p>同学收到老师委托接下的一个项目，又分了一部分功能让我实现，拿到了1k。</p>
<p>稍微看了下慕课网上的Spring Boot入门视频就加入了开发（</p>
<p>项目除了某个处理模块外，就是一个很标准的企业用的后台管理系统，可以查询各种类型订单，显示数据。然后还分为了普通用户和管理员，管理员可以直接查数据库表，还有表的Excel导出功能（Easypoi）等。</p>
<p>通过这个项目，<strong>我也快速了解了Spring Boot的实际项目的开发流程，MVC架构的基本知识，还有Ajax、LayUI之类的前端知识，虽然代码写得有些烂（</strong></p>
<p><br /></p>
<h1 id="比赛"><a href="#比赛" class="headerlink" title="比赛"></a>比赛</h1><p>今年参加了校内的三个比赛，其中两个应用开发比赛，拿了人升LifeUp去参赛分别拿了一等和二等。</p>
<p><strong>还有一场抱着去划水的心态去参加的信安CTF比赛，又运气很好地控制了一台其他组的电脑，拿下了三等（0.3k）。</strong></p>
<p><br /></p>
<h1 id="娱乐"><a href="#娱乐" class="headerlink" title="娱乐"></a>娱乐</h1><h2 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h2><p><strong>DOTA2</strong></p>
<p>重拾了弃坑一年的DOTA2。自赛季制度出了之后没打过天梯，这次出了段位：万古1。</p>
<p>然后还一波连胜上了<strong>万古2</strong>。</p>
<p>不过这游戏还是过于竞技化了，无论输赢都可能影响到心情（</p>
<p><strong>Kancolle</strong></p>
<p>终于在年末12月31号晚上11点斩获了入坑以来的首个甲章~</p>
 <img src="/post/1f18a9aa/11.jpg" class="">
<h2 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h2><p>今年好像就看了一本《眠》，还没看懂（</p>
<p>下一年要加强下书籍的阅读量。</p>
<h2 id="番剧"><a href="#番剧" class="headerlink" title="番剧"></a>番剧</h2><p><strong>番</strong></p>
<ul>
<li><p><strong>齐木楠雄的灾难 第二季/完结篇</strong></p>
<p>设定自洽的超能力搞笑番</p>
</li>
<li><p>七大罪 第二季</p>
<p>热血番，但本季感觉发挥一般</p>
</li>
<li><p><strong>紫罗兰永恒花园</strong></p>
<p>感情描写细腻的单元剧，作画无解棒，打斗剧情略差（</p>
</li>
<li><p><strong>龙王的工作</strong></p>
</li>
<li><p>DARLING in the FRANXX</p>
<p>高开低走，血崩剧情</p>
</li>
<li><p>刻刻</p>
</li>
<li><p><strong>比宇宙更远的地方</strong></p>
<p>个人年度最佳番，追寻梦想</p>
</li>
<li><p><strong>进击的巨人 第三季</strong></p>
</li>
<li><p><strong>超能力女儿</strong></p>
</li>
<li><p>命运石之门0</p>
<p>作画不稳定+节奏怪+好剧情</p>
</li>
<li><p><strong>刀剑神域外传GGO</strong></p>
</li>
<li><p>工作细胞</p>
</li>
<li><p>杀戮天使</p>
</li>
<li><p><strong>刀剑神域 第三季</strong></p>
</li>
<li><p><strong>SSSS.GRIDMAN</strong></p>
</li>
<li><p><strong>青春野狼不做兔女郎学姐的梦</strong></p>
</li>
</ul>
<p><strong>剧</strong></p>
<ul>
<li><strong>疑犯追踪</strong></li>
<li><strong>权利的游戏 1-7</strong></li>
<li>毒枭</li>
<li><strong>黑镜 第四季</strong></li>
<li>行尸走肉</li>
<li><strong>西部世界 第二季</strong></li>
</ul>
<p><br /></p>
<h1 id="2019年目标"><a href="#2019年目标" class="headerlink" title="2019年目标"></a>2019年目标</h1><ul>
<li>起码阅读完12本书</li>
<li>继续完善《人升LifeUp》到自己满足的水平</li>
<li>找到一份满意的实习</li>
<li>48篇博文（大概一个星期一篇的程度）</li>
<li>达到对自己满意的程度</li>
</ul>
]]></content>
      <categories>
        <category>个人</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>人升LifeUp 公告与详细介绍</title>
    <url>/post/621e3bb6.html</url>
    <content><![CDATA[<p><a href="http://wiki.lifeupapp.fun/zh-cn/#/">请点击此处访问新站点</a></p>
<h1 id="公告"><a href="#公告" class="headerlink" title="公告"></a>公告</h1><h2 id="已知bug"><a href="#已知bug" class="headerlink" title="已知bug"></a>已知bug</h2><ul>
<li><p><strong>领取成就奖励时，显示的时间不正确。</strong></p>
<p>重新进入页面可以查看正确的时间。下个版本会修复。</p>
</li>
</ul>
<h2 id="更新速度减缓"><a href="#更新速度减缓" class="headerlink" title="更新速度减缓"></a>更新速度减缓</h2><p>因为近期我们两位开发者都需要赶毕业设计/论文进度😅</p>
<p>所以这段时间的更新速度会稍微减缓。</p>
<p>后续的一些更新目前计划是关注于增强“游戏化”方面，还有实现之前采纳的用户建议。</p>
<p>也欢迎大家继续提出各种建议~</p>
<p><br /></p>
<h2 id="图标"><a href="#图标" class="headerlink" title="图标"></a>图标</h2><p>应用图标感觉需要一波更新，但我们这边暂时没什么想法<em>(:з」∠)</em></p>
<p>如果你有意贡献图标/想法的话，欢迎邮件联系~</p>
<p><br /></p>
<h2 id="使用指南（施工中）"><a href="#使用指南（施工中）" class="headerlink" title="使用指南（施工中）"></a>使用指南（施工中）</h2><p><strong><a href="http://sarasarasa.net/post/423cff64.html">事项篇</a></strong></p>
<p>新建事项的各个选项介绍、新建各种类型的事项、清单管理与排序、稍后阅读功能</p>
<p><br /></p>
<h2 id="版本更新"><a href="#版本更新" class="headerlink" title="版本更新"></a>版本更新</h2><p><strong><a href="http://sarasarasa.net/post/c7d8419c.html">v1.70.x更新介绍</a></strong></p>
<p>简洁模式、图片附件、WebDAV配置方法、撤销优化、动态显示优化</p>
<p><strong><a href="http://sarasarasa.net/post/3651a964.html">v1.69.0更新介绍</a></strong></p>
<p>子任务、逾期处理、自定义排序、冻结、编辑团队事项</p>
<p><strong><a href="http://sarasarasa.net/post/43761082.html">v1.68.0更新介绍</a></strong></p>
<p>新成就系统</p>
<p><br /></p>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ol>
<li><a href="#应用简介">应用简介</a><br>1.1 <a href="#情景介绍">情景介绍</a><br>1.2 <a href="#已知问题">已知问题</a><br>1.3 <a href="#更新计划">更新计划</a><br>1.4 <a href="#绿色应用">绿色应用</a><br>1.5 <a href="#盈利方式">盈利方式</a><br>1.6 <a href="#上架市场">上架市场</a><br>1.7 <a href="#关于开源">关于开源</a></li>
<li><a href="#功能介绍">功能介绍</a><br>2.1 <a href="#新成就系统">新成就系统</a><br>2.2 <a href="#稍后阅读">稍后阅读</a><br>2.3 <a href="#商店系统">商店系统</a><br>2.4 <a href="#社区">社区</a></li>
<li><a href="#其他">其他</a><br>3.1 <a href="http://sarasarasa.net/post/a889432c.html">更新日志</a><br>3.2 <a href="http://sarasarasa.net/post/22d5d0d5.html">捐赠名单</a></li>
</ol>
<hr>
<h1 id="应用简介"><a href="#应用简介" class="headerlink" title="应用简介"></a>应用简介</h1><h2 id="情景介绍"><a href="#情景介绍" class="headerlink" title="情景介绍"></a>情景介绍</h2><blockquote>
<p>升级你的人生</p>
</blockquote>
<p>简单一句话介绍这个应用的特色，就是<em>“游戏化的待办事项应用”</em>。</p>
<p><strong>用一个情景详细地介绍游戏化：</strong></p>
<blockquote>
<p>完成了一篇文章，打开应用，在“写一篇文章”的事项前打上勾，标记完成。</p>
<p>此时你获得了一些「学识」和「创造」200经验值，并且「学识」升了一级。</p>
<p>应用还弹出了“成就解锁！法师”的成就解锁提示框。</p>
<p>此外，还<strong>获得了10个金币</strong>。</p>
<p>点击商店，查看为自己设置的奖励商品列表。</p>
<p>斟酌半刻，你购买了耗费8金币的奶茶。然后前往仓库，使用了刚刚购买的奶茶。</p>
<p>于是现实中，可以心满意足地点开外卖应用下单奶茶奖励自己。</p>
</blockquote>
<p>该情景<strong>主要只涵盖了应用的游戏化部分</strong>，除此之外还有社区、统计、日历、桌面小部件等功能，会在后面部分介绍。</p>
<p><br /></p>
<h2 id="更新计划"><a href="#更新计划" class="headerlink" title="更新计划"></a>更新计划</h2><p><strong>2019/10/31：</strong>因为目前在实习+准备毕设，稍微将原本大概7-14天一更的频次调整到<strong>14-21天一更</strong>。</p>
<p><br /></p>
<h2 id="绿色应用"><a href="#绿色应用" class="headerlink" title="绿色应用"></a>绿色应用</h2><p>并且，《人升》<strong>无开屏、无内置广告、暂无内购</strong>。体积也一直<strong>尽量保持在6mb</strong>左右。</p>
<p>并且通过了<a href="https://green-android.org/">Android 绿色应用公约 3.0验证</a>，<strong>无需读取手机状态、甚至无需外部存储空间权限</strong>。</p>
<p>理论上运行<strong>无需任何权限</strong>，只为了一些可选功能申请了一些权限：</p>
<ul>
<li><p><strong>查看网络连接、查看WLAN连接、拥有完全的网络访问权限</strong></p>
<p>为了实现登录、社区等功能。</p>
<p>如果完全把《人升》当作一个离线工具使用，甚至可以关闭这些权限。</p>
</li>
<li><p><strong>运行前台服务</strong></p>
<p>为了实现桌面小部件完成事项的功能。</p>
<p>同理，如果不需要用到桌面小部件，该权限也可以关闭。</p>
</li>
<li><p><strong>日历读写权限</strong></p>
<p>只有将提醒方式改为“系统日历提醒”的时候才会动态申请该权限。</p>
<p>如果不需要“系统日历提醒”功能，该权限也可以关闭。</p>
</li>
<li><p><strong>其他权限</strong></p>
<p>一些其他权限诸如Play Store相关的，其实是第三方SDK申请的。</p>
<p>比如Google授权登录、QQ授权登录。</p>
</li>
</ul>
<p><br /></p>
<h2 id="盈利方式"><a href="#盈利方式" class="headerlink" title="盈利方式"></a>盈利方式</h2><p>暂时，《人升》在国内是<del>用爱发电</del>，<strong>感谢诸位的捐赠让我们走下来。</strong></p>
<p><br /></p>
<p>在Google Play市场，我们面向海外发布了价格为$0.99的买断版本。</p>
<p><strong>捐赠过的用户可以向我们发送邮件获取Google Play的兑换码。</strong></p>
<p><br /></p>
<p>并且有意把这个版本当作以后《人升》实现“终身会员”的雏形，</p>
<p><strong>目前的所有基础功能都不会需要会员</strong>，</p>
<p>部分比较偏的需求，或者是需要消耗服务器资源的需求，可能会选作是”终身会员“的福利。</p>
<blockquote>
<p>有意把”会员“的购买界面做得像购买游戏DLC一样😂</p>
<p>并且计划实现会员前捐赠的所有用户都能获得相应的会员兑换码。</p>
</blockquote>
<p><br /></p>
<p>🧐<strong>小谈一下押金制</strong>，目前也有一部分用户出于好意提议我们未来采用押金制。</p>
<p><strong>但就我个人而言，觉得押金制有些功利（无论是对于开发者还是使用者）。</strong></p>
<p>对于使用者来说，使用实际的金钱惩罚，来逼迫自己冲动地完成或者是坚持某个目标。</p>
<p>有种自我绑架的意味？（胡言乱语）对于自己的提升，是肯定不及兴趣和单纯的自制来得多的。</p>
<p>甚至也有可能起反作用，对自己本来想要做的事情起了厌恶之情。</p>
<p>又或者是，为了避开惩罚，就算没完成也硬是点下<code>完成</code>按钮。</p>
<p>逐渐偏离最初的目标，从坚持完成某个事，到为了不受惩罚而完成某件事。</p>
<p><br /></p>
<p>当然，这一些都因人而异，选择自己合适的方式即可😜。</p>
<p><strong>只是《人升》基于以上原因不可能会采用押金制。</strong></p>
<p><br /></p>
<h2 id="上架市场"><a href="#上架市场" class="headerlink" title="上架市场"></a>上架市场</h2><p>目前，我们官方上架并且维护更新的应用市场有：<strong>酷安、魅族、小米、华为、Google Play、应用宝、阿里应用分发（含：豌豆荚、PP 助手、YunOS 应用商店、UC应用商店等）</strong>。</p>
<p>华为应用市场也拿回了应用管理权，也可以在华为应用市场上更新人升了。</p>
<p>并且在这些应用市场上架的都是相同的包名，完全<strong>可以跨市场升级</strong>~</p>
<h3 id="Google-Play上的Pro版差异"><a href="#Google-Play上的Pro版差异" class="headerlink" title="Google Play上的Pro版差异"></a>Google Play上的Pro版差异</h3><ul>
<li>去掉了“捐赠”入口</li>
<li>去掉了“应用内更新提示”</li>
<li>自定义卡片背景，自定义商品“使用”按钮文本</li>
<li>（计划）更多增值内容，如Google Drive同步</li>
</ul>
<p><br /></p>
<h2 id="关于开源"><a href="#关于开源" class="headerlink" title="关于开源"></a>关于开源</h2><p>之前客户端的代码是在Github上完全开源的，</p>
<p>但是经历了被人恶意篡改、插入广告，上架到一些市场抢占包名的事情之后，</p>
<p>我们已经把客户端的代码闭源了。</p>
<p><br /></p>
<p>以后，<strong>可能会开源部分代码或者应用架构等</strong>。</p>
<a id="more"></a>
<p><br /></p>
<hr>
<h1 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h1><h2 id="商店系统"><a href="#商店系统" class="headerlink" title="商店系统"></a>商店系统</h2><p><strong>上架商品，获得金币，购买奖励</strong></p>
<p>商店系统是对完成事项后奖励自我的一种游戏化体现，<del>并不是什么内购</del>。</p>
<p>所以，在商店上架的商品，就是你打算在自己达到一定目标后给自己的奖励。</p>
<p>价格是你自己衡量是否达到这个目标的标尺。</p>
<p><br /></p>
 <img src="/post/621e3bb6/shop_01.jpg" class="">
<h3 id="金币获取手段"><a href="#金币获取手段" class="headerlink" title="金币获取手段"></a>金币获取手段</h3><p>设置好了商品（奖励），那么就只差金币的获取手段了：</p>
<ol>
<li><p><strong>自建待办事项，设置金币奖励</strong></p>
<p><strong>自设奖励：</strong>如果你对自己的金币体系很看重，那么最好每个事项都单独设置金币奖励。</p>
<p><strong>自动计算：</strong>否则的话，你可以选择<code>自动计算</code>金币奖励。</p>
<p><code>自动计算</code>会根据你设置的<code>重要程度</code>和<code>困难程度</code>计算出该事项的奖励，取值为15-120。</p>
<p>然后你应该根据该取值定义商店商品的价格。</p>
<p>当然，<strong>你可以两种方式一起使用</strong>。</p>
</li>
<li><p><strong>加入团队，完成团队任务获取奖励</strong></p>
<p>如果团队的建造者设置了金币奖励，那么完成该事项的时候，你也能获得相应的金币。</p>
</li>
<li><p><strong>解锁成就</strong></p>
<p>部分成就解锁后，会奖励小额金币。</p>
</li>
</ol>
<p><br /></p>
<h3 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h3><p>默认情况下，购买的商品会放到仓库里。</p>
<p>需要点击<code>使用</code>的时候才消耗掉。</p>
<p>当然，最新版本，你能在购买的时候选择<code>立即使用</code>了。</p>
<p><br /></p>
<h3 id="贷款"><a href="#贷款" class="headerlink" title="贷款"></a>贷款</h3><p>右上角的商店设置里，可以设置贷款金额。</p>
<p>现在的贷款实现，其实是允许金币负值。</p>
<p>比如，你设置了贷款1000。那么就是允许金币最小为-1000。</p>
<p>所以，偿还贷款的方式，就是挣金币~</p>
<p><br /></p>
<h3 id="使用参考"><a href="#使用参考" class="headerlink" title="使用参考"></a>使用参考</h3><p>具体上架什么商品，取决你自己的爱好~</p>
<p><strong>这里提供一些参考：</strong></p>
<p>奶茶 —— 10金币：使用之后，奖励自己一杯奶茶</p>
<p>空气 —— 0金币（免费）：要多少有多少</p>
<p>手机 —— 3000金币：换台新手机</p>
<p><strong>另外，也有一些用户把商品当作惩罚来用😂：</strong></p>
<p>浪费时间惩罚 —— 5金币：如果今天浪费了时间，就购买这项金币惩罚</p>
<hr>
<h2 id="社区"><a href="#社区" class="headerlink" title="社区"></a>社区</h2><p><strong>组织团队、共同进步</strong></p>
<p>《人升》的社区也不是普通的论坛，而是一个组织团队共同完成某个事项，养成习惯的地方。</p>
<p>并且这里主打轻社交，没有聊天，没有通知。</p>
<p>但是你能看到浏览别人完成事项的动态。</p>
<h3 id="团队"><a href="#团队" class="headerlink" title="团队"></a>团队</h3><p>社区的主体就是团队，</p>
<p>你可以浏览加入感兴趣的团队。</p>
<p>如果找不到，那么可以自己建立一个团队。</p>
<blockquote>
<p> 团队的内容是公开的，<strong>所以请不要建立比较私人的事项，或者涉及违法敏感相关的事项，谢谢~</strong>。</p>
<p> 如果有特殊需要，可以建立成本地事项。</p>
</blockquote>
<p><br /></p>
<p>加入或者建立一个团队之后，会自动领取团队事项。</p>
<p><strong>如果你删除错了团队事项，或者退出登录导致团队事项消失。</strong></p>
<p>那么，可以返回团队详情界面，<strong>点击<code>领取</code>按钮</strong>重新领取团队事项。</p>
<p><br /></p>
<p>团队事项暂时不支持编辑、放弃等操作。</p>
<p>后续会开放<strong>部分编辑</strong>功能。</p>
<p><br /></p>
<h3 id="新建团队"><a href="#新建团队" class="headerlink" title="新建团队"></a>新建团队</h3><p>新建团队的界面其实和新建待办事项差不多，只是缺少了一些自定义选项。</p>
<p>值得注意的是，</p>
<p>“<code>首次开始日期</code>+<code>首次开始时间</code>”和“<code>首次结束日期</code>+<code>结束时间</code>”指的是<strong>第一次事项的开始结束时间，并不是团队的结束时间</strong>。</p>
<p>比如，每日事项，这两个时间一般来说是一天的00:00:00到23:59:59即可。</p>
<p>如果是<code>早起</code>之类的事项，设置为<strong>同一天</strong>的06:00:00到08:59:59。</p>
<p>再比如说每周事项，可以设置为周一00:00:00到周日23:59:59。</p>
<p><br /></p>
<p><strong>如果需要终止团队，</strong></p>
<p>如果创建者到团队详情页面右上角选项，选择<code>终止</code>即可。</p>
<p>如果你不是创建者，可以选择<code>退出</code>团队。</p>
<p><br /></p>
<h3 id="时刻"><a href="#时刻" class="headerlink" title="时刻"></a>时刻</h3><p>在完成团队事项的时候，你可选择性地发表动态，并且可以贴上图片。</p>
<blockquote>
<p>为了节省服务器流量，以及防止一些问题，图片会默认进行压缩。</p>
</blockquote>
<p>你能在时刻页面浏览到其他人发表的动态内容，查看别人坚持事项的情况。</p>
<p>同时，你也能关注感兴趣的人。并且筛选关注的人的动态等。</p>
<p>在个人主页（<strong>入口</strong>：<code>我的</code>→<code>我的主页</code>→<code>查看</code>），</p>
<p>你能随时浏览自己发表过的动态，长按也可以进行删除操作。</p>
<p><br /></p>
<h3 id="排行榜"><a href="#排行榜" class="headerlink" title="排行榜"></a>排行榜</h3><p>你可能会诧异为什么排行榜只有你自己一个人。😂</p>
<p>因为并不想让排行榜变成一个攀比的地方，所以设计成了只显示自己与自己关注的人。</p>
<p><br /></p>
<p><strong>所以，去关注一下其他人吧~<del>（说不定还能解锁成就）</del></strong></p>
<p>排行榜目前功能较薄弱，以后可能会改进。</p>
<p><br /></p>
<hr>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a><a href="http://sarasarasa.net/post/a889432c.html">更新日志</a></h2><h2 id="捐赠名单"><a href="#捐赠名单" class="headerlink" title="捐赠名单"></a><a href="http://sarasarasa.net/post/22d5d0d5.html">捐赠名单</a></h2><p>扫码关注人升公众号，可以尽快收到更新介绍<del>而且我们说不定能赚点服务器钱:)</del></p>
 <img src="/post/621e3bb6/01.jpg" class="">
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>人升LifeUp 常见问题</title>
    <url>/post/157a032e.html</url>
    <content><![CDATA[<p><a href="http://wiki.lifeupapp.fun/zh-cn/#/guide/faq">请点击此处访问新站点</a></p>
<h2 id="其他链接"><a href="#其他链接" class="headerlink" title="其他链接"></a>其他链接</h2><ul>
<li><p><a href="http://sarasarasa.net/post/635a53df.html">1.75.1 番茄钟、WebDAV自动备份更新日志</a></p>
</li>
<li><p><a href="http://sarasarasa.net/post/e817e5b9.html">1.74.0 用户成就版本更新日志</a></p>
</li>
<li><p><a href="http://sarasarasa.net/post/621e3bb6.html">公告、已知问题、应用详细介绍</a></p>
</li>
<li><p><a href="http://sarasarasa.net/post/a889432c.html">更新日志</a></p>
</li>
<li><p><a href="http://sarasarasa.net/post/22d5d0d5.html">捐赠名单</a></p>
</li>
</ul>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><ul>
<li><strong>如何撤销完成事项？</strong></li>
</ul>
<ol>
<li><p>在完成时，点击底部提示框的“撤销”按钮。</p>
</li>
<li><p>于<code>侧边栏</code>的<code>历史</code>页面，点击撤销按钮。</p>
</li>
<li><p>于<code>日历</code>页面的<code>已结束</code>模块，点击撤销按钮。</p>
<blockquote>
<p>可以撤销任意时刻的无重复待办事项，以及<strong>今天完成的重复事项</strong>。</p>
</blockquote>
</li>
</ol>
<ul>
<li><p><strong>可以设置经验值或者金币惩罚吗？</strong></p>
<p>可以的，默认也启用了经验值惩罚。金币惩罚默认没启用。</p>
<p>可以在<code>侧边栏</code>-<code>设置</code>-<code>自定义设置</code>里自由设定。</p>
<blockquote>
<p>😅 不知道为什么这点一直有人反馈建议（还没留联系方式，没法回复），后续会加强对“惩罚”的展示效果。</p>
</blockquote>
</li>
<li><p><strong>如何隐藏掉已经完成的事项（其实是未开始的事项）？</strong></p>
<p>在主页（即<code>告示</code>页面），点击右上角的菜单栏（三个点），再点击<code>筛选</code>，选中<code>只显示今天事项</code>即可。</p>
</li>
<li><p><strong>如何建立指定周几的待办事项？如每周一、二、三。</strong></p>
<p><a href="http://sarasarasa.net/post/423cff64.html#3-%E6%AF%8F%E5%91%A8%E4%B8%80-%E6%AF%8F%E5%91%A8%E6%97%A5">点击这里查看</a></p>
</li>
<li><p><strong>如何下架商品？</strong></p>
<p>在<code>商店</code>页面，长按商品，然后选择顶部的垃圾桶按钮。</p>
</li>
</ul>
<ul>
<li><p><strong>指定时间没收到提醒？</strong></p>
<p>应用内其实也有说明，由于独立应用权限有限，默认的提醒方式会受系统限制，可能关了后台就失效了。</p>
<p>可以尝试<strong>更换为系统日历提醒方式（<code>设置</code>-<code>事项设置</code>）</strong>，更换后，可以查看系统日历app有没有成功插入提醒时间。</p>
</li>
<li><p><strong>想初始化“我的”页面中的逾期、放弃数</strong></p>
<p>这里的数字统计是基于历史记录的，可以前往<code>侧边栏</code>-<code>历史</code>页面，删除相应的错误记录。</p>
</li>
<li><p><strong>什么是目标重复次数和计数事项次数？</strong></p>
<p><a href="http://sarasarasa.net/post/423cff64.html#%E7%9B%AE%E6%A0%87%E9%87%8D%E5%A4%8D%E6%AC%A1%E6%95%B0">点击这里查看</a></p>
</li>
<li><p><strong>我不想用社区，可以隐藏吗？</strong></p>
<p>可以前往<code>侧边栏</code>-<code>设置</code>-<code>显示设置</code>内隐藏社区，需要重启应用生效~</p>
</li>
</ul>
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>人升Lifeup 更新日志</title>
    <url>/post/a889432c.html</url>
    <content><![CDATA[<p><a href="http://wiki.lifeupapp.fun/zh-cn/#/introduction/release_log">请点击此处访问新站点</a></p>
<h1 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h1><p><strong>1.80.7（2021/01/26)</strong></p>
<p>【功能】</p>
<ol>
<li>增加商品的相关统计（购买、使用、开箱、奖励获得次数）</li>
<li>自定义属性的描述</li>
<li>简洁模式增加配置项：隐藏所有额外信息</li>
</ol>
<p>【优化】</p>
<ol>
<li>「不可购买」的仓库物品现也支持退货（删除）操作，返还0金币</li>
<li>重新设计的属性描述对话框</li>
<li>优化「快速创建常驻通知」的逻辑：添加事项后，回到之前的页面（而不是人升中的上一个页面）</li>
<li>所有能够选择待办清单的地方也支持了管理功能（编辑、重命名等）</li>
<li>搜索界面增加搜索动画</li>
</ol>
<p>【修复】</p>
<ol>
<li>修复某些情况下，番茄专注统计页面的展示会很长的问题</li>
<li>修复在修改团队任务的经验值后，下一次任务会恢复的问题</li>
<li>修复自定义属性后，状态页面不能及时更新，且可能字体重叠的问题</li>
<li>移除番茄钟的废弃逻辑：距离上次专注超过4小时，会重置状态</li>
<li>修复在「忽略媒体文件」的情况下生成的备份文件，恢复时会出现异常的问题</li>
</ol>
<p><strong>1.80.6（2021/01/22)</strong></p>
<p>【功能】</p>
<ol>
<li>支持分享带有开箱效果的商品</li>
<li>增加独立的搜索界面，支持根据用户昵称进行搜索</li>
<li>团队和橱窗界面按活跃度/热度/进货数排序，支持按时间进行筛选</li>
<li>支持开启常驻快速创建事项通知</li>
<li>备份支持忽略媒体图片文件</li>
</ol>
<p>【优化】</p>
<ol>
<li>数据管理界面会展示媒体图片文件占用的体积</li>
<li>隐藏商店的清单编辑弹窗中的「归档」按钮</li>
<li>更新葡萄牙语文本资源</li>
<li>优化so库，减少应用体积</li>
<li>优化利息的计算时机，改为跨天时，而不是超过24小时后</li>
<li>增加部分用户指引</li>
</ol>
<p>【修复】</p>
<ol>
<li>低版本系统可能无法创建番茄钟快捷方式的问题</li>
<li>当开箱效果套娃获取当前物品时，结算的库存数量异常的问题</li>
<li>当删除单次事项，顶部卡片进度条不会刷新的问题</li>
<li>修复当设置了空的开箱效果时，可以添加其他使用效果的问题</li>
<li>修复接口缓存导致的部分问题</li>
</ol>
<p><strong>1.80.5（2021/01/14)</strong></p>
<ol>
<li>开箱支持10连、50连开启</li>
<li>增加【开箱得到指定物品一定次数】的成就解锁条件选项</li>
<li>ATM增加利息功能，可自由设置日利率（0-10%）</li>
<li>食用/售卖番茄时，支持输入相应的数量</li>
<li>可对休息时间结束专门设定音效（会员）</li>
<li>交互优化和问题修复</li>
</ol>
<p><strong>1.80.4（2021/01/05)</strong></p>
<ol>
<li>修复低版本安卓系统的兼容性崩溃问题</li>
<li>修复奖励“仅文本”不可输入的问题</li>
<li>修复简洁模式有时候显示不出时间的问题</li>
</ol>
<p><strong>1.80.3（2021/01/04)</strong></p>
<ol>
<li>橱窗图标增加查看大图/添加到选择列表的功能</li>
<li>修复内置图标整体不居中的问题</li>
<li>修正用户成就界面的文案问题</li>
<li>裁剪图片支持自由裁剪</li>
<li>修复夜间模式概率表的颜色错误，增加数量显示</li>
<li>修正商品相关的文案错误</li>
<li>选择待办事项/商品时支持直接新建</li>
<li>用户成就支持「复制」操作</li>
<li>ATM增加隐藏金额的功能</li>
<li>修复一个当商品操作过多时的崩溃问题</li>
<li>金币负数时应该支持购买0金币的商品</li>
<li>修复番茄专注记录会重复计算暂停+跳过的时间，忽略小于半分钟的专注记录</li>
<li>优化成就清单列表和商品列表的初次加载动画</li>
<li>修复仓库历史无法显示橱窗进货的商品图片的问题</li>
<li>将限制同时使用的数量从5提升到了10</li>
</ol>
<p><strong>1.80.2（2020/12/28)</strong></p>
<ol>
<li>适配HMS</li>
</ol>
<p><strong>1.80.1（2020/12/27)</strong></p>
<ol>
<li>适配HMS</li>
<li>修复自动备份开关判断失误的问题</li>
</ol>
<p><strong>1.80.0（2020/12/17)</strong></p>
<p><strong>功能</strong></p>
<ol>
<li>新增【开箱】使用效果！<br>自定义概率随机获得物品，并且可以定义数量</li>
<li>支持Dropbox云同步（国内网络可能无法正常访问）</li>
<li>新增了几个默认图标，并且支持了动态更新</li>
<li>支持设置自动备份间隔</li>
<li>用户成就补上「移至…」功能</li>
<li>简洁模式可进行配置（只显示时间/显示金币数量）</li>
<li>选择图片增加历史记录</li>
<li>支持对单个事项设置惩罚系数</li>
<li>支持在历史页面“重新开始”事项</li>
</ol>
<p><strong>优化</strong></p>
<ol>
<li>优化仓库的动画效果</li>
<li>在服务器异常时弹窗提醒</li>
<li>优化更新提示</li>
<li>优化了番茄钟结束时的振动效果和时长</li>
<li>用户成就的在标题栏增加（已完成/总数）的显示</li>
<li>记忆对事项的感想开关、系统成就的排序</li>
<li>优化一些文案，修正错误</li>
<li>支持从动态点击进入团队详情</li>
<li>填写的动态内容增加持久化缓存，防止输入的内容和图片丢失</li>
<li>对事项的状态追加了一层判断，防止各种意外导致重复事项丢失</li>
</ol>
<p><strong>修复</strong></p>
<ol>
<li>修复“不可购买”商品可退货的问题</li>
<li>修复撤销完成的成就进度显示不正确的问题</li>
<li>修复事项标签颜色可能不正确的问题</li>
<li>修复购买重新上架的商品后，仓库显示不正确的问题</li>
<li>修复重新上架的商品，库存为0的问题</li>
</ol>
<p><strong>1.79.3（2020/12/17)</strong></p>
<ol>
<li>番茄钟支持记录暂停时间段</li>
<li>增加“检查重复效果”按钮</li>
<li>增加振动开关</li>
<li>优化网络请求</li>
</ol>
<p><strong>1.79.2（2020/12)</strong></p>
<ol>
<li>适配 EMUI 的日历提醒</li>
<li>修复用户成就和仓库物品拖动后，显示状态不正确的问题</li>
</ol>
<p><strong>1.79.1（2020/12)</strong></p>
<ol>
<li>修复自定义属性选择不了图片的问题</li>
</ol>
<p><strong>1.79.0（2020/12)</strong><br><strong>功能</strong><br>【待办事项】</p>
<ol>
<li>从日历界面直接新建指定日期的待办事项（作为开始时间或期限时间）</li>
<li>支持针对单个待办事项指定完成后是否要记录感想</li>
</ol>
<p>【番茄】</p>
<ol>
<li>增加计时统计页面</li>
<li>状态页面增加统计卡片</li>
<li>事项详情页面增加该事项获取的番茄总数显示</li>
<li>完成计时时增加振动提醒</li>
</ol>
<p>【用户成就】</p>
<ol>
<li>支持设置商品奖励</li>
<li>支持3种新的解锁条件【待办事项获得番茄数】、【商品购买数】和【商品使用数】</li>
</ol>
<p>【商店】</p>
<ol>
<li>商品点击可查看详情</li>
<li>商店增加顶部快捷切换清单</li>
<li>个人页面增加上架橱窗的商品显示</li>
</ol>
<p>【会员】</p>
<ol>
<li>增加5种专属主题色</li>
<li>支持自定义音效（完成、购买、升级和番茄计时结束）</li>
<li>支持商品打开“无法购买”的选项</li>
</ol>
<p><strong>优化</strong></p>
<ol>
<li>优化编辑时对开始时间的处理</li>
<li>增加备份间隔提醒</li>
<li>增加番茄钟界面指引</li>
<li>桌面小部件设置内增加指引</li>
<li>桌面小部件增加圆角（默认样式）</li>
<li>统一事项详情内的完成次数计算方式，与成就保持一致</li>
<li>仓库物品增加选中提示</li>
<li>商品、待办事项选择框增加搜索</li>
<li>优化团队任务出现异常时（本地存在服务器上已完成任务）的处理情况</li>
<li>选择商品作为奖励时，显示剩余数量</li>
<li>用户成就新建后立即更新进度</li>
<li>用户成就页面的浮动按钮也会随滚动自动隐藏</li>
<li>点击状态页面的金币状态卡片可跳转金币详情页面</li>
<li>商店的清单选择页面不应该显示“归档”开关</li>
<li>优化详情页面内，子任务的点击范围</li>
</ol>
<p><strong>修复</strong></p>
<ol>
<li>修复部分用户可能遇到的合成到错误物品的问题</li>
<li>修复首页顶部栏可能会消失的问题</li>
<li>修复一些界面商品图标显示不正确的问题</li>
<li>修复未设置经验值的事项在详情页面放弃，不会自动退出页面的问题</li>
<li>修复仓库历史记录没法正确显示合成商品的信息的问题</li>
<li>修复用户成就中的两个金币解锁条件，设置时交互异常</li>
<li>修复合成配方中的数量限制</li>
<li>修复在不按确认键，直接创建待办事项时，子任务不生效的问题</li>
<li>修复不会折叠已完成事项的问题</li>
</ol>
<p><strong>1.78.0/1/2（2020/11)</strong></p>
<ol>
<li>自定义成就的自动解锁条件，支持进度显示和解锁提示<br>（总计完成事项、连续完成事项、达到指定等级、获得番茄总数等）</li>
<li>支持自定义经验值</li>
<li>商品支持批量移动</li>
<li>感想支持直接跳转查看事项详情</li>
<li>更新翻译资源</li>
</ol>
<p><strong>1.77.4（2020/11/12)</strong></p>
<p>功能</p>
<ol>
<li>【事项】详情页面增加子任务、计数和目标重复次数的进度展示</li>
<li>【事项】详情页面增加周期完成统计</li>
</ol>
<p>优化</p>
<ol>
<li>团队事项现在也支持显示已完成状态</li>
</ol>
<p>修复</p>
<ol>
<li>修复某些情况下点击新建团队按钮却出现分享橱窗商品的问题</li>
<li>修复列表状态异常导致崩溃的问题</li>
<li>修复成就感想的一些异常问题</li>
</ol>
<p><strong>1.77.3（2020/11/xx)</strong></p>
<ol>
<li>修复“显示已完成事项”开启后的一些问题（如无法正确删除、撤销弹窗不显示）</li>
<li>修复番茄钟有时无法记录当前时间的问题</li>
<li>微调部分UI</li>
<li>重复频次增加一个“每周几”的快捷入口</li>
<li>修改筛选的文案</li>
</ol>
<p><strong>1.77.2（2020/11/xx)</strong></p>
<ol>
<li>修复隐藏计数卡片后，重启不生效的问题</li>
<li>修复桌面小部件的异步刷新问题</li>
<li>修复退货多个商品时，返还的价格只计算了一个的问题</li>
<li>排行榜增加“关注”提示</li>
<li>对新用户增加了一个样例商品</li>
<li>编辑待办事项返回时，增加“是否放弃修改”的对话框</li>
<li>修复上架橱窗商品的对话框，可以选择从其他用户进货的商品的问题</li>
</ol>
<p><strong>1.77.1（2020/11/05)</strong></p>
<p><strong>功能</strong></p>
<ol>
<li>【事项】快捷切换清单的顶部导航栏</li>
<li>【事项】“显示已完成事项”的开关</li>
<li>【事项】清单支持归档操作</li>
<li>【状态】页面增加金币的状态显示</li>
<li>【用户成就】现在也发表感想</li>
<li>【橱窗】现在支持分享和进货带有“合成”效果的商品（仅支持一级合成，且需要新版本用户才能进货成功）</li>
</ol>
<p><strong>优化</strong></p>
<ol>
<li>【事项】冻结事项会折叠显示，且不在日历的“即将期限”中显示</li>
<li>【事项】清单上现在会展示未完成数量</li>
<li>【事项】夜间模式现在会跟随系统设置</li>
<li>【事项】增加说明文档入口，优化提示</li>
<li>当数据库版本异常时，增加升级应用的提醒</li>
<li>优化WebDAV自动备份逻辑，完善自动备份的错误提示</li>
</ol>
<p><strong>修复</strong></p>
<ol>
<li>修复在橱窗页面下载商品后，无法重新上架的问题</li>
<li>修复主页在放置后台、旋转屏幕等情况下可能导致崩溃的问题</li>
</ol>
<p><strong>1.77.0（2020/10/28)</strong></p>
<p><strong>功能</strong></p>
<ol>
<li>社区增加【橱窗】模块<ul>
<li>分享你设定的商品</li>
<li>随意浏览、进货社区用户们分享的有趣商品</li>
</ul>
</li>
</ol>
<p><strong>优化</strong></p>
<ol>
<li>修正“每月”重复循环的逻辑</li>
<li>优化商店、仓库列表的刷新效果</li>
<li>优化图片上传策略</li>
<li>切换后台时，自动释放音频池</li>
</ol>
<p><strong>修复</strong></p>
<ol>
<li>修复当未执行过WebDAV备份时，启用自动备份无法生效的问题</li>
<li>修改待办事项的商品奖励不会受库存设置影响的问题</li>
<li>修复购买具有使用效果的物品时，即便切换至“不立即使用”，仍存在5个数量限制的问题</li>
<li>修复设定“自定义商品使用文案”后，进入编辑页面仍显示默认值的问题</li>
</ol>
<p><strong>1.76.0（2020/10/13)</strong></p>
<p><strong>功能</strong></p>
<ol>
<li>【事项】子任务默认金币设置</li>
<li>【商店】和【成就】：现已经内置了上百个模板图标</li>
<li>【通用】音效全局开关</li>
<li>【感想】现支持按事项内容进行筛选</li>
<li>【番茄】支持在“设置”页面创建快捷方式</li>
<li>【番茄】自定义番茄售价</li>
</ol>
<p><strong>优化</strong></p>
<ol>
<li>【感想】筛选时，现在会在顶部显示筛选类型和内容</li>
<li>【会员】增加更多会员状态的 UI 显示</li>
<li>【番茄】倒计时的情况下，页面会保持常亮状态</li>
<li>【杂项】指定文本默认颜色，防止因为自定义主题导致文本显示异常</li>
<li>【杂项】当页面显示有限时，新建事项页面会提示下方还有更多设置</li>
<li>【杂项】隐藏无用的“主页”侧边栏按钮，更换“感想”图标</li>
<li>【杂项】新建成就和商品页面，增加了“更换图标”按钮</li>
</ol>
<p><strong>修复</strong></p>
<ol>
<li>修复【重复事项】颜色设置会丢失的问题</li>
<li>修复搜索状态中，查看一个团队并返回后，页面会自动刷新的问题</li>
<li>修复当清单达到一定数量后，“新建”按钮显示不出来的问题</li>
<li>修复当处理“自动备份”冲突后，点击“云朵”按钮无反应的问题</li>
</ol>
<p><strong>1.76.0-alpha03 略</strong></p>
<p><strong>1.76.0-alpha02 略</strong></p>
<p><strong>1.76.0-alpha01（2020/10/09）</strong></p>
<p><strong>功能</strong></p>
<ol>
<li>【商店】：支持定制商品的使用效果<ul>
<li>增加或减少经验值</li>
<li>增加或减少金币</li>
<li>增加“不可使用”类型的商品</li>
</ul>
</li>
</ol>
<p><strong>优化</strong></p>
<ol>
<li>指定默认字体颜色，防止受到第三方主题影响</li>
</ol>
<p><strong>修复</strong></p>
<ol>
<li>修复 MIUI 下，创建的番茄钟图标显示不出来的问题</li>
</ol>
<p><strong>1.75.2（2020/10/05）</strong></p>
<p><strong>功能</strong></p>
<ol>
<li>【事项】子任务默认金币设置</li>
<li>【商店】和【成就】：现已经内置了上百个模板图标</li>
<li>【通用】音效全局开关</li>
<li>【感想】现支持按事项内容进行筛选</li>
<li>【番茄】支持在“设置”页面创建快捷方式</li>
<li>【番茄】自定义番茄售价</li>
</ol>
<p><strong>优化</strong></p>
<ol>
<li>【感想】筛选时，现在会在顶部显示筛选类型和内容</li>
<li>【会员】增加更多会员状态的 UI 显示</li>
<li>【番茄】倒计时的情况下，页面会保持常亮状态</li>
<li><del>【杂项】指定文本默认颜色，防止因为自定义主题导致文本显示异常</del>（仍存在该问题）</li>
<li>【杂项】当页面显示有限时，新建事项页面会提示下方还有更多设置</li>
<li>【杂项】隐藏无用的“主页”侧边栏按钮，更换“感想”图标</li>
<li>【杂项】新建成就和商品页面，增加了“更换图标”按钮</li>
</ol>
<p><strong>修复</strong></p>
<ol>
<li>修复【重复事项】颜色设置会丢失的问题</li>
<li>修复搜索状态中，查看一个团队并返回后，页面会自动刷新的问题</li>
<li>修复当清单达到一定数量后，“新建”按钮显示不出来的问题</li>
<li>修复当处理“自动备份”冲突后，点击“云朵”按钮无反应的问题</li>
</ol>
<p><strong>1.75.1（2020/09/20）</strong></p>
<p><strong>优化</strong></p>
<ol>
<li>国内应用市场分发的版本，默认语言设置为简体中文</li>
</ol>
<p><strong>修复</strong></p>
<ol>
<li>修复计步模块隐藏不生效的问题</li>
<li>修改重复待办事项的商店奖励不能被继承的任务</li>
<li>修复逾期处理弹窗的UI问题</li>
<li>修复经验值减少时的进度条不精准的问题</li>
<li>修复获得金币总数显示不正确的问题</li>
<li>修复商店/仓库搜索不正常的问题</li>
<li>修复顶部进度条刷新不及时的问题</li>
</ol>
<p><strong>1.75.0（2020/09/16）</strong></p>
<p><strong>功能</strong></p>
<ol>
<li>初版游戏化番茄钟：完成番茄钟获得番茄，食用或者出售番茄，支持关联待办事项</li>
<li>自定义清单事项颜色、待办事项颜色</li>
<li>支持自由隐藏【状态】、【商店】、【我的】模块</li>
<li>WebDAV 自动备份同步功能：每次进入应用时自动同步，出现冲突时弹窗处理（需要手动开启）</li>
<li>待办事项列表支持展开收缩，隐藏未开始事项</li>
<li>支持清除所有历史记录</li>
<li>可以但没有必要的会员系统</li>
</ol>
<p><strong>优化</strong></p>
<ol>
<li>终止团队增加确认对话框</li>
<li>WebDAV 页面增加坚果云教程入口</li>
<li>重构了状态页面，提高了主页性能</li>
<li>去除了侧边栏的“主页”按钮</li>
<li>替换掉一些不符合风格的图标</li>
<li>优化新建页面选择清单的UI</li>
<li>用户成就支持批量删除</li>
<li>支持从仓库”重新上架“商品</li>
</ol>
<p><strong>修复</strong></p>
<ol>
<li>修复在完成待办事项后，但在没关闭弹窗前，直接关闭应用导致事项不会执行【重复】的问题</li>
<li>修复一些其他崩溃问题</li>
</ol>
<p><strong>1.74.2（2020/08/23，仅谷歌Play发布）</strong></p>
<p>支持葡萄牙语</p>
<p><strong>1.74.1（2020/08/16）</strong></p>
<ol>
<li>修复登录页面的UI重叠问题</li>
<li>修复安卓10以下也会显示运动权限“授权”按钮的问题</li>
</ol>
<p><strong>1.74.0（2020/08/12）</strong></p>
<p><strong>功能：</strong></p>
<ol>
<li>ATM：使用ATM来存放你的金币</li>
<li>商品库存设置：售罄时商品自动下架</li>
<li>现支持把商品设置为事项的奖励</li>
<li>将用户成就的交互逻辑与其他页面保持统一</li>
</ol>
<p><strong>优化：</strong></p>
<ol>
<li>部分操作增加小幅度振动</li>
<li>改进一些页面的动画效果和 UI</li>
<li>改进第一次播放音效的效果</li>
</ol>
<p><strong>修复：</strong></p>
<ol>
<li>适配 Android 10 的获取步数权限（需手动授权）</li>
<li>修复某些情况下，切换语言不生效的问题</li>
<li>修复在桌面小部件完成任务时，即便达到目标次数也不会自动结束的问题</li>
<li>修复在隐藏社区的情况下，底部菜单栏颜色不正确的问题</li>
</ol>
<p><strong>1.73.0（2020/07/26）</strong></p>
<p><strong>功能：</strong></p>
<ol>
<li>用户成就初版（入口在“实验”内）</li>
<li>经验值惩罚动画</li>
<li>支持微博授权登录</li>
<li>现支持修改事项记录的完成时间</li>
<li>团队现在也支持设置子任务金币奖励</li>
<li>团队现在支持点赞操作</li>
</ol>
<p><strong>优化：</strong></p>
<ol>
<li>购买商品增加音效</li>
<li>裁剪图片增加圆形标识</li>
</ol>
<p><strong>修复：</strong></p>
<ol>
<li>修复子任务的金币设置不能继承到下一次事项的问题</li>
</ol>
<p><strong>1.72.1（2020/06/13）</strong></p>
<p><strong>功能：</strong></p>
<ol>
<li>清空成就数据</li>
</ol>
<p><strong>优化：</strong></p>
<ol>
<li>商品描述的展示</li>
</ol>
<p><strong>修复：</strong></p>
<ol>
<li>修复编辑商品图片不生效的问题</li>
<li>修复编辑动态文本不生效的问题</li>
</ol>
<p><strong>1.72.0（2020/06/10）</strong></p>
<p><strong>功能：</strong></p>
<ul>
<li>子任务提醒</li>
<li>子任务金币奖励</li>
<li>桌面小部件优化：<ol>
<li>设置透明度（仅暗色模式）</li>
<li>显示金币</li>
<li>支持显示计数事项对话框</li>
</ol>
</li>
<li>统计页面时间区间选择</li>
<li>仓库：商品支持退货（8折出售）</li>
<li>团队支持子任务</li>
</ul>
<p><strong>优化：</strong></p>
<ul>
<li>单次事项不再显示完成次数</li>
<li>计数事项可选择是否启用“多倍经验值奖励”</li>
<li>滑动完成计数任务的行为修改为：完成次数+1</li>
<li>崩溃收集系统升级</li>
<li>语言选择对话框：增加“帮助翻译”的入口</li>
<li>增加时区变化监听</li>
</ul>
<p><strong>修复：</strong></p>
<ul>
<li><p>设置商品图片：在裁剪透明图片后，透明部分不再会变成纯黑</p>
</li>
<li><p>优化桌面小部件完成事件处理，修复完成后出现提醒、后台无法完成的异常问题</p>
</li>
<li>Google Play版本应用内切换语言，将会触发语言下载</li>
<li>修复没有设置金币奖励的事项，在详情页面仍显示金币项的问题</li>
<li>修复“滑动完成（无对话框）”模式下，滑动后页面显示异常的问题</li>
<li>尝试修复部分机型，输入子任务后，点击软键盘回车无反应的问题</li>
</ul>
<p><strong>1.71.4（2020/04/17 更新）</strong></p>
<p><strong>修复</strong></p>
<ul>
<li>一个兼容性崩溃问题</li>
</ul>
<p><strong>1.71.3（2020/04/16 更新）</strong></p>
<p><strong>修复：</strong></p>
<ul>
<li>修复图标显示不正确的问题</li>
<li>修复崩溃报告上报异常的问题</li>
</ul>
<p><strong>1.71.2（2020/04/14 Google Play更新）</strong></p>
<p><strong>功能：</strong></p>
<ul>
<li><p>Play版专属功能（以后会员也会加上）：</p>
<ol>
<li>自定义卡片背景图和不透明度</li>
<li>自定义商店物品的”使用“操作按钮文案</li>
</ol>
</li>
<li><p>感想收藏功能</p>
</li>
<li>感想页面增加搜索功能：按感想内容、按日期收藏、只查看收藏</li>
<li>增加土耳其语言</li>
</ul>
<p><strong>优化：</strong></p>
<ul>
<li><p>改用新图标</p>
</li>
<li><p>“举报”列表条目支持多语言显示</p>
</li>
<li>调整设置页面UI</li>
<li>优化切换主题颜色/语言时的切换效果，理论上不再需要重启</li>
<li>裁剪图片界面优化</li>
<li>清单界面：目前选中的清单会有额外背景效果</li>
<li>稍微优化了一下增加子任务的逻辑</li>
<li>商店页面增加至多两行的描述显示</li>
</ul>
<p><strong>修复：</strong></p>
<ul>
<li>修复成就完成日期显示不正确的问题</li>
<li>修复商店图片被误删除后，显示为空白的问题</li>
<li>单次事项逾期后，不再清空子任务状态</li>
<li>修复不同语言情况下，事项详情页面的两个等级显示不全的问题</li>
<li>修复逾期处理后，下一个事项的重复次数不会+1的问题</li>
<li>修复默认事项设置中，随即金币数量的“最大值”显示不正确的问题</li>
<li>修复数据备份界面不能滑动的问题</li>
<li>修复快速滑动完成事项时，出现异常情况的问题</li>
<li>修复桌面小部件不会显示“冻结”状态的问题</li>
<li>修复首页顶部的进度条偶现不正确的问题</li>
</ul>
<p><strong>服务端修复（2020/4/13）</strong></p>
<ul>
<li>修复举报功能异常的问题</li>
</ul>
<p><strong>1.71.1（2020/03/17）</strong></p>
<p><strong>优化：</strong></p>
<ul>
<li>优化待办事项顶部卡片的进度条动画效果</li>
</ul>
<p><strong>修复：</strong></p>
<ul>
<li>修复部分用户会启动闪退的问题（感谢酷安 @第六代魁拔 帮忙验证）</li>
<li>选择图片增加权限判断</li>
</ul>
<p><strong>1.71.0（2020/03/13）</strong></p>
<p><strong>功能：</strong></p>
<ul>
<li><p>感想功能：记录完成本地事项的心得体会</p>
</li>
<li><p>增加滑动操作“完成事项（不弹窗）”：使用该操作的时候，不会显示奖励、感想等弹窗。</p>
</li>
</ul>
<p><strong>修复：</strong></p>
<ul>
<li><p>修复卡片不能正确地从未开始状态切换到开始状态</p>
</li>
<li><p>修复“撤销”过的事项，在逾期的时候，可能会消失的问题。</p>
</li>
<li><p>修复“重要程度”、“困难程度”排序时，不能正确显示选中状态的问题。</p>
</li>
</ul>
<p><strong>1.70.6（2020/03/09）</strong></p>
<p><strong>优化：</strong></p>
<ol>
<li>调整成就提示框的颜色，与主题色一致。</li>
</ol>
<p><strong>修复：</strong></p>
<ol>
<li><p>修复点击“逾期处理”对话框的按钮时，状态不能正确切换的问题。</p>
</li>
<li><p>修复“复制”功能，不能正确复制子任务的问题。</p>
</li>
<li><p>修复偶现的批量“移动”事项时，可能的崩溃问题。</p>
</li>
<li>修复某些机器上，顶部菜单卡片不能正确显示在最前的问题。</li>
</ol>
<p><strong>1.70.5（2020/03/06）</strong></p>
<p><strong>修复：</strong></p>
<ol>
<li>修复某些情况下，待办事项卡片显示持续加载中的问题。</li>
</ol>
<p><strong>1.70.4（2020/03/05）</strong></p>
<p><strong>优化：</strong></p>
<ul>
<li>没有商品时，商店页面现在也会显示金币数</li>
<li>点击商店页面的金币数，现在能跳转「金币收支详情」页面</li>
<li>修改仓库为空时的文案</li>
<li>优化在英文下，桌面小部件的文本格式显示</li>
<li>重新实现点击桌面小部件事项，跳转事项详情页</li>
</ul>
<p><strong>修复：</strong></p>
<ul>
<li>修复当筛选为“今天”时，完成事项后可能不会出现“还有x个事项未开始”的问题</li>
<li>修复社区动态显示不正常的问题</li>
</ul>
<p><strong>1.70.3（2020/03/05）</strong></p>
<p><strong>修复：</strong></p>
<ul>
<li>修复手动输入金币数量无效的问题</li>
<li>修复在团队、个人页面点赞无效的问题</li>
<li>修复子任务进度不能正确更新的问题</li>
<li>修复桌面小部件不能正常完成事项的问题</li>
</ul>
<p><strong>1.70.2（2020/03/04）</strong></p>
<p><strong>功能：</strong></p>
<ul>
<li>复制任务：长按可以在菜单中复制一份相同的任务</li>
<li>新事项默认设置</li>
<li><p>商店清单功能</p>
</li>
<li><p>社区时区支持：社区现支持任意时区，非东8区的会显示相同时区信息</p>
</li>
<li>社区海外版：使用英语语言现在会进入英文社区</li>
<li>桌面小部件升级：<ol>
<li>点击事项空白处能进入事项详情</li>
<li>点击“主页”按钮能进入应用内的相应清单显示</li>
<li>点击”新增”按钮能进入当前所选清单的“新建事项”页面</li>
</ol>
</li>
<li>「日历页面」“已完成”也加上了菜单，可进行撤销等操作</li>
</ul>
<p><strong>优化：</strong></p>
<ul>
<li><p>事项卡片的动画更加完善</p>
</li>
<li><p>移除了一个不必要的权限</p>
</li>
<li>增加了完成音效</li>
<li>优化了「历史页面」显示样式</li>
<li>在启用「系统日历提醒」情况下，如果缺少日历读写权限，现在会显示能够再次申请的弹窗。</li>
</ul>
<p><strong>修复：</strong></p>
<ul>
<li>修复在简洁模式下，计数事项的进度显示不会更新的问题</li>
<li>修复某些情况可能导致事项重复的问题</li>
<li>修复某些情况下移除子任务会崩溃和显示不正常的问题</li>
<li>修复 WebDAV 在地址出错时崩溃的问题</li>
<li>修复在恢复备份后，偶现的主题色显示异常的问题</li>
</ul>
<p><strong>1.70.1（2020/02/14）</strong></p>
<ol>
<li>功能：可进行“撤销”对话框显示时长设置（事项设置内）</li>
<li>优化：历史页面的操作逻辑，现可在“菜单”中进行“撤销”操作</li>
<li>优化：更改撤销逻辑，现在可以撤销任意时间的单次事项</li>
<li>优化：优化动态的显示效果</li>
<li>修复：多个页面不该出现的附件按钮</li>
<li>修复：修改自定义属性的文本定义后，在新建事项页面不生效的问题</li>
<li>修复：图片附件不会被重复事项继承的问题</li>
</ol>
<p><strong>1.70.0（2020/02/11）</strong></p>
<ol>
<li>简洁模式：全新的简洁待办卡片</li>
<li>图片附件：每个待办事项可以附上至多3张图片</li>
<li>支持WebDAV云备份设置</li>
<li>自定义属性的名称和图标</li>
<li>修复桌面小部件的颜色不正确问题</li>
<li>修复选中状态下，点击圆圈仍是完成事项的问题</li>
<li>优化各个页面卡片显示</li>
</ol>
<p><strong>1.69.2（2020/01/10）</strong></p>
<ol>
<li>修复罕见的登录崩溃问题</li>
<li>调整夜间模式下菜单文字颜色</li>
</ol>
<p><strong>1.69.1（2020/01/08）</strong></p>
<ol>
<li>【优化】“未开始事项”提示布局优化</li>
<li>【优化】桌面小部件的时间显示</li>
<li>【修复】加载团队事项后，不会自动刷新列表的问题</li>
<li>【修复】团队事项在详情页面点击编辑按钮扔无法编辑的问题</li>
<li>【修复】罕见的子任务列表崩溃问题</li>
</ol>
<p><strong>1.69.0（2019/12/28）</strong></p>
<ol>
<li>【功能】子任务</li>
<li>【功能】自定义排序：现支持待办事项/清单/商店的拖动排序</li>
<li>【功能】冻结事项：用于暂停某个重复事项，冻结的事项逾期时不会进行经验值/金币惩罚</li>
<li>【功能】批量操作：事项批量删除/移动，商品批量下架</li>
<li>【功能】桌面小部件支持清单选择</li>
<li>【功能】“逾期处理”页面</li>
<li>【功能】团队支持“按活跃度排序”、“筛选未截止团队”</li>
<li>【功能】团队事项现在支持部分编辑：设置备注、金币、提醒等</li>
<li>【功能】排序依据增加“重要程度“、“困难程度”</li>
<li>【功能】成就现在支持排序：“按完成时间”、“按进度”</li>
<li>【功能】成就进度现在会同步到云端</li>
<li>【功能】现支持自定义滑动操作</li>
<li>【优化】“筛选”设置为“显示今天事项”或者“显示仅七天事项”的时候，会提示还有多少个事项未开始，并可以临时显示</li>
<li>【优化】桌面小部件现支持跟随主题色设置</li>
<li>【优化】团队事项现支持放弃操作</li>
<li>【优化】“设为完成”操作将撤销惩罚</li>
<li>【优化】发表动态的内容增加保护机制，在发送的时候再次点击完成的时候会恢复之前的内容。</li>
<li>【优化】“单次事项”的逾期处理优化</li>
<li>【优化】“日历”视图的待办事项增加点击到事项详情的入口</li>
<li>【优化】优化平板的显示效果</li>
<li>【优化】“置顶”图标增加英文版图标</li>
<li>【优化】大量视觉优化效果：升级Material Components</li>
<li>【修复】某些情况下点赞显示“点赞操作失败”的问题</li>
<li>【修复】“倒计时显示时间”的状态显示不正确的问题</li>
<li>【修复】改动系统时区后，应用内时间显示不生效的问题</li>
<li>【修复】某些事项的逾期时间显示不准确的问题</li>
</ol>
<p><strong>1.68.5（2019/12/20）</strong></p>
<ol>
<li>修复逾期事项的时间计算问题</li>
</ol>
<p><strong>1.68.4（2019/12/13）</strong></p>
<ol>
<li>修复成就重复问题</li>
<li>修复某些情况下开始/期限时间计算错误的问题</li>
<li>修复少了一个成就的问题</li>
</ol>
<p><strong>1.68.3（2019/12/10）</strong></p>
<ol>
<li><p>【修复】修复设置了提醒的单次事项逾期时的崩溃问题</p>
</li>
<li><p>【修复】修复编辑事项/新建事项的时候的一些异常崩溃问题</p>
</li>
<li><p>【修复】修复商店新增按钮偶现点击无效的问题</p>
</li>
<li><p>【修复】修复系统缺失存储访问框架时，使用自定义路径备份/恢复时崩溃的问题</p>
<p>这里捕获了异常（不直接崩溃），加上了提醒。但实际问题出于系统缺失，所以没法根本上解决。<strong>需要检查系统完整性（更新或者重新安装系统），或者使用默认路径。</strong></p>
</li>
<li><p>【修复】修复当放弃事项的时候很罕见的崩溃问题</p>
</li>
<li><p>【修复】修复当成就解锁动画弹出时很罕见的崩溃问题</p>
</li>
</ol>
<p><strong>1.68.2（2019/12/05）</strong></p>
<ol>
<li>【功能】备份升级：备份现在支持备份商店图片和偏好设置</li>
<li>【功能】计数事项奖励调整：计数事项的经验值奖励现在会根据次数增倍（最高6倍）</li>
<li>【优化】卡片优化：事项卡片部分视觉优化</li>
<li>【优化】团队详情里事项时间显示优化</li>
<li>【优化】计数事项点击的时候会自动将完成次数+1</li>
<li>【修复】修复偶现的备份恢复失败问题</li>
<li>【修复】修复在事项详情页面进行操作后，返回历史页面事项状态没更新的显示问题</li>
<li>【修复】修复兑换“坚持完成事项天数”的奖励显示是”耐力“，却实际是”力量“的问题</li>
<li>【修复】修复「程度级别介绍]页面中的lv4图标错误</li>
<li>【修复】修复某些清空下，提醒时间计算错误的问题</li>
</ol>
<p><strong>1.68.1（2019/11/25）</strong></p>
<ol>
<li>【优化】优化单次/多次事项的逾期逻辑。</li>
<li>【修复】修复历史页面点击日期的崩溃问题。</li>
<li>【修复】开启“统一事项颜色“后，修复选择重复频次的颜色错乱问题。</li>
</ol>
<p><strong>1.68.0（2019/11/24）</strong></p>
<ol>
<li>【功能】全新设计的成就系统：包含56种成就。</li>
<li>【功能】日历视图：总览你的事项完成情况，能快速浏览某一天的期限情况。</li>
<li>【功能】历史页面：改进了UI，增加了头部日期显示，并且增加了筛选清单功能。</li>
<li>【功能】金币详情页面：显示每一天的金币变动条目，并且汇总了每天的收入支出。</li>
<li>【功能】开放了目标次数编辑的限制。</li>
<li>【功能】金币惩罚系数：现在可以在“自定义设置”里设置金币的惩罚系数（默认是0）。</li>
<li>【功能】加入团队的时候，现在可以选择事项所属清单，并且可以把团队描述用作事项备注。</li>
<li>【功能】商店：搜索功能。</li>
<li>【功能】商店：购买商品时可直接选择是否使用。</li>
<li>【功能】倒计时：显示设置里新增“倒计时显示时间”的选项。</li>
<li>【优化】经验值获取动画改进：现在支持升多级的动画效果，并且修复了某些情况下动画显示不准的问题。</li>
<li>【优化】优化了「告示板」主页面右上角的菜单，将“显示xx事项”放入了新增的“筛选”按钮里。</li>
<li>【优化】事项详情页面的“事项完成次数”算法改进，不再是按事项内容匹配。</li>
<li>【优化】「告示板」页面的今日事项计数现在与所选清单绑定，不再是所有清单的。</li>
<li>【修复】修复当改动日期格式后，因为格式问题，新建团队失败的问题。</li>
<li>【修复】修复了底部导航栏导致的一些崩溃问题。</li>
<li>【修复】修复了夜间模式下，应用内语言设置不生效的问题。</li>
<li>【修复】修复某些情况下偶现的，商店页面“新建”按钮永远消失的问题。</li>
<li>【修复】团队时间计算问题修复，并且新建团队时候加上“首次结束时间”设置不正确的提醒。</li>
</ol>
<p><strong>1.67.4（2019/11/08）</strong></p>
<ol>
<li>【功能】“时刻”增加“优质”筛选项，保留有写下感想的动态和新建团队的动态。</li>
<li>【功能】查看用户团队的时候，可以筛选“进行中”和“已终止”的团队。</li>
<li>【功能】增加重要程度和困难程度的四个级别的描述。（入口是新建事项页面的奖励设置卡片右方问号。</li>
<li>【优化】团队数量现在显示的是进行中的团队数量。</li>
<li>【优化】优化夜间模式下，一些页面的颜色显示。</li>
<li>【优化】优化一些图片资源内存消耗大的问题。</li>
<li>【优化】删除历史记录增加二次确认对话框。</li>
<li>【优化】商品描述改为可多行输入，并且优化了商品描述的显示。</li>
<li>【修复】修复在”所有清单“情况下编辑事项，自动修改为”默认清单”的问题。</li>
<li>【修复】修复一个底部导航栏导致的崩溃问题。</li>
<li>【修复】修复“单次”团队任务会有两次的问题。</li>
</ol>
<p><strong>1.67.3（2019/10/28）</strong></p>
<ol>
<li>【优化】现在你可以为不同清单分别设置排序、分类条件。</li>
<li>【修复】修复一个告示板页面的崩溃问题。</li>
<li>【修复】修复引导页的状态栏颜色异常问题。</li>
<li>【修复】修复成就提示框被遮挡的问题。</li>
</ol>
<p><strong>1.67.2（2019/10/25）</strong></p>
<ol>
<li><p>【功能】备份和恢复功能现支持自定义路径。</p>
</li>
<li><p>【优化】捐赠增加微信渠道，以及增加了查看捐赠名单的功能。</p>
</li>
<li><p>【优化】优化用户详细信息页面的显示问题。</p>
</li>
<li><p>【修复】优化达成成就的提示框显示位置异常的问题。</p>
</li>
<li><p>【修复】修复当旋转手机屏幕，会导致步数统计异常的问题。</p>
</li>
</ol>
<p><strong>1.67.1（2019/10/22）</strong></p>
<ol>
<li>【功能】选择图片新增从文件选择器中选择。</li>
<li>【优化】优化新建计数事项时的输入框显示。</li>
<li>【优化】优化了计数事项填写已完成次数的光标位置。</li>
<li>【优化】优化了仓库使用物品的次数的光标位置。</li>
<li>【修复】修复了时刻、用户、团队页面中动态的图片错乱问题。</li>
<li>【修复】修复选择图片时因权限问题导致的崩溃问题，并且现在会提示更换选择图片的方式。</li>
<li>【修复】修复完成事项时旋转屏幕导致的崩溃问题。</li>
<li>【服务器】暂时取消了发表动态时的敏感词过滤。因为现在用的网上的词库不合理，如果遇到不合理的情况麻烦反馈~我们会尽快修改词库。</li>
</ol>
<p><strong>1.67.0（2019/10/20）</strong></p>
<ol>
<li>【功能】新增事项类型：计数事项。</li>
<li>【功能】皮肤系统：显示设置里增加主题颜色设置，预设了18种主题色。</li>
<li>【功能】批量购买和使用：商店购买和仓库使用物品现在支持设置数量。</li>
<li>【功能】金币统计：统计页面增加金币获取量/使用量的统计图表。</li>
<li>【功能】用户的属性等级：现在可以在用户个人详情页面查看用户的属性等级、性别、地址等信息。</li>
<li>【功能】清空金币：现在你能将金币重置为0。</li>
<li>【功能】应用内反馈：关于界面新增应用内反馈功能。</li>
<li>【功能】团队设置优化：现在可以设置团队任务的结束日期了，并且改进了事项时间的计算方式，持续时间不再是一天内。</li>
<li>【优化】新建团队的截止时间改为可选项。</li>
<li>【优化】任务卡片显示金币数量。</li>
<li>【优化】稍后阅读备注优化：自动去除备注中与事项内容重复的部分。</li>
<li>【优化】将“统一事项颜色为蓝色”改为“统一为主题色”。</li>
<li>【修复】修复桌面小部件有时不能完成已经开始事项的问题。</li>
<li>【修复】修复事项详情中团队任务时间显示不正确的问题。</li>
<li>【修复】尝试修复Smartisan OS选择图片时的权限崩溃问题（未验证）</li>
<li>【修复】修复Android8.0可能导致的输入框崩溃问题</li>
<li>【修复】修复设置为日历后，取消日历提醒权限导致的崩溃问题。</li>
</ol>
<p><strong>1.66.1（2019/9/27）</strong></p>
<ol>
<li>【优化】将“紧迫程度”的文案变更为“重要程度”</li>
<li>【修复】修复“告示板”页面长按弹出菜单时，页面自动滚动的问题。</li>
<li>【修复】修复新建团队的时候，开始时间和结束时间设置无效的问题。</li>
<li>【修复】修复“默认不发表团队动态”初次设置不生效的问题。</li>
<li>【修复】修复查询已加入团队列表、关注列表、粉丝列表的一些问题。</li>
</ol>
<a id="more"></a>
<p><strong>1.66.0 （2019/9/25）</strong></p>
<ol>
<li>【功能】团队现在支持设置金币（范围限制0-99）</li>
<li>【功能】本地和团队现在支持设置随机金币</li>
<li>【功能】商店增加设置：自动使用购买的物品、贷款金额设置</li>
<li>【优化】属性升级增加提示，部分图标和颜色优化，事项卡片间隙改小</li>
<li>【优化】将正倒序选项移入“排序”选项里，并且增加现在使用的排序方式提示</li>
<li>【优化】优化团队事项的获取逻辑，增加获取时的提示，以及获取后自动刷新列表</li>
<li>【优化】标题栏增加自动收缩，增大可视面积</li>
<li>【优化】优化页面的加载逻辑，加快加载速度</li>
<li>【修复】修复可完成时间的错误显示</li>
<li>【修复】修复新增事项里的选择清单的“默认清单”名称显示不正确的问题</li>
</ol>
<p><strong>1.65.1 （2019/9/13）</strong></p>
<ol>
<li>【优化】桌面小部件增加显示“多次”事项的每日完成次数</li>
<li>【修复】Kotlin升级导致的一个严重崩溃问题</li>
<li>【修复】告示板列表刷新的一个崩溃问题</li>
</ol>
<p><strong>1.65.0 （2019/9/10）</strong></p>
<ol>
<li><p>【功能】稍后阅读：通过其他应用的分享功能（如知乎、微博、浏览器等）快速建立“稍后阅读事项”。</p>
<p>同时，事项备注中的链接现在支持点击调起浏览器。</p>
</li>
<li><p>【功能】自定义经验值惩罚倍数，可设置 0 - 5.0 倍。</p>
</li>
<li><p>【功能】商店、仓库的排序系统。（因为遇到了一些问题，仓库暂不支持拼音排序）</p>
</li>
<li><p>【功能】现在可以点击选择紧迫程度和困难程度了。</p>
</li>
<li><p>【功能】事项详情页面加上该事项完成总次数。</p>
</li>
<li><p>【功能】“多次”事项添加每天完成次数显示。</p>
</li>
<li><p>【优化】取消了状态页面的波浪动画和相应选项，该动画即便不播放也会消耗大量性能。</p>
</li>
<li><p>【优化】完成、放弃、删除事项后，自动取消该次事项的提醒。</p>
</li>
<li><p>【优化】优化社区搜索不到相应团队时的显示。</p>
</li>
<li><p>【优化】社区页面的新增按钮也添加自动隐藏功能，另外页面切换时会重新显示该按钮。</p>
</li>
<li><p>【优化】当选择的属性少于3个的时候，任务卡片不合理的间距修复。</p>
</li>
<li><p>【优化】优化了一些图标显示。</p>
</li>
<li><p>【修复】修复“事项详情”页面、“我的”页面不会及时刷新的问题。（修改团队信息现在还有这个问题，下个版本修复）</p>
</li>
<li><p>【修复】修复部分Android版本应用内语言修改不生效的问题。</p>
</li>
<li><p>【修复】修复了一两个可能的崩溃问题。</p>
</li>
</ol>
<p><strong>1.64.3 （2019/8/30）</strong></p>
<ol>
<li>修复完成/放弃/删除事项后，立刻进行变更清单/排序等操作引起的崩溃问题。</li>
<li>优化社区的页面加载逻辑。</li>
</ol>
<p><strong>1.64.2 （2019/8/29）</strong></p>
<ol>
<li>修复两个比较严重的崩溃问题</li>
<li>修复逾期事项的逾期时间显示问题，应该为期限时间</li>
<li>修复逾期事项设为「已经完成」不会增加金币的问题</li>
<li>修复新增事项里，选择清单的时，不能正确显示更改后的名字问题</li>
</ol>
<p><strong>1.64.1 （2019/8/28）</strong></p>
<ol>
<li>增加编辑商品功能，修复商品描述不生效的问题。</li>
<li>增加删除仓库记录功能，修复仓库记录时间不显示日期的问题</li>
<li>商店和统计对调了入口</li>
<li>商店页面滑动时自动隐藏“新增”按钮，增加点击tab回到最顶功能</li>
<li>优化计步统计</li>
<li>修复已建立事项的提醒时间/期限时间不能置空保存的问题</li>
</ol>
<p><strong>1.64.0 （2019/8/23）</strong></p>
<ol>
<li><p>全新的金币&amp;商店&amp;仓库激励体系：<br>管理个人商店，上架商品（自己想要的奖励），设置价格（奖励获取的代价）</p>
<p>完成事项获得金币奖励，前往商店购买商品（获取奖励），然后在仓库中使用你的商品吧~</p>
</li>
<li><p>新增放弃事项时的经验值损失提示</p>
</li>
<li><p>修复团队搜索、计步统计问题</p>
</li>
<li><p>统计页面的统计范围从7天调整为30天</p>
</li>
<li><p>一些布局优化，修复一些罕见崩溃。</p>
</li>
</ol>
<p><strong>注：</strong>金币现在仅本地事项支持，团队事项暂时不支持。后续会继续完善金币功能。</p>
<p><strong>1.63.0（2019/8/11）</strong></p>
<ol>
<li>增加系统日历提醒机制（可在事项设置中更换）</li>
<li>增加清空经验值的功能</li>
<li>增加删除已发表的动态功能（在个人主页长按动态）</li>
<li>优化一些界面显示</li>
</ol>
<p><strong>1.62.3（2019/8/6）</strong></p>
<ol>
<li>采用新的崩溃反馈方式。</li>
<li>修复社区页面重复加载的问题。</li>
<li>修复一个获取经验值时的崩溃问题。</li>
</ol>
<p><strong>1.62.2</strong></p>
<ol>
<li>设置里增加自动检测更新功能。</li>
<li>修复[用户]页面的点赞操作失败的问题。</li>
</ol>
<p><strong>1.62.1</strong></p>
<ol>
<li>修复完成事项时可能崩溃的问题。</li>
</ol>
<p><strong>1.62.0</strong></p>
<ol>
<li>社区动态增加点赞功能</li>
<li>在「我的」页面可以将收获的点赞数兑换成魅力经验值</li>
<li>在「我的」页面可以将连续完成事项天数兑换成耐力经验值。</li>
<li>社区中的「时刻」页面添加自动过滤功能。</li>
<li>社区页面可以点击Tab回到最顶了。</li>
<li>修复一个因网络问题引起的崩溃问题。</li>
<li>性能优化，文案更改。</li>
</ol>
<p><strong>1.61.0</strong></p>
<ol>
<li>新增夜间模式。</li>
<li>新增「历史」页面的日期筛选功能。</li>
<li>新增「特性」页面展示更新内容和未来计划。</li>
<li>「显示设置」页面新增更改日期格式的设置。</li>
<li>待办事项页面滚动时，自动隐藏新增事项按钮。</li>
<li>修复部分Android版本应用内修改语言无效的问题。</li>
<li>修复暖启动时短暂黑屏，细节、性能优化。</li>
</ol>
<p><strong>1.60.8</strong></p>
<ol>
<li>修复因为混淆导致登录界面闪退的问题。</li>
</ol>
<p><strong>1.60.7</strong></p>
<ol>
<li>现支持重命名默认清单。</li>
<li>修复有时候图标显示不出来的问题。</li>
<li>优化提交崩溃报告的对话框。</li>
<li>采用混淆优化应用体积，提高运行效率。</li>
<li>部分界面开始采用MVP架构重构。</li>
</ol>
<p><strong>1.60.6</strong></p>
<ol>
<li>修复新建事项时候“开始时间数据异常”的问题</li>
<li>将隐藏事项页面头部的事项计数卡片改为持久性的，不再是临时性的了。</li>
<li>大幅度优化了主页、状态、历史等页面的性能表现。</li>
</ol>
<p><strong>1.60.5</strong></p>
<ol>
<li>修复逾期事项的清单分类可能变回默认清单的问题。</li>
</ol>
<p><strong>1.60.4</strong></p>
<ol>
<li><p>增加应用内语言更改。</p>
<p>设置(Settings)→显示设置(Display Settings)→语言设置(Language)</p>
</li>
<li><p>新建本地事项的开始时间新增了两个选项</p>
<ul>
<li>自动调整（根据重复频次）</li>
<li>期限当天</li>
<li>自定义</li>
</ul>
</li>
<li><p>现在支持隐藏事项页面头部的事项计数卡片。相应的也在右上角菜单加入了重新显示的选项。</p>
</li>
<li><p>修复了当编辑事项时，修改所属清单不生效的问题。</p>
</li>
</ol>
<p><strong>1.60.3</strong></p>
<ol>
<li>修复数个崩溃问题。</li>
</ol>
<p><strong>1.60.2</strong></p>
<ol>
<li>修复一些文本显示</li>
</ol>
<p><strong>1.60.1</strong></p>
<ol>
<li>修复了默认情况下，桌面小部件设置「隐藏非今日事项」显示勾选，实际未生效的问题。</li>
</ol>
<p><strong>1.60</strong></p>
<ol>
<li>添加了英文翻译</li>
<li>新增了 Google 授权登录</li>
<li>界面微调</li>
</ol>
<p><strong>1.59c</strong></p>
<ol>
<li>修复了提醒不正常的问题。</li>
<li>修复了在一些情况下，新建事项点击没反应的问题。</li>
</ol>
<p><strong>1.59b</strong></p>
<ol>
<li>修复 Android P 在桌面小部件完成时可能崩溃的问题。</li>
</ol>
<p><strong>1.59a</strong></p>
<ol>
<li>修复v1.59的桌面小部件完成时可能崩溃的问题。  </li>
</ol>
<p><strong>1.59</strong></p>
<ol>
<li>现在支持滑动完成事项了。</li>
<li>新增「统一事项颜色」设置：将所有类型的事项统一为蓝色。</li>
<li>完成事项时底部弹框提供「撤销」选项。</li>
<li>「新建事项」页面可以选择「所属清单」了。</li>
<li>「排序」新增按「重复频次」排序选项。</li>
<li>优化了桌面小部件完成事项的实现方式，可能解决了一些问题。</li>
<li>「关于」页面新增「通过Android绿色应用公约认证」的链接。</li>
<li>现在新建事项时可以不选择相关属性，直接新建普通事项了。</li>
</ol>
<p><strong>1.58c</strong></p>
<ol>
<li>为了提前适配Android Q和遵守绿色应用公约，去掉了对读写外部存储权限的使用依赖。</li>
<li>修复放弃事项会让目标完成次数+1的逻辑问题。</li>
<li>修复选择艾宾浩斯记忆法的事项缺少最后一天的问题。（需要新建事项）</li>
<li>修复不能把事项编辑为艾宾浩斯记忆法的事项的问题。</li>
<li>修复编辑个人资料的一个崩溃问题。</li>
</ol>
<p><strong>1.58b</strong></p>
<ol>
<li>修复选择艾宾浩斯记忆法的事项开始时间异常的问题。</li>
<li>修复事项详情页面目标次数计数有误的问题。</li>
</ol>
<p><strong>1.58a</strong></p>
<ol>
<li>修复「状态」页面的步数兑换经验值“领取”按钮不可点击的问题。</li>
<li>修复删除历史记录后，「我的」的事项统计数据不会相应变化的问题。</li>
</ol>
<p><strong>1.58</strong></p>
<ol>
<li>增加事项详情页面。（可点击待办事项卡片或者历史页面的记录查看）</li>
<li>优化当事项备注过长时，待办事项卡片的显示效果。</li>
<li>优化大部分对话框的显示效果。</li>
<li>优化设置页面的显示效果，并且增加了选项说明文字。</li>
<li>新建待办事项页面，增加了各个设置项的指引说明。并且属性下方加上了名字。</li>
<li>新手指引增加清单和主页右上角的菜单选项（时间范围选择）的说明内容。</li>
<li>修复了当团队事项逾期后，自动领取下一次团队事项不会刷新页面的问题。</li>
<li>更换了新图标。</li>
<li>支持库迁移到了AndroidX。</li>
<li>修复了一个桌面小部件完成事项时的问题。</li>
<li>修复了一些崩溃、逻辑和内存泄露问题。</li>
</ol>
<p><strong>1.57a</strong></p>
<ol>
<li>修复当事项名较长时候的一些显示问题。</li>
</ol>
<p><strong>1.57</strong></p>
<ol>
<li>添加了「隐藏计步」的设置项。</li>
<li>调整了重复事项的处理逻辑：每次事项的持续时间将对应上重复频次。</li>
<li>修复了编辑事项的一些问题。</li>
<li>修复了两个罕见的崩溃问题。</li>
<li>去掉了手动输入计步数据的步数限制。</li>
<li>颜色微调。</li>
</ol>
<p><strong>1.56</strong></p>
<ol>
<li><p>重复频率增加”艾宾浩斯记忆法”选项。</p>
<p>（依次重复频率为当天→1天后→2天后→4天后→7天后→15天后）</p>
</li>
<li><p>优化待办事项卡片和桌面小部件的时间显示。</p>
</li>
<li><p>新增了本地数据的备份/恢复功能。</p>
</li>
<li><p>修复重置“团队截止加入日期”时的崩溃问题。</p>
</li>
<li><p>修复了一些情况下标题栏菜单错乱的问题。</p>
</li>
<li><p>一些界面优化。</p>
</li>
</ol>
<p><strong>1.55</strong></p>
<ol>
<li>修改了“放弃”操作的逻辑：不再会中断重复事项。</li>
<li>修复了编辑事项时候的“重置”按钮显示异常。</li>
<li>桌面小部件添加圆角。</li>
<li>修复服务器宕机时的程序崩溃，并且添加了提示。</li>
<li>服务器修复了 emoji 问题，在昵称、团队、动态等地方都能使用 emoji 了。（代价是丢失了一天的数据orz）<br> 因为一些意外，3月3号服务器停止了服务近10个小时。<br> 并且丢失了一小段时间的团队数据，很抱歉<em>(:з」∠)</em>。<br> 丢失的部分团队事项应该无法完成，2号后第一次登陆的用户可能要重新登陆一遍，麻烦了。</li>
</ol>
<p><strong>1.54</strong></p>
<ol>
<li>修复因为网络原因没领取到下一次事项的问题（上次判断写错了orz）</li>
<li>修复一个崩溃问题</li>
<li>一些界面微调</li>
</ol>
<p><strong>1.53</strong></p>
<ol>
<li>「清单」新增了一个「所有清单」：可以查看所有清单的事项。</li>
<li>「提醒时间」加入了三个预设选项：期限前10分钟、期限前30分钟、期限前1小时。</li>
<li>修复桌面小部件只显示当前清单的问题。</li>
<li>「待办事项」和「状态」页面布局优化，理论上适配了任意宽度。（解决了当最低宽度为320dp的显示问题）</li>
<li>修复 QQ 授权登陆时获取失败昵称、头像的问题。</li>
<li>步数兑换力量经验值的奖励数值调低。</li>
<li>修复了右上角菜单错乱的问题。</li>
<li>一些页面的小修小改，属性图标进行了微调。</li>
<li>偷偷地加了个「捐赠」功能。</li>
</ol>
<p><strong>1.52</strong><br>功能：</p>
<ol>
<li>「清单」分类功能：</li>
</ol>
<ul>
<li>新建清单</li>
<li>重命名清单</li>
<li>删除清单</li>
<li>事项的「移至」功能。</li>
</ul>
<ol start="2">
<li>「历史」页面新增将逾期事项「设为完成」的功能（点击时间会弹出选项）</li>
</ol>
<p>优化：</p>
<ol>
<li>优化了对团队事项逾期的处理逻辑，防止出现因为网络原因没领取到下一次事项的情况。</li>
<li>优化了当团队名太长时，动态的布局显示。</li>
<li>修复了当重复点期限日期的「设置时间」时触发的一个问题。</li>
<li>优化了对登陆授权失效的处理。</li>
<li>修复了发表动态时的一个错误提示。</li>
</ol>
<p><strong>1.51</strong></p>
<p>功能：</p>
<ol>
<li>新增「期限日期」的「具体时间」设置，现在可以建立如“每天的4:00到第二天的4:00”周期事项。</li>
<li>当选择「重复频次」为「每日」的时候，新增了一个设置「星期几忽略」的功能。即可以设置如“每周一到周三”的周期事项。</li>
<li>设置里新增了「默认不发表团队动态」的选择项</li>
<li>「社区」的「时刻」新增了范围的选择，可以选择「所有」浏览社区的所有创建和完成事项的动态。</li>
<li>「排序」新增按拼音字母排序的功能。</li>
</ol>
<p>优化：</p>
<ol>
<li>待办事项页面新增了移除和新增的动画效果。</li>
<li>修复了完成事项后，桌面小部件没有立即刷新的问题。</li>
<li>修复了近七天步数统计柱形图的数据显示不全的问题。</li>
<li>修复了经验值收支详情页面的文字重叠问题。</li>
<li>「关于」页面的「检测更新」功能，检测到新的更新时，会弹出一个对话框说明更新内容，询问是否更新。</li>
<li>「自动重做逾期事项」加上了对单次事项的支持。</li>
<li>还有一些页面的小修小改和代码优化。</li>
</ol>
<p><strong>1.50</strong></p>
<ol>
<li>新增「统计」页面（替换掉原来的「消息」模块）：可以查看近七天事项完成数、经验值获取、经验值分布、每日步数等统计数据。</li>
<li>新增了「经验值收支详情」页面，可以查看经验值的变动详情。</li>
<li>新增了本地事项的「完成奖励」功能，可以自设事项的完成奖励。</li>
<li>新增了「手动输入每日步数」的功能。</li>
<li>优化了各个页面的工具栏标题显示。</li>
<li>优化了「历史」的加载方式，提升了加载速度。</li>
<li>优化了小部件的自动刷新间隔。</li>
<li>“登陆”→ “登录”。</li>
</ol>
<p><strong>1.49</strong></p>
<ol>
<li>紧急修复一个逾期事项重做的逻辑bug</li>
<li>增加了历史页面中记录的删除功能</li>
</ol>
<p><strong>1.48</strong></p>
<ol>
<li>增加了【隐藏社区和消息模块】的设置项</li>
<li>修复了【自动重做逾期事项】的一个逻辑问题：可能把团队事项当做本地事项来重做。</li>
<li>修复了历史页面的逾期事项不显示【重做】按钮的问题</li>
</ol>
<p><strong>1.47</strong></p>
<ol>
<li>增加了事项的【开始时间】选项</li>
<li>增加了事项的【显示所有事项】、【显示今日事项】、【显示近七天事项】的选项</li>
<li>增加了简单的【排序】功能（按开始时间、期限时间、创建时间或者经验值排序）</li>
<li>优化了新建事项的界面</li>
<li>修复了一个登陆后打开社区还要求登陆的问题</li>
<li>修复了社区的一个崩溃问题</li>
</ol>
<p><strong>1.46</strong></p>
<ol>
<li>增加了简单的新手指引功能</li>
<li>增加了一个默认开启的“自动重做逾期事项”的选项</li>
<li>新增事项页面增加了容错处理：选择重复周期后，会默认期限日期为当天</li>
<li>修复了重做时，期限日期不正确逻辑问题；以及在历史页面的“重做”按钮的显示逻辑问题</li>
<li>修复了在有事项逾期情况下，小部件可能导致应用崩溃的问题</li>
<li>修复了登陆界面的一个崩溃问题（还优化了按钮的字体位置）</li>
<li>修复了终止团队时的一个崩溃问题</li>
</ol>
<p><strong>1.45</strong></p>
<ol>
<li>增加了编辑团队的功能</li>
<li>增加了小部件的【白色字体和图标】的设置选项</li>
<li>增加了一个“常见问题”的侧边栏入口</li>
<li>优化了加载中和加载失败的图片显示</li>
<li>修复了一个可能导致团队头像为空的问题</li>
<li>修复了一个“退出登录”可能引起的问题</li>
</ol>
<p><strong>1.44</strong></p>
<ol>
<li>【功能】本地事项可以设置事项「目标次数」了</li>
<li>【优化】简单适配了一下全面屏</li>
<li>【优化】优化了小部件的隐藏事项的逻辑（从隐藏所有未开始事项改成隐藏非今日的事项）</li>
<li>【优化】默认不开启“状态”页面的波浪动画（开启可能导致页面卡顿和崩溃（？)）</li>
<li>【优化】修复了一个导致事项的字体颜色不正常的bug</li>
<li>【优化】排行榜可以直接进入个人主页</li>
</ol>
<p><strong>1.43</strong></p>
<ol>
<li>增加了小部件的【暗色主题】</li>
<li>增加了小部件的【隐藏未开始事项】的设置选项</li>
<li>修复了在完成团队事项、领取团队事项时，小部件不会自动刷新的问题</li>
</ol>
<p><strong>1.42</strong></p>
<ol>
<li><p><strong>桌面小部件</strong></p>
</li>
<li><p>优化了团队、动态列表的每次加载数量</p>
</li>
<li>稍微优化了计步器（只有步行检测传感器的时候也能计步了）</li>
<li>修复了单次和多次任务“重做”时崩溃的问题</li>
<li>修复了修改个人信息后，本地显示头像异常的问题</li>
</ol>
<p><strong>1.41:</strong></p>
<p>功能：</p>
<ol>
<li>（本地）可以自定义重复频次</li>
<li>增加了一个“默认重复事项”的选项</li>
</ol>
<p>其他：</p>
<ol>
<li>修复了成就页面的一个逻辑bug</li>
<li>修复了当服务器在维护时，打开社区可能会应用崩溃的问题</li>
<li>修复了一个引起新建团队时崩溃的问题（弹出错误提示）</li>
<li>一些页面的细节优化</li>
</ol>
<p><strong>1.40：</strong></p>
<ol>
<li>解决了Android P不能QQ登陆的问题（昵称暂不能含emoji，这个要等服务器端修复）</li>
<li>解决了动态文本显示不全的问题</li>
</ol>
]]></content>
      <categories>
        <category>项目</category>
        <category>人升Q&amp;A</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>人升开发日志#11 | 12/06 Android 桌面小部件</title>
    <url>/post/f5d060f4.html</url>
    <content><![CDATA[<p>制作小部件的途中也遇到了各种坑orz，而且网络上的各种文章都不详细，摸索了一两天才写完。</p>
<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>首先，直接使用AS新建一个APP WIDGET，进行各种配置。</p>
<p>之后如果想修改小部件的最低宽高可以参考这个表：</p>
 
<a id="more"></a>
<h1 id="关键代码"><a href="#关键代码" class="headerlink" title="关键代码"></a>关键代码</h1><p><strong>LifeUpWidget.kt</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onUpdate</span><span class="params">(context: <span class="type">Context</span>, appWidgetManager: <span class="type">AppWidgetManager</span>, appWidgetIds: <span class="type">IntArray</span>)</span></span> &#123;</span><br><span class="line">        <span class="comment">// There may be multiple widgets active, so update all of them</span></span><br><span class="line">        <span class="keyword">for</span> (appWidgetId <span class="keyword">in</span> appWidgetIds) &#123;</span><br><span class="line">            updateAppWidget(context, appWidgetManager, appWidgetId)</span><br><span class="line">            AppWidgetManager.getInstance(context).notifyAppWidgetViewDataChanged(appWidgetId, R.id.widget_list)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onEnabled</span><span class="params">(context: <span class="type">Context</span>)</span></span> &#123;</span><br><span class="line">        <span class="comment">// Enter relevant functionality for when the first widget is created</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDisabled</span><span class="params">(context: <span class="type">Context</span>)</span></span> &#123;</span><br><span class="line">        <span class="comment">// Enter relevant functionality for when the last widget is disabled</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onReceive</span><span class="params">(context: <span class="type">Context</span>, intent: <span class="type">Intent</span>)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onReceive(context, intent)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (intent.hasExtra(WIDGET_IDS_KEY)) &#123;</span><br><span class="line">            <span class="keyword">val</span> ids = intent.extras.getIntArray(WIDGET_IDS_KEY)</span><br><span class="line">            <span class="keyword">this</span>.onUpdate(context, AppWidgetManager.getInstance(context), ids)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (intent.getBooleanExtra(<span class="string">&quot;isShowToast&quot;</span>, <span class="literal">false</span>))</span><br><span class="line">                ToastUtils.showShortToast(<span class="string">&quot;成功刷新&quot;</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (intent.action == FINISH_TASK) &#123;</span><br><span class="line">            <span class="keyword">val</span> extras = intent.extras</span><br><span class="line">            <span class="keyword">if</span> (extras != <span class="literal">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (extras.getBoolean(<span class="string">&quot;canBeFinish&quot;</span>, <span class="literal">false</span>)) &#123;</span><br><span class="line">                    <span class="keyword">val</span> taskId = extras.getLong(<span class="string">&quot;taskId&quot;</span>)</span><br><span class="line">                    <span class="keyword">val</span> teamId = extras.getLong(<span class="string">&quot;teamId&quot;</span>)</span><br><span class="line">                    <span class="keyword">val</span> item = todoService.getATodoItem(taskId)</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (teamId == -<span class="number">1L</span>) &#123;</span><br><span class="line">                        todoService.finishTodoItem(taskId)</span><br><span class="line">                        ToastUtils.showShortToast(<span class="string">&quot;成功完成事项&quot;</span>)</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (item?.taskFrequency != <span class="number">0</span>)</span><br><span class="line">                            todoService.repeatTask(taskId)</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">val</span> activityVO = ActivityVO()</span><br><span class="line">                        item?.let &#123;</span><br><span class="line">                            teamNetworkImpl.finishTeamTask(it, activityVO)</span><br><span class="line">                            ToastUtils.showShortToast(<span class="string">&quot;成功完成事项&quot;</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    ToastUtils.showShortToast(<span class="string">&quot;尚未到开始时间&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                WidgetUtils.updateWidgets(context)</span><br><span class="line"><span class="comment">/*                // Notify the widget that the list view needs to be updated.</span></span><br><span class="line"><span class="comment">                val mgr = AppWidgetManager.getInstance(context)</span></span><br><span class="line"><span class="comment">                val cn = ComponentName(context, LifeUpWidget::class.java)</span></span><br><span class="line"><span class="comment">                mgr.notifyAppWidgetViewDataChanged(mgr.getAppWidgetIds(cn),</span></span><br><span class="line"><span class="comment">                        R.id.widget_list)*/</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">val</span> WIDGET_IDS_KEY = <span class="string">&quot;lifeupwidgetidskey&quot;</span></span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">val</span> FINISH_TASK = <span class="string">&quot;net.sarasarasa.lifeup.action.FINISH_TASK&quot;</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">val</span> todoService = TodoServiceImpl()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">internal</span> <span class="function"><span class="keyword">fun</span> <span class="title">updateAppWidget</span><span class="params">(context: <span class="type">Context</span>, appWidgetManager: <span class="type">AppWidgetManager</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                                     appWidgetId: <span class="type">Int</span>)</span></span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// Construct the RemoteViews object</span></span><br><span class="line">            <span class="keyword">val</span> views = RemoteViews(context.packageName, R.layout.life_up_widget)</span><br><span class="line">            views.setTextViewText(R.id.appwidget_text, <span class="string">&quot;今日事项 0/0&quot;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">val</span> intent = Intent(context, LifeUpRemoteViewsService::<span class="keyword">class</span>.java)</span><br><span class="line">            intent.putExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, appWidgetId)</span><br><span class="line"></span><br><span class="line">            views.setRemoteAdapter(R.id.widget_list, intent)</span><br><span class="line">            views.setEmptyView(R.id.widget_list, R.id.tv_empty)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">val</span> finishTaskIntent = Intent(FINISH_TASK)</span><br><span class="line">            finishTaskIntent.setClass(context, LifeUpWidget::<span class="keyword">class</span>.java)</span><br><span class="line">            <span class="keyword">val</span> pendingIntent = PendingIntent.getBroadcast(context, <span class="number">200</span>, finishTaskIntent, PendingIntent.FLAG_UPDATE_CURRENT)</span><br><span class="line">            views.setPendingIntentTemplate(R.id.widget_list, pendingIntent)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">val</span> startActivityIntent = Intent(context, MainActivity::<span class="keyword">class</span>.java)</span><br><span class="line">            <span class="keyword">val</span> startActivityPendingIntent = PendingIntent.getActivity(context, <span class="number">0</span>, startActivityIntent, PendingIntent.FLAG_UPDATE_CURRENT)</span><br><span class="line">            views.setOnClickPendingIntent(R.id.iv_home, startActivityPendingIntent)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">val</span> addItemIntent = Intent(context, AddToDoItemActivity::<span class="keyword">class</span>.java)</span><br><span class="line">            <span class="keyword">val</span> addItemPendingIntent = PendingIntent.getActivity(context, <span class="number">0</span>, addItemIntent, PendingIntent.FLAG_UPDATE_CURRENT)</span><br><span class="line">            views.setOnClickPendingIntent(R.id.iv_add, addItemPendingIntent)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">val</span> man = AppWidgetManager.getInstance(context)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">val</span> ids = man.getAppWidgetIds(</span><br><span class="line">                    ComponentName(context, LifeUpWidget::<span class="keyword">class</span>.java))</span><br><span class="line">            <span class="keyword">val</span> refreshIntent = Intent()</span><br><span class="line">            refreshIntent.action = AppWidgetManager.ACTION_APPWIDGET_UPDATE</span><br><span class="line">            refreshIntent.putExtra(LifeUpWidget.WIDGET_IDS_KEY, ids)</span><br><span class="line">            refreshIntent.putExtra(<span class="string">&quot;isShowToast&quot;</span>, <span class="literal">true</span>)</span><br><span class="line">            <span class="keyword">val</span> refreshPendingIntent = PendingIntent.getBroadcast(context, <span class="number">199</span>, refreshIntent, PendingIntent.FLAG_UPDATE_CURRENT)</span><br><span class="line">            views.setOnClickPendingIntent(R.id.iv_refresh, refreshPendingIntent)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">val</span> finishCnt = todoService.getTodayFinishCount()</span><br><span class="line">            <span class="keyword">val</span> taskCnt = todoService.getTodayTaskCount()</span><br><span class="line">            views.setTextViewText(R.id.appwidget_text, <span class="string">&quot;今日事项 <span class="subst">$&#123;finishCnt&#125;</span>/<span class="subst">$&#123;taskCnt&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// Instruct the widget manager to update the widget</span></span><br><span class="line">            appWidgetManager.updateAppWidget(appWidgetId, views)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p><strong>LifeUpRemoteViewsService.Kt</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> net.sarasarasa.lifeup.service</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent</span><br><span class="line"><span class="keyword">import</span> android.widget.RemoteViewsService</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LifeUpRemoteViewsService</span> : <span class="type">RemoteViewsService</span></span>() &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onGetViewFactory</span><span class="params">(intent: <span class="type">Intent</span>?)</span></span>: RemoteViewsFactory &#123;</span><br><span class="line">        <span class="keyword">return</span> LifeUpRemoteViewsFactory(<span class="keyword">this</span>.applicationContext, intent)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>LifeUpRemoteViewsFactory.Kt</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> net.sarasarasa.lifeup.service</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context</span><br><span class="line"><span class="keyword">import</span> android.content.Intent</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.view.View</span><br><span class="line"><span class="keyword">import</span> android.widget.RemoteViews</span><br><span class="line"><span class="keyword">import</span> android.widget.RemoteViewsService</span><br><span class="line"><span class="keyword">import</span> net.sarasarasa.lifeup.R</span><br><span class="line"><span class="keyword">import</span> net.sarasarasa.lifeup.converter.TodoItemConverter</span><br><span class="line"><span class="keyword">import</span> net.sarasarasa.lifeup.fragment.LifeUpWidget</span><br><span class="line"><span class="keyword">import</span> net.sarasarasa.lifeup.fragment.LifeUpWidget.Companion.FINISH_TASK</span><br><span class="line"><span class="keyword">import</span> net.sarasarasa.lifeup.models.TaskModel</span><br><span class="line"><span class="keyword">import</span> net.sarasarasa.lifeup.service.impl.TodoServiceImpl</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat</span><br><span class="line"><span class="keyword">import</span> java.util.*</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LifeUpRemoteViewsFactory</span></span>(context: Context, intent: Intent?) : RemoteViewsService.RemoteViewsFactory &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> mList = ArrayList&lt;TaskModel&gt;()</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> mContext = context</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> todoService = TodoServiceImpl()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">()</span></span> &#123;</span><br><span class="line">        mList.clear()</span><br><span class="line">        mList.addAll(todoService.getUncompletedTodoList())</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getLoadingView</span><span class="params">()</span></span>: RemoteViews? &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getItemId</span><span class="params">(position: <span class="type">Int</span>)</span></span>: <span class="built_in">Long</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> position.toLong()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDataSetChanged</span><span class="params">()</span></span> &#123;</span><br><span class="line">        mList.clear()</span><br><span class="line">        mList.addAll(todoService.getUncompletedTodoList())</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">hasStableIds</span><span class="params">()</span></span>: <span class="built_in">Boolean</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getViewAt</span><span class="params">(position: <span class="type">Int</span>)</span></span>: RemoteViews? &#123;</span><br><span class="line">        <span class="keyword">if</span> (position &lt; <span class="number">0</span> || position &gt;= mList.size)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">val</span> taskModel = mList[position]</span><br><span class="line">        <span class="keyword">val</span> rv = RemoteViews(mContext.packageName, R.layout.item_widget_list)</span><br><span class="line">        <span class="keyword">var</span> canBeFinish = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">        rv.setTextViewText(R.id.tv_title, taskModel.content)</span><br><span class="line">        rv.setTextViewText(R.id.tv_exp, taskModel.expReward.toString() + <span class="string">&quot;经验值&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">val</span> cal = Calendar.getInstance()</span><br><span class="line">        <span class="keyword">val</span> simpleDateFormat = SimpleDateFormat(<span class="string">&quot;yyyy/MM/dd&quot;</span>, Locale.getDefault())</span><br><span class="line">        <span class="keyword">val</span> dateAndTimeFormat = SimpleDateFormat(<span class="string">&quot;yyyy/MM/dd HH:mm&quot;</span>, Locale.getDefault())</span><br><span class="line">        <span class="keyword">val</span> isTeamTask = <span class="keyword">when</span> (taskModel.teamId) &#123;</span><br><span class="line">            -<span class="number">1L</span> -&gt; <span class="literal">false</span></span><br><span class="line">            <span class="keyword">else</span> -&gt; <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (cal.timeInMillis &lt; taskModel.startTime.time) &#123;</span><br><span class="line">            <span class="comment">//还没到开始时间的时候</span></span><br><span class="line">            rv.setViewVisibility(R.id.tv_time, View.VISIBLE)</span><br><span class="line">            rv.setViewVisibility(R.id.iv_time, View.VISIBLE)</span><br><span class="line">            rv.setTextViewText(R.id.tv_time, dateAndTimeFormat.format(taskModel.startTime) + <span class="string">&quot;开始  #&quot;</span> + TodoItemConverter.iFrequencyToTitleString(isTeamTask, taskModel.taskFrequency))</span><br><span class="line">            canBeFinish = <span class="literal">false</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//设置频次标识的颜色</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (taskModel.taskExpireTime != <span class="literal">null</span>) &#123;</span><br><span class="line">                rv.setViewVisibility(R.id.tv_time, View.VISIBLE)</span><br><span class="line">                rv.setViewVisibility(R.id.iv_time, View.VISIBLE)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (taskModel.teamId != -<span class="number">1L</span>) &#123;</span><br><span class="line">                    rv.setTextViewText(R.id.tv_time, dateAndTimeFormat.format(taskModel.endTime) + <span class="string">&quot;期限  #&quot;</span> + TodoItemConverter.iFrequencyToTitleString(isTeamTask, taskModel.taskFrequency))</span><br><span class="line">                &#125; <span class="keyword">else</span> rv.setTextViewText(R.id.tv_time, simpleDateFormat.format(taskModel.taskExpireTime) + <span class="string">&quot;期限  #&quot;</span> + TodoItemConverter.iFrequencyToTitleString(isTeamTask, taskModel.taskFrequency))</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                rv.setViewVisibility(R.id.tv_time, View.INVISIBLE)</span><br><span class="line">                rv.setViewVisibility(R.id.iv_time, View.INVISIBLE)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*        val extras = Bundle()</span></span><br><span class="line"><span class="comment">        taskModel.id?.let &#123; extras.putLong(&quot;taskId&quot;, it) &#125;</span></span><br><span class="line"><span class="comment">        val finishTaskIntent = Intent()</span></span><br><span class="line"><span class="comment">        finishTaskIntent.action = LifeUpWidget.FINISH_TASK</span></span><br><span class="line"><span class="comment">        finishTaskIntent.putExtras(extras)</span></span><br><span class="line"><span class="comment">        rv.setOnClickFillInIntent(R.id.btn,finishTaskIntent)*/</span></span><br><span class="line">        <span class="keyword">val</span> extras = Bundle()</span><br><span class="line">        taskModel.id?.let &#123; extras.putLong(<span class="string">&quot;taskId&quot;</span>, it) &#125;</span><br><span class="line">        extras.putLong(<span class="string">&quot;teamId&quot;</span>, taskModel.teamId)</span><br><span class="line">        extras.putBoolean(<span class="string">&quot;canBeFinish&quot;</span>, canBeFinish)</span><br><span class="line">        <span class="keyword">val</span> fillInIntent = Intent(FINISH_TASK)</span><br><span class="line">        fillInIntent.putExtra(<span class="string">&quot;NUMBER&quot;</span>, position)</span><br><span class="line">        fillInIntent.setClass(mContext, LifeUpWidget::<span class="keyword">class</span>.java)</span><br><span class="line">        fillInIntent.putExtras(extras)</span><br><span class="line">        rv.setOnClickFillInIntent(R.id.btn, fillInIntent)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> rv</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getCount</span><span class="params">()</span></span>: <span class="built_in">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mList.size</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getViewTypeCount</span><span class="params">()</span></span>: <span class="built_in">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDestroy</span><span class="params">()</span></span> &#123;</span><br><span class="line">        mList.clear()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>AndroidManifest.xml</strong></p>
<p>在application中加入：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.fragment.LifeUpWidget&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.appwidget.action.APPWIDGET_UPDATE&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;net.sarasarasa.lifeup.action.FINISH_TASK&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            &lt;meta-data</span><br><span class="line">                android:name=&quot;android.appwidget.provider&quot;</span><br><span class="line">                android:resource=&quot;@xml/life_up_widget_info&quot; /&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;service</span><br><span class="line">    android:name=&quot;.service.LifeUpRemoteViewsService&quot;</span><br><span class="line">    android:exported=&quot;false&quot;</span><br><span class="line">    android:permission=&quot;android.permission.BIND_REMOTEVIEWS&quot;&gt;<span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="坑点"><a href="#坑点" class="headerlink" title="坑点"></a>坑点</h1><h2 id="只支持一部分View"><a href="#只支持一部分View" class="headerlink" title="只支持一部分View"></a>只支持一部分View</h2><p>A RemoteViews object (and, consequently, an App Widget) can support the following layout classes:</p>
<ul>
<li><code>FrameLayout</code></li>
<li><code>LinearLayout</code></li>
<li><code>RelativeLayout</code></li>
<li><code>GridLayout</code></li>
</ul>
<p>And the following widget classes:</p>
<ul>
<li><code>AnalogClock</code></li>
<li><code>Button</code></li>
<li><code>Chronometer</code></li>
<li><code>ImageButton</code></li>
<li><code>ImageView</code></li>
<li><code>ProgressBar</code></li>
<li><code>TextView</code></li>
<li><code>ViewFlipper</code></li>
<li><code>ListView</code></li>
<li><code>GridView</code></li>
<li><code>StackView</code></li>
<li><code>AdapterViewFlipper</code></li>
</ul>
<p>如果使用其他VIew的话，直接显示不出来。</p>
<h2 id="WidgetProvier中设置ListView"><a href="#WidgetProvier中设置ListView" class="headerlink" title="WidgetProvier中设置ListView"></a>WidgetProvier中设置ListView</h2><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">val</span> FINISH_TASK = <span class="string">&quot;net.sarasarasa.lifeup.action.FINISH_TASK&quot;</span></span><br><span class="line"><span class="comment">//要在AndroidManifest中加上 &lt;action android:name=&quot;net.sarasarasa.lifeup.action.FINISH_TASK&quot; /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> views = RemoteViews(context.packageName, R.layout.life_up_widget)</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> intent = Intent(context, LifeUpRemoteViewsService::<span class="keyword">class</span>.java)</span><br><span class="line">intent.putExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, appWidgetId)</span><br><span class="line"></span><br><span class="line">views.setRemoteAdapter(R.id.widget_list, intent)</span><br><span class="line"></span><br><span class="line"><span class="comment">//这里的EmptyView指的是R.layout.life_up_widget的一个view，在ListView为空的时候才显示出来</span></span><br><span class="line"><span class="comment">//并不是单独的一个View</span></span><br><span class="line">views.setEmptyView(R.id.widget_list, R.id.tv_empty)</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果你的ListView要发送Intent的话，这里要设置IntentTemplate</span></span><br><span class="line"><span class="keyword">val</span> finishTaskIntent = Intent(FINISH_TASK)</span><br><span class="line">finishTaskIntent.setClass(context, LifeUpWidget::<span class="keyword">class</span>.java)</span><br><span class="line"><span class="keyword">val</span> pendingIntent = PendingIntent.getBroadcast(context, <span class="number">200</span>, finishTaskIntent, PendingIntent.FLAG_UPDATE_CURRENT)</span><br><span class="line">views.setPendingIntentTemplate(R.id.widget_list, pendingIntent)</span><br></pre></td></tr></table></figure>
<p>然后在LifeUpRemoteViewsFactory.Kt的<strong>getViewAt</strong>方法中</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> extras = Bundle()</span><br><span class="line">taskModel.id?.let &#123; extras.putLong(<span class="string">&quot;taskId&quot;</span>, it) &#125;</span><br><span class="line">extras.putLong(<span class="string">&quot;teamId&quot;</span>, taskModel.teamId)</span><br><span class="line">extras.putBoolean(<span class="string">&quot;canBeFinish&quot;</span>, canBeFinish)</span><br><span class="line"><span class="keyword">val</span> fillInIntent = Intent(FINISH_TASK)</span><br><span class="line">fillInIntent.putExtra(<span class="string">&quot;NUMBER&quot;</span>, position)</span><br><span class="line">fillInIntent.setClass(mContext, LifeUpWidget::<span class="keyword">class</span>.java)</span><br><span class="line">fillInIntent.putExtras(extras)</span><br><span class="line">rv.setOnClickFillInIntent(R.id.btn, fillInIntent)</span><br></pre></td></tr></table></figure>
<p>然后再在WidgetProvider的OnReceive中处理这个广播</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onReceive</span><span class="params">(context: <span class="type">Context</span>, intent: <span class="type">Intent</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.onReceive(context, intent)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (intent.action == FINISH_TASK) &#123;</span><br><span class="line">        <span class="comment">//Do something...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="刷新ListView的数据"><a href="#刷新ListView的数据" class="headerlink" title="刷新ListView的数据"></a>刷新ListView的数据</h2><ol>
<li><p>首先，重写onDataSetChanged方法</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDataSetChanged</span><span class="params">()</span></span> &#123;</span><br><span class="line">    mList.clear()</span><br><span class="line">    mList.addAll(todoService.getUncompletedTodoList())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>然后在WidgetProvier恰当的地方调用notifyAppWidgetViewDataChanged方法</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">AppWidgetManager.getInstance(context).notifyAppWidgetViewDataChanged(appWidgetId, R.id.widget_list)</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>##在应用中通知刷新</p>
<p>这是一个StackOverFlow中有人推荐的方法：</p>
<ol>
<li><strong>在 WidgetProvier 中：</strong></li>
</ol>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">val</span> WIDGET_IDS_KEY = <span class="string">&quot;lifeupwidgetidskey&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onReceive</span><span class="params">(context: <span class="type">Context</span>, intent: <span class="type">Intent</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.onReceive(context, intent)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (intent.hasExtra(WIDGET_IDS_KEY)) &#123;</span><br><span class="line">        <span class="keyword">val</span> ids = intent.extras.getIntArray(WIDGET_IDS_KEY)</span><br><span class="line">        <span class="keyword">this</span>.onUpdate(context, AppWidgetManager.getInstance(context), ids)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (intent.getBooleanExtra(<span class="string">&quot;isShowToast&quot;</span>, <span class="literal">false</span>))</span><br><span class="line">            ToastUtils.showShortToast(<span class="string">&quot;成功刷新&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li><strong>写一个工具类：</strong></li>
</ol>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> net.sarasarasa.lifeup.utils</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.appwidget.AppWidgetManager</span><br><span class="line"><span class="keyword">import</span> android.content.ComponentName</span><br><span class="line"><span class="keyword">import</span> android.content.Context</span><br><span class="line"><span class="keyword">import</span> android.content.Intent</span><br><span class="line"><span class="keyword">import</span> net.sarasarasa.lifeup.fragment.LifeUpWidget</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WidgetUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span> &#123;</span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">updateWidgets</span><span class="params">(context: <span class="type">Context</span>)</span></span> &#123;</span><br><span class="line">            <span class="keyword">val</span> man = AppWidgetManager.getInstance(context)</span><br><span class="line">            <span class="keyword">val</span> ids = man.getAppWidgetIds(</span><br><span class="line">                    ComponentName(context, LifeUpWidget::<span class="keyword">class</span>.java))</span><br><span class="line">            <span class="keyword">val</span> updateIntent = Intent()</span><br><span class="line">            updateIntent.action = AppWidgetManager.ACTION_APPWIDGET_UPDATE</span><br><span class="line">            updateIntent.putExtra(LifeUpWidget.WIDGET_IDS_KEY, ids)</span><br><span class="line">            <span class="comment">// updateIntent.putExtra(MyWidgetProvider.WIDGET_DATA_KEY, data)</span></span><br><span class="line">            context.sendBroadcast(updateIntent)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>人升开发日志#10 | 11/03 Android图片选择、裁剪实现（8.0以及MIUI适配）</title>
    <url>/post/99671126.html</url>
    <content><![CDATA[<p>不得不说MIUI是个大坑，在其他系统都能正常实现的时候，唯独MIUI出现了各种奇奇怪怪的状况。</p>
<p>最后上了第三方框架uCrop解决裁剪问题。</p>
<h1 id="所需要的框架"><a href="#所需要的框架" class="headerlink" title="所需要的框架"></a>所需要的框架</h1><p>因为LitePal和MobSDK都需要对Application进行修改，所以最好实现自己的Application：</p>
<ul>
<li><p>EasyPermissions（负责处理运行时权限的处理）</p>
</li>
<li><p>uCrop（一个图片裁剪框架）</p>
</li>
</ul>
<a id="more"></a>
<h1 id="关键代码"><a href="#关键代码" class="headerlink" title="关键代码"></a>关键代码</h1><p><strong>运行时权限+对话框选择是拍照还是选择照片</strong></p>
<p>Android6.0后，调用相机以及写入存储文件需要运行时申请权限，这里采用了 Google 官方的 EasyPermissions 框架来简化权限申请步骤。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> avatarFileName = <span class="string">&quot;avatar.jpg&quot;</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> avatarOriginFileName = <span class="string">&quot;avatarOrigin.jpg&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">companion</span> <span class="keyword">object</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="keyword">val</span> RC_CAMERA = <span class="number">200</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="keyword">val</span> CHOOSE_PICTURE = <span class="number">0</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="keyword">val</span> TAKE_PICTURE = <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onRequestPermissionsResult</span><span class="params">(requestCode: <span class="type">Int</span>, permissions: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;, grantResults: <span class="type">IntArray</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults)</span><br><span class="line"></span><br><span class="line">    EasyPermissions.onRequestPermissionsResult(requestCode, permissions, grantResults, <span class="keyword">this</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 显示修改图片的对话框</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@AfterPermissionGranted(RC_CAMERA)</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">showChoosePicDialog</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> builder = android.app.AlertDialog.Builder(<span class="keyword">this</span>)</span><br><span class="line">    builder.setTitle(<span class="string">&quot;修改头像&quot;</span>)</span><br><span class="line">    <span class="keyword">val</span> items = arrayOf(<span class="string">&quot;选择本地照片&quot;</span>, <span class="string">&quot;拍照&quot;</span>)</span><br><span class="line">    builder.setNegativeButton(<span class="string">&quot;取消&quot;</span>, <span class="literal">null</span>)</span><br><span class="line">    builder.setItems(items) &#123; _, which -&gt;</span><br><span class="line">        <span class="keyword">when</span> (which) &#123;</span><br><span class="line">            <span class="number">0</span> <span class="comment">// 选择本地照片</span></span><br><span class="line">            -&gt; &#123;</span><br><span class="line">                <span class="keyword">val</span> perms = arrayOf(Manifest.permission.WRITE_EXTERNAL_STORAGE)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (EasyPermissions.hasPermissions(<span class="keyword">this</span>, *perms)) &#123;</span><br><span class="line">                    <span class="keyword">val</span> intent = Intent(Intent.ACTION_PICK)<span class="comment">//返回被选中项的URI</span></span><br><span class="line">                    intent.setDataAndType(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, <span class="string">&quot;image/*&quot;</span>)<span class="comment">//得到所有图片的URI</span></span><br><span class="line">                    startActivityForResult(intent, CHOOSE_PICTURE)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    EasyPermissions.requestPermissions(<span class="keyword">this</span>, <span class="string">&quot;需要文件写入权限&quot;</span>, RC_CAMERA, *perms)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="number">1</span> <span class="comment">// 拍照</span></span><br><span class="line">            -&gt; &#123;</span><br><span class="line">                <span class="keyword">val</span> perms = arrayOf(Manifest.permission.WRITE_EXTERNAL_STORAGE, Manifest.permission.CAMERA)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (EasyPermissions.hasPermissions(<span class="keyword">this</span>, *perms)) &#123;</span><br><span class="line">                    <span class="keyword">val</span> openCameraIntent = Intent(MediaStore.ACTION_IMAGE_CAPTURE)</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">val</span> file = getAvatarFile(avatarOriginFileName)</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(file.exists())</span><br><span class="line">                        file.delete()</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">val</span> fileUri = getUriByOsVersion(file)</span><br><span class="line"></span><br><span class="line">                    openCameraIntent.putExtra(MediaStore.EXTRA_OUTPUT, fileUri)</span><br><span class="line">                    openCameraIntent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION)</span><br><span class="line">                    openCameraIntent.addFlags(Intent.FLAG_GRANT_WRITE_URI_PERMISSION)</span><br><span class="line">                    startActivityForResult(openCameraIntent, TAKE_PICTURE)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    EasyPermissions.requestPermissions(<span class="keyword">this</span>, <span class="string">&quot;拍照需要系统摄像头权限授权和文件写入权限&quot;</span>, RC_CAMERA, *perms)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    builder.show()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>对选择、裁剪成功等返回结果的处理</strong></p>
<p>Android7.0 对 APP 内的文件共享做了限制，外部不能直接访问你的内部文件。</p>
<p>这里需要用到FIleProvier，具体的FileProvider的配置在下一小节。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onActivityResult</span><span class="params">(requestCode: <span class="type">Int</span>, resultCode: <span class="type">Int</span>, <span class="keyword">data</span>: <span class="type">Intent</span>?)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, <span class="keyword">data</span>)</span><br><span class="line">    <span class="keyword">if</span> (resultCode == Activity.RESULT_OK) &#123;</span><br><span class="line">        <span class="keyword">when</span> (requestCode) &#123;</span><br><span class="line">            <span class="comment">// 对拍照返回的图片进行裁剪处理</span></span><br><span class="line">            TAKE_PICTURE -&gt; &#123;</span><br><span class="line">                <span class="keyword">val</span> imgUriSel = getUriByOsVersion(getAvatarFile(avatarOriginFileName))</span><br><span class="line">                cutImageByuCrop(imgUriSel)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 对在图库选择的图片进行裁剪处理</span></span><br><span class="line">            CHOOSE_PICTURE -&gt; cutImageByuCrop(<span class="keyword">data</span>?.<span class="keyword">data</span>)</span><br><span class="line">            <span class="comment">// 上传裁剪成功的文件</span></span><br><span class="line">            UCrop.REQUEST_CROP -&gt; &#123;</span><br><span class="line">                <span class="keyword">data</span>?.let &#123; uploadFile(it) &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 输出裁剪</span></span><br><span class="line">            UCrop.RESULT_ERROR -&gt; &#123;</span><br><span class="line">                <span class="keyword">val</span> cropError = <span class="keyword">data</span>?.let &#123; UCrop.getError(it) &#125;</span><br><span class="line">                ToastUtils.showShortToast(cropError.toString())</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>使用uCrop框架对指定的文件进行裁剪</strong></p>
<p>uCrop 是一款很优秀的第三方裁剪框架，Bilibili的客户端也在使用。</p>
<p>一开始调用系统的裁剪的时候，出现过各种坑（比如MIUI用return-data的方式调用会报错，不用return-data有时候又拿不到返回值），于是才换用了这个。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">cutImageByuCrop</span><span class="params">(uri: <span class="type">Uri</span>?)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> outputImage = getAvatarFile(avatarFileName)</span><br><span class="line">    <span class="keyword">val</span> outputUri = Uri.fromFile(outputImage)</span><br><span class="line"></span><br><span class="line">    uri?.let &#123;</span><br><span class="line">        UCrop.of(it, outputUri)</span><br><span class="line">                .withAspectRatio(<span class="number">1f</span>, <span class="number">1f</span>)</span><br><span class="line">                .withMaxResultSize(<span class="number">256</span>, <span class="number">256</span>)</span><br><span class="line">                .start(<span class="keyword">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>一个获得指定名字的[File]对象的私有方法</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">getAvatarFile</span><span class="params">(filename:<span class="type">String</span>)</span></span>: File&#123;</span><br><span class="line">    <span class="comment">// 使用 APP 内部储存空间</span></span><br><span class="line">    <span class="keyword">val</span> appDir = File(getExternalFilesDir(Environment.DIRECTORY_PICTURES).absolutePath, <span class="string">&quot;Avatar&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这句是使用外部存储空间的</span></span><br><span class="line">    <span class="comment">//val appDir = File(Environment.getExternalStorageDirectory().absolutePath, &quot;LifeUp&quot;)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!appDir.exists())</span><br><span class="line">        appDir.mkdir()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> File(appDir, filename)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>根据系统api版本决定是用绝对路径还是用FileProvider获得Uri的私有方法</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">getUriByOsVersion</span><span class="params">(file:<span class="type">File</span>)</span></span>:Uri&#123;</span><br><span class="line">    <span class="keyword">val</span> currentApiVersion = android.os.Build.VERSION.SDK_INT</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">if</span>(currentApiVersion &lt; <span class="number">24</span>) &#123;</span><br><span class="line">        Uri.fromFile(file)</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        FileProvider.getUriForFile(<span class="keyword">this</span>, packageName + <span class="string">&quot;.provider&quot;</span>, file)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>上传裁剪后的头像</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Throws(IOException::class)</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">uploadFile</span><span class="params">(<span class="keyword">data</span>: <span class="type">Intent</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">val</span> file = getAvatarFile(avatarFileName)</span><br><span class="line">    <span class="keyword">val</span> file = getAvatarFile(avatarFileName)</span><br><span class="line"></span><br><span class="line">    LoadingDialogUtils.show(<span class="keyword">this</span>)</span><br><span class="line">    userNetwork.updateAvatar(file)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>如果要调用系统内置的裁剪，部分代码：</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Deprecated(<span class="meta-string">&quot;use ucrop instead&quot;</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">cutImage</span><span class="params">(uri: <span class="type">Uri</span>?)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (uri == <span class="literal">null</span>) &#123;</span><br><span class="line">        Log.i(<span class="string">&quot;tip&quot;</span>, <span class="string">&quot;The uri is not exist.&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    tempUri = uri!!</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> intent = Intent(<span class="string">&quot;com.android.camera.action.CROP&quot;</span>)</span><br><span class="line">    <span class="comment">//com.android.camera.action.CROP这个action是用来裁剪图片用的</span></span><br><span class="line">    intent.setDataAndType(uri, <span class="string">&quot;image/*&quot;</span>)</span><br><span class="line">    intent.putExtra(<span class="string">&quot;crop&quot;</span>, <span class="string">&quot;true&quot;</span>)</span><br><span class="line">    <span class="comment">// aspectX aspectY 是宽高的比例</span></span><br><span class="line">    intent.putExtra(<span class="string">&quot;aspectX&quot;</span>, <span class="number">1</span>)</span><br><span class="line">    intent.putExtra(<span class="string">&quot;aspectY&quot;</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="comment">// outputX outputY 是裁剪图片宽高</span></span><br><span class="line">    intent.putExtra(<span class="string">&quot;outputX&quot;</span>, <span class="number">256</span>)</span><br><span class="line">    intent.putExtra(<span class="string">&quot;outputY&quot;</span>, <span class="number">256</span>)</span><br><span class="line">    <span class="comment">//intent.putExtra(&quot;return-data&quot;, true)</span></span><br><span class="line">    <span class="comment">//val appDir = File(Environment.getExternalStorageDirectory().absolutePath, &quot;LifeUp&quot;)</span></span><br><span class="line">    tempUri = Uri.parse(<span class="string">&quot;file://&quot;</span> + <span class="string">&quot;/&quot;</span> + Environment.getExternalStorageDirectory().absolutePath + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;LifeUp&quot;</span> + <span class="string">&quot;/&quot;</span> + avatarFileName)</span><br><span class="line">    intent.putExtra(MediaStore.EXTRA_OUTPUT, uri)</span><br><span class="line">    intent.putExtra(<span class="string">&quot;outputFormat&quot;</span>, Bitmap.CompressFormat.JPEG.toString())</span><br><span class="line">    intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION)</span><br><span class="line">    intent.addFlags(Intent.FLAG_GRANT_WRITE_URI_PERMISSION)</span><br><span class="line">    intent.putExtra(<span class="string">&quot;noFaceDetection&quot;</span>, <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">    startActivityForResult(intent, CROP_SMALL_PICTURE)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>最好通过将 return-data 设为 false，然后通过传递 uri ， 返回时通过 uri 获取 File 的方式来使用。</p>
<p>MIUI 好像在 return-data 设为 true，在 intent 返回 bitmap 的情况下会报错。</p>
<p>另外，即便在 return-data 设为 false 的时候，MIUI 仍然可能会出现保存失败的情况。可能原始文件和裁剪后文件的 uri 不能相同（纯猜测）。</p>
<h1 id="FileProvider-配置"><a href="#FileProvider-配置" class="headerlink" title="FileProvider 配置"></a>FileProvider 配置</h1><p><strong>在 AndroidManifest.xml 中加上：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--FileProvider共享文件--&gt;</span></span><br><span class="line">&lt;provider</span><br><span class="line">    android:name=&quot;android.support.v4.content.FileProvider&quot;</span><br><span class="line">    android:authorities=&quot;net.sarasarasa.lifeup.provider&quot;</span><br><span class="line">    android:exported=&quot;false&quot;</span><br><span class="line">    android:grantUriPermissions=&quot;true&quot;&gt;</span><br><span class="line">    &lt;meta-data</span><br><span class="line">        android:name=&quot;android.support.FILE_PROVIDER_PATHS&quot;</span><br><span class="line">        android:resource=&quot;@xml/file_paths&quot;/&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">provider</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>在 res/xml/file_paths.xml 中加上：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">paths</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">files-path</span> <span class="attr">path</span>=<span class="string">&quot;Android/data/net.sarasarasa.lifeup/files/Pictures/&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Avatar&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">external-path</span> <span class="attr">path</span>=<span class="string">&quot;Android/data/net.sarasarasa.lifeup/files/Pictures/&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Avatar&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">external-files-path</span> <span class="attr">path</span>=<span class="string">&quot;files/Pictures/Avatar&quot;</span> <span class="attr">name</span>=<span class="string">&quot;images&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">root-path</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">path</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">paths</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>[Git]开发中途清理.igonore新增的忽略文件</title>
    <url>/post/9a4281e2.html</url>
    <content><![CDATA[<p>中途修改.gitignore文件后，直接commit的话，以前git跟踪的文件就算添加进忽略里，依旧会跟踪变化。</p>
<p><br /></p>
<h1 id="获取-gitignore文件模板"><a href="#获取-gitignore文件模板" class="headerlink" title="获取.gitignore文件模板"></a>获取.gitignore文件模板</h1><p><a href="https://github.com/github/gitignore">https://github.com/github/gitignore</a></p>
<p><br /></p>
<h1 id="删除已经跟踪的文件"><a href="#删除已经跟踪的文件" class="headerlink" title="删除已经跟踪的文件"></a>删除已经跟踪的文件</h1><ol>
<li><p>修改.gitignore文件后，先进行一次commit操作。</p>
<p><code>git commit -m &quot;update .gitignore&quot;</code></p>
</li>
<li><p>然后，清空本地暂存区的内容：</p>
<p><code>git rm -rf --cached .</code></p>
</li>
<li><p>再次添加跟踪文件：</p>
<p><code>git add .</code></p>
</li>
<li><p>再进行一遍commit提交修改。</p>
<p><code>git commit -m &quot;delete files that should not be tracked&quot;</code></p>
</li>
</ol>
<p><strong>我本地测试的时候，似乎修改.gitigonore文件的操作和下面的操作要分属两个commit才能生效。</strong></p>
<p><strong>不过也有可能是操作问题，这里有待检验。</strong></p>
<a id="more"></a>
<p><br /></p>
<h1 id="利用Rebase操作合并commit"><a href="#利用Rebase操作合并commit" class="headerlink" title="利用Rebase操作合并commit"></a>利用Rebase操作合并commit</h1><p><strong>比如要合并从HEAD开始的最新的两个commit：</strong></p>
<ol>
<li><p>首先，用rebase指明要rebase的从HEAD开始数的版本数量：</p>
<p><code>git rebase -i HEAD~2</code></p>
</li>
<li><p>在弹出的文本编辑器中，将后面那个commit前面的pick改成squash然后保存。</p>
</li>
<li><p>如果中途出现冲突中断的话，处理后，可以用以下命令继续：</p>
<p><code>git add .</code></p>
<p><code>git rebase --continue</code></p>
</li>
<li><p>最后会弹出一个文本编辑器，让你编辑合并后的commit的描述，修改后保存即可。</p>
</li>
</ol>
<p><br /></p>
<h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p> <a href="https://segmentfault.com/a/1190000007748862">(Git)合并多个commit</a></p>
<p> <a href="http://ericode.pro/2017/09/24/Git-%E4%B8%AD%E9%80%94%E6%B8%85%E7%90%86-gitignore-%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6.html">Git:中途清理.gitignore 忽略文件</a></p>
]]></content>
      <categories>
        <category>技术</category>
        <category>Git</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>人升开发日志#9 | 8/30 数据库+数据填充</title>
    <url>/post/e7c566a6.html</url>
    <content><![CDATA[<p>使用了Litepal作为数据库ORM框架，还有BRAVH来简化RecyclerView的适配器的写法。</p>
<p>这里记录下开发途中遇到的坑。</p>
<h1 id="创建自己的Application类"><a href="#创建自己的Application类" class="headerlink" title="创建自己的Application类"></a>创建自己的Application类</h1><p>因为LitePal和MobSDK都需要对Application进行修改，所以最好实现自己的Application：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.Application</span><br><span class="line"><span class="keyword">import</span> com.mob.MobSDK</span><br><span class="line"><span class="keyword">import</span> org.litepal.LitePal</span><br><span class="line"></span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">LifeUpApplication</span> : <span class="type">Application</span></span>() &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate()</span><br><span class="line">         MobSDK.<span class="keyword">init</span>(<span class="keyword">this</span>)</span><br><span class="line">        LitePal.initialize(<span class="keyword">this</span>);</span><br><span class="line">     &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="LitePal最新版的一些用法"><a href="#LitePal最新版的一些用法" class="headerlink" title="LitePal最新版的一些用法"></a>LitePal最新版的一些用法</h1><p>实体类<strong>继承LitePalSupport</strong>而不是原先的DataSupport。</p>
<p>另外Kotlin的var会自动实现getter和setter：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.litepal.crud.LitePalSupport</span><br><span class="line"><span class="keyword">import</span> java.util.*</span><br><span class="line"></span><br><span class="line"><span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">TaskModel</span></span>(</span><br><span class="line">        <span class="keyword">var</span> content: String,</span><br><span class="line">        <span class="keyword">var</span> remark: String,</span><br><span class="line">        <span class="keyword">var</span> taskExpireTime: Date?,</span><br><span class="line">        <span class="keyword">var</span> taskRemindTime: Date?,</span><br><span class="line">        <span class="keyword">var</span> relatedAttribute1: String?,</span><br><span class="line">        <span class="keyword">var</span> relatedAttribute2: String?,</span><br><span class="line">        <span class="keyword">var</span> relatedAttribute3: String?,</span><br><span class="line">        <span class="keyword">var</span> taskUrgencyDegree: <span class="built_in">Int</span>,</span><br><span class="line">        <span class="keyword">var</span> taskDifficultyDegree: <span class="built_in">Int</span>,</span><br><span class="line">        <span class="keyword">var</span> taskFrequency: <span class="built_in">Int</span>,</span><br><span class="line">        <span class="keyword">var</span> userId: <span class="built_in">Int</span>?,</span><br><span class="line">        <span class="keyword">var</span> isShared: <span class="built_in">Boolean</span>,</span><br><span class="line">        <span class="keyword">var</span> taskType: <span class="built_in">Int</span>?</span><br><span class="line">) : LitePalSupport() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> id: <span class="built_in">Long</span>? = <span class="literal">null</span></span><br><span class="line">    <span class="keyword">var</span> taskId: <span class="built_in">Long</span>? = <span class="literal">null</span></span><br><span class="line">    <span class="keyword">var</span> createdTime: <span class="built_in">Long</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">var</span> updatedTime: <span class="built_in">Long</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">var</span> expReward: <span class="built_in">Int</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">var</span> endDate: Date? = <span class="literal">null</span></span><br><span class="line">    <span class="keyword">var</span> taskStatus: <span class="built_in">Int</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>而对数据库的操作方法也从调用DataSupport类的方法变成了<strong>调用LitePal类</strong>的方法。</p>
<p>如：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getFirstAttribute</span><span class="params">()</span></span>: AttributeModel? &#123;</span><br><span class="line">    <span class="keyword">return</span> LitePal.findFirst(AttributeModel::<span class="keyword">class</span>.java)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其他的话，没什么不一样。</p>
<h1 id="刷新RecyclerView数据"><a href="#刷新RecyclerView数据" class="headerlink" title="刷新RecyclerView数据"></a>刷新RecyclerView数据</h1><p>需要注意的一个坑是，RecyclerView的Adapter用的List不能重新指向一个新的引用。</p>
<p>必须用回原本的引用更改数据，然后再调用<code>notifyDataSetChanged()</code>就能刷新数据了。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">refreshDataSet</span><span class="params">()</span></span> &#123;</span><br><span class="line">    mList.clear()</span><br><span class="line">    mList.addAll(todoService.getUncompletedTodoList())</span><br><span class="line"></span><br><span class="line">    mAdapter.notifyDataSetChanged()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="当返回或是切换Fragment刷新数据"><a href="#当返回或是切换Fragment刷新数据" class="headerlink" title="当返回或是切换Fragment刷新数据"></a>当返回或是切换Fragment刷新数据</h1><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onResume</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.onResume()</span><br><span class="line">    refreshDataSet() <span class="comment">//刷新数据的操作</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onHiddenChanged</span><span class="params">(hidden: <span class="type">Boolean</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.onHiddenChanged(hidden)</span><br><span class="line">    <span class="keyword">if</span> (!hidden) &#123;</span><br><span class="line">        refreshDataSet() <span class="comment">//刷新数据的操作</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Lottie的动画回调调用多次的问题"><a href="#Lottie的动画回调调用多次的问题" class="headerlink" title="Lottie的动画回调调用多次的问题"></a>Lottie的动画回调调用多次的问题</h1><p>原本在Lottie的结束和取消回调里调用一个对话框的显示的方法，实际使用发现这个回调会被调用数次？（有时候1次，有时候2次，3次。很是诡异。）</p>
<p>解决方法自然是加个boolean值标识：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> isEverShowDialog = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">mView.addAnimatorListener(<span class="keyword">object</span> : Animator.AnimatorListener &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onAnimationRepeat</span><span class="params">(p0: <span class="type">Animator</span>?)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onAnimationEnd</span><span class="params">(p0: <span class="type">Animator</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!isEverShowDialog) &#123;</span><br><span class="line">            showDialogAbbr(item)</span><br><span class="line">            isEverShowDialog = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//refreshHeaderView(mHeaderView)</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onAnimationCancel</span><span class="params">(p0: <span class="type">Animator</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!isEverShowDialog) &#123;</span><br><span class="line">            showDialogAbbr(item)</span><br><span class="line">            isEverShowDialog = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onAnimationStart</span><span class="params">(p0: <span class="type">Animator</span>?)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h1 id="获得经验值的进度条动画的实现"><a href="#获得经验值的进度条动画的实现" class="headerlink" title="获得经验值的进度条动画的实现"></a>获得经验值的进度条动画的实现</h1><p>讲真，这个小小的动画实现可能是我花费时间最长的一个小模块了。</p>
<p>首先要解决<strong>无论是3个属性都选择了，还是只选择了1个，2个都能正确显示</strong>的问题。</p>
<p>其次，需要计算获得经验值前的经验值与等级的占比，来正确显示ProgressBar（进度条）的进度。</p>
<p>还需要判断会不会升级，如果升级要将进度条置为0再进行下一步操作。</p>
<p>还要保证进度增长的时间是大概一致的。</p>
<p>还需要用到多线程来实现进度的缓慢增长。</p>
<p><strong>等等……</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">doProgressOrigin</span><span class="params">(dialogView: <span class="type">View</span>, item: <span class="type">TaskModel</span>, index: <span class="type">Int</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> relatedAttribute = <span class="keyword">when</span> (index) &#123;</span><br><span class="line">        <span class="number">1</span> -&gt; item.relatedAttribute1</span><br><span class="line">        <span class="number">2</span> -&gt; item.relatedAttribute2</span><br><span class="line">        <span class="number">3</span> -&gt; item.relatedAttribute3</span><br><span class="line">        <span class="keyword">else</span> -&gt; <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (relatedAttribute.isNullOrBlank()) <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//完成前的</span></span><br><span class="line">    <span class="keyword">val</span> nowExpTotal = <span class="keyword">when</span> (index) &#123;</span><br><span class="line">        <span class="number">1</span> -&gt; attributeService.getAttributeExpByString(relatedAttribute ?: <span class="string">&quot;&quot;</span>) - item.expReward</span><br><span class="line">        <span class="number">2</span> -&gt; attributeService.getAttributeExpByString(item.relatedAttribute2</span><br><span class="line">                ?: <span class="string">&quot;&quot;</span>) - item.expReward</span><br><span class="line">        <span class="number">3</span> -&gt; attributeService.getAttributeExpByString(item.relatedAttribute3</span><br><span class="line">                ?: <span class="string">&quot;&quot;</span>) - item.expReward</span><br><span class="line">        <span class="keyword">else</span> -&gt; <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> nowExp = nowExpTotal - attributeLevelService.getAttributeLevelByExp(nowExpTotal).startExpValue</span><br><span class="line">    <span class="keyword">val</span> levelMaxExp = attributeLevelService.getAttributeLevelByExp(nowExpTotal).endExpValue - attributeLevelService.getAttributeLevelByExp(nowExpTotal).startExpValue</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> progressBar = <span class="keyword">when</span> (index) &#123;</span><br><span class="line">        <span class="number">1</span> -&gt; dialogView.npb_first</span><br><span class="line">        <span class="number">2</span> -&gt; dialogView.npb_Sec</span><br><span class="line">        <span class="number">3</span> -&gt; dialogView.npb_thr</span><br><span class="line">        <span class="keyword">else</span> -&gt; <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    progressBar.progress = nowExp * <span class="number">100</span> / levelMaxExp</span><br><span class="line">    <span class="keyword">var</span> finalProgress = (nowExp + item.expReward) * <span class="number">100</span> / levelMaxExp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (finalProgress &gt;= <span class="number">100</span>) &#123;</span><br><span class="line">        <span class="comment">//要升级的情况</span></span><br><span class="line">        thread = Thread &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//先走到尾巴</span></span><br><span class="line">                <span class="keyword">val</span> toMax = progressBar.max - progressBar.progress</span><br><span class="line">                <span class="keyword">while</span> (threadRunning == <span class="literal">true</span> &amp;&amp; progressBar.progress != progressBar.max) &#123;</span><br><span class="line">                    activity?.runOnUiThread &#123; progressBar.incrementProgressBy(<span class="keyword">if</span> (toMax / <span class="number">20</span> &gt; <span class="number">0</span>) toMax / <span class="number">20</span> <span class="keyword">else</span> <span class="number">1</span>) &#125;</span><br><span class="line">                    Thread.sleep(<span class="number">40</span>)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//升级，进度条重置为0</span></span><br><span class="line">                <span class="keyword">val</span> newLevelModel = attributeLevelService.getAttributeLevelByExp(nowExpTotal + item.expReward)</span><br><span class="line">                <span class="keyword">val</span> textViewLevel = <span class="keyword">when</span> (index) &#123;</span><br><span class="line">                    <span class="number">1</span> -&gt; dialogView.tv_levelFirst</span><br><span class="line">                    <span class="number">2</span> -&gt; dialogView.tv_levelSec</span><br><span class="line">                    <span class="number">3</span> -&gt; dialogView.tv_expThr</span><br><span class="line">                    <span class="keyword">else</span> -&gt; <span class="keyword">return</span><span class="symbol">@Thread</span></span><br><span class="line">                &#125;</span><br><span class="line">                activity?.runOnUiThread &#123;</span><br><span class="line">                    progressBar.progress = <span class="number">0</span></span><br><span class="line">                    textViewLevel.text = <span class="string">&quot;LV<span class="subst">$&#123;newLevelModel.levelNum&#125;</span>&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                nowExp = nowExpTotal + item.expReward - newLevelModel.startExpValue</span><br><span class="line">                <span class="keyword">val</span> nextMaxExpTotal = newLevelModel.endExpValue</span><br><span class="line">                <span class="keyword">val</span> nextMaxExp = newLevelModel.endExpValue - newLevelModel.startExpValue</span><br><span class="line">                finalProgress = nowExp * <span class="number">100</span> / nextMaxExp</span><br><span class="line">                Thread.sleep(<span class="number">40</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span> (threadRunning == <span class="literal">true</span> &amp;&amp; progressBar.progress != finalProgress) &#123;</span><br><span class="line">                    activity?.runOnUiThread &#123; progressBar.incrementProgressBy(<span class="keyword">if</span> (finalProgress / <span class="number">30</span> &gt; <span class="number">0</span>) finalProgress / <span class="number">30</span> <span class="keyword">else</span> <span class="number">1</span>) &#125;</span><br><span class="line">                    Thread.sleep(<span class="number">40</span>)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (e: InterruptedException) &#123;</span><br><span class="line">                e.printStackTrace()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        thread?.start()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//不需要升级</span></span><br><span class="line">        thread = Thread &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> progressToGo = finalProgress - progressBar.progress</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span> (threadRunning == <span class="literal">true</span> &amp;&amp; progressBar.progress != finalProgress) &#123;</span><br><span class="line">                    activity?.runOnUiThread &#123; progressBar.incrementProgressBy(<span class="keyword">if</span> (progressToGo / <span class="number">30</span> &gt; <span class="number">0</span>) progressToGo / <span class="number">30</span> <span class="keyword">else</span> <span class="number">1</span>) &#125;</span><br><span class="line">                    Thread.sleep(<span class="number">40</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (e: InterruptedException) &#123;</span><br><span class="line">                e.printStackTrace()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        thread?.start()</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h1 id="自定义View对话框的宽和高"><a href="#自定义View对话框的宽和高" class="headerlink" title="自定义View对话框的宽和高"></a>自定义View对话框的宽和高</h1><p>用了网上各种改跟View，getWindow然后setLayout的方法通通行不通。</p>
<p><strong>最后发现在自定义View的根View里加上<code>android:minHeight</code>和<code>android:minWidth</code>两个属性就好了。</strong></p>
<h1 id="ToolBar最右侧显示按钮图标"><a href="#ToolBar最右侧显示按钮图标" class="headerlink" title="ToolBar最右侧显示按钮图标"></a>ToolBar最右侧显示按钮图标</h1><p>其实那个按钮是OptionMenu里面的Item。</p>
<p>设置Menu的时候将<code>app:showAsAction</code>设为<code>always</code>就可以强制显示图标了。</p>
<p><strong>Menu布局文件：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;net.sarasarasa.lifeup.activities.AddToDoItemActivity&quot;</span>&gt;</span></span><br><span class="line">    &lt;item</span><br><span class="line">        android:id=&quot;@+id/action_finish&quot;</span><br><span class="line">        android:icon=&quot;@drawable/ic_done_white_24dp&quot;</span><br><span class="line">        android:orderInCategory=&quot;100&quot;</span><br><span class="line">        android:title=&quot;完成&quot;</span><br><span class="line">        app:showAsAction=&quot;always&quot; /&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>Activity代码：</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateOptionsMenu</span><span class="params">(menu: <span class="type">Menu</span>)</span></span>: <span class="built_in">Boolean</span> &#123;</span><br><span class="line">    menuInflater.inflate(R.menu.menu_add_to_do_item, menu)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onOptionsItemSelected</span><span class="params">(item: <span class="type">MenuItem</span>)</span></span>: <span class="built_in">Boolean</span> &#123;</span><br><span class="line">    <span class="keyword">when</span> (item.itemId) &#123;</span><br><span class="line">        R.id.action_finish -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (check()) &#123;</span><br><span class="line">                addItem(getItem())</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> -&gt; <span class="keyword">return</span> <span class="keyword">super</span>.onOptionsItemSelected(item)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>人升开发日志#8 | 8/5 主界面+设置界面</title>
    <url>/post/e55e992b.html</url>
    <content><![CDATA[<p>效果图：</p>
 <img src="/post/e55e992b/01.jpg" class="">
<a id="more"></a>
 <img src="/post/e55e992b/02.jpg" class="">
 <img src="/post/e55e992b/03.jpg" class="">
 <img src="/post/e55e992b/04.jpg" class="">
<p><br /></p>
<p>#设置页面</p>
<p>感觉 Google 官方的实现方式有点繁琐，而且布局不是很美观。</p>
<p>于是选用自定义布局+框架实现。</p>
<p><a href="https://github.com/jeff-sun/SettingView">https://github.com/jeff-sun/SettingView</a></p>
<h1 id="首页的BottomNavigationView实现Fragment切换"><a href="#首页的BottomNavigationView实现Fragment切换" class="headerlink" title="首页的BottomNavigationView实现Fragment切换"></a>首页的BottomNavigationView实现Fragment切换</h1><p>如果自己写就要判断逻辑然后加载Fragment，实现Hide和Show。</p>
<p>不困难但是很繁琐，还是套用框架：</p>
<p><a href="https://github.com/WakeHao/NavBar">https://github.com/WakeHao/NavBar</a></p>
<h1 id="TabLayout只能响应滑动事件，不能响应点击事件的解决"><a href="#TabLayout只能响应滑动事件，不能响应点击事件的解决" class="headerlink" title="TabLayout只能响应滑动事件，不能响应点击事件的解决"></a>TabLayout只能响应滑动事件，不能响应点击事件的解决</h1><p>将父布局改成<code>LinearLayout</code>。</p>
<h1 id="实现不同Fragment加载不同的Toolbar"><a href="#实现不同Fragment加载不同的Toolbar" class="headerlink" title="实现不同Fragment加载不同的Toolbar"></a>实现不同Fragment加载不同的Toolbar</h1><ol>
<li><p>首先将AppBarLayout的实现分别写在各个Fragment里面。</p>
</li>
<li><p>然后在Activity中写一个初始化toolbar的方法，参数为等会让Fragment传入的toolbar。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">initToolBar</span><span class="params">(toolbar: <span class="type">Toolbar</span>)</span></span> &#123;</span><br><span class="line">    setSupportActionBar(toolbar)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> toggle = ActionBarDrawerToggle(</span><br><span class="line">            <span class="keyword">this</span>, drawer_layout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close)</span><br><span class="line">    drawer_layout.addDrawerListener(toggle)</span><br><span class="line">    toggle.syncState()</span><br><span class="line"></span><br><span class="line">    nav_view.setNavigationItemSelectedListener(<span class="keyword">this</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>然后在各个Fragment的onCreateView方法中调用这个方法：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//设置toolbar</span></span><br><span class="line">(activity <span class="keyword">as</span> MainActivity).initToolBar(view.findViewById(R.id.toolbar))</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="CardView阴影显示不全的解决"><a href="#CardView阴影显示不全的解决" class="headerlink" title="CardView阴影显示不全的解决"></a>CardView阴影显示不全的解决</h1><p>原因是CardView默认的Wrap_content是不会包括阴影部分的。</p>
<p>所以可以加Padding，或者是使用</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">app:cardUseCompatPadding=&quot;true&quot;</span><br></pre></td></tr></table></figure>
<p>来让阴影部分也算在CardView的实际面积里。</p>
<p>这样的话，你需要重新调整下View的大小以及间距等等。</p>
<h1 id="点击EditText出现日期选择"><a href="#点击EditText出现日期选择" class="headerlink" title="点击EditText出现日期选择"></a>点击EditText出现日期选择</h1><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 展示日期选择对话框</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">showDatePickerDialog</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> c = Calendar.getInstance()</span><br><span class="line">    DatePickerDialog(<span class="keyword">this</span>, DatePickerDialog.OnDateSetListener &#123; _, year, monthOfYear, dayOfMonth -&gt;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        dDDL.setText(<span class="string">&quot;<span class="variable">$year</span>/<span class="subst">$&#123;monthOfYear + <span class="number">1</span>&#125;</span>/<span class="variable">$dayOfMonth</span>&quot;</span>)</span><br><span class="line">    &#125;, c.<span class="keyword">get</span>(Calendar.YEAR), c.<span class="keyword">get</span>(Calendar.MONTH), c.<span class="keyword">get</span>(Calendar.DAY_OF_MONTH)).show()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">initDDDL</span><span class="params">()</span></span> &#123;</span><br><span class="line">    dDDL.inputType = InputType.TYPE_NULL</span><br><span class="line">    dDDL.onFocusChangeListener = View.OnFocusChangeListener &#123; _, hasFocus -&gt;</span><br><span class="line">        <span class="keyword">if</span> (hasFocus)</span><br><span class="line">            showDatePickerDialog()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dDDL.setOnClickListener &#123;</span><br><span class="line">        showDatePickerDialog()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>第一次点击的时候会触发FocusChange，第二次点击才会触发OnClick。</p>
<p>所以两个监听器都要设置。</p>
<h1 id="单选框的写法"><a href="#单选框的写法" class="headerlink" title="单选框的写法"></a>单选框的写法</h1><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 展示重复频次选择对话框</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">showRepeaterDialog</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> items = arrayOf(<span class="string">&quot;不重复&quot;</span>, <span class="string">&quot;每日&quot;</span>, <span class="string">&quot;每两日&quot;</span>, <span class="string">&quot;每周&quot;</span>, <span class="string">&quot;每两周&quot;</span>, <span class="string">&quot;每月&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> dialog = AlertDialog.Builder(<span class="keyword">this</span>).setTitle(<span class="string">&quot;设置重复频次&quot;</span>)</span><br><span class="line">            .setSingleChoiceItems(items, iCheckedItemIndex, DialogInterface.OnClickListener &#123; dialog, index -&gt;</span><br><span class="line">                iCheckedItemIndex = index</span><br><span class="line">                et_repeat.setText(items[index])</span><br><span class="line">                dialog.dismiss()</span><br><span class="line">            &#125;).create()</span><br><span class="line">    dialog.show()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="让ImageView变成灰色"><a href="#让ImageView变成灰色" class="headerlink" title="让ImageView变成灰色"></a>让ImageView变成灰色</h1><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 将技能图标初始化为灰色 **/</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">initAbbrBtn</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> cm = ColorMatrix()</span><br><span class="line">    cm.setSaturation(<span class="number">0f</span>) <span class="comment">// 设置饱和度</span></span><br><span class="line">    <span class="keyword">val</span> grayColorFilter = ColorMatrixColorFilter(cm)</span><br><span class="line"></span><br><span class="line">    iv_strength.colorFilter = grayColorFilter <span class="comment">// 如果想恢复彩色显示，设置为null即可</span></span><br><span class="line">    iv_learning.colorFilter = grayColorFilter</span><br><span class="line">    iv_charm.colorFilter = grayColorFilter</span><br><span class="line">    iv_endurance.colorFilter = grayColorFilter</span><br><span class="line">    iv_vitality.colorFilter = grayColorFilter</span><br><span class="line">    iv_creative.colorFilter = grayColorFilter</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>恢复的话将colorFilter设为null即可。</p>
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>初接触实际Spring Boot项目的小总结</title>
    <url>/post/687507b9.html</url>
    <content><![CDATA[<p>先说下该项目用到的一些技术：</p>
<ul>
<li>Spring boot</li>
<li>Maven</li>
<li>lombok</li>
<li>Jpa</li>
<li>thymeleaf</li>
<li>easypoi</li>
<li>layui</li>
</ul>
<a id="more"></a>
<h1 id="SQL-Server-附加数据库时错误：拒绝访问"><a href="#SQL-Server-附加数据库时错误：拒绝访问" class="headerlink" title="SQL Server 附加数据库时错误：拒绝访问"></a>SQL Server 附加数据库时错误：拒绝访问</h1><blockquote>
<p>附加数据库失败，操作系统错误 5:”5(拒绝访问。)”</p>
</blockquote>
<p>在相应的文件上，<strong>右键ー属性ー安全</strong>，给予<code>Authenticated Users</code>组<strong>完全权限</strong>。</p>
<p>然后尝试再次附加。</p>
<h1 id="Controller的几种写法"><a href="#Controller的几种写法" class="headerlink" title="Controller的几种写法"></a>Controller的几种写法</h1><h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h2><h3 id="返回String"><a href="#返回String" class="headerlink" title="返回String"></a>返回String</h3><p>String的内容就相当于ViewName。</p>
<h3 id="返回-ResponseBodyMap-lt-String-Object-gt"><a href="#返回-ResponseBodyMap-lt-String-Object-gt" class="headerlink" title="返回@ResponseBodyMap&lt;String, Object&gt;"></a>返回@ResponseBodyMap&lt;String, Object&gt;</h3><p>于是方法体可以这样写：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Map&lt;String, Object&gt; map &#x3D; new HashMap&lt;&gt;();</span><br><span class="line">map.put(&quot;success&quot;, true);</span><br><span class="line">map.put(&quot;message&quot;, &quot;修改成功&quot;);</span><br><span class="line">return map;</span><br></pre></td></tr></table></figure>
<p>适用于ajax的异步请求。</p>
<h3 id="返回ModelAndView"><a href="#返回ModelAndView" class="headerlink" title="返回ModelAndView"></a>返回ModelAndView</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ModelAndView modelAndView &#x3D; new ModelAndView();</span><br><span class="line">modelAndView.setViewName(&quot;&#x2F;login&quot;);</span><br><span class="line">map.put(&quot;size&quot;, size);</span><br><span class="line">map.put(&quot;page&quot;, page);</span><br><span class="line">modelAndView.addObject(map);</span><br><span class="line">return modelAndView;</span><br></pre></td></tr></table></figure>
<p>与上面一种方法类似，但是可以自由设置View。</p>
<h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><h3 id="HttpSession-session"><a href="#HttpSession-session" class="headerlink" title="HttpSession session"></a>HttpSession session</h3><p>可以直接获取到session。</p>
<p>假如session放入了一个user实例，前端可以这样获取：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">th:value=<span class="string">&quot;$&#123;session.user.userName&#125;&quot;</span>&gt;</span><br></pre></td></tr></table></figure>
<h3 id="RequestBody-实体类"><a href="#RequestBody-实体类" class="headerlink" title="@RequestBody + 实体类"></a>@RequestBody + 实体类</h3><p>能将前端传的json自动映射为一个实体类。</p>
<p>前端ajax写法：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url: <span class="string">&quot;/user/login&quot;</span>,</span><br><span class="line">            type: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">            dataType: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">            data: <span class="built_in">JSON</span>.stringify(param),</span><br><span class="line">            contentType: <span class="string">&quot;application/json; charset=utf-8&quot;</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (res.success) &#123;</span><br><span class="line">            layer.msg(res.message);</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                location.replace(<span class="string">&quot;/index&quot;</span>);  <span class="comment">//.跳转到登录后的页面</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;, <span class="number">400</span>);    <span class="comment">//.延时跳转，显示登录成功的消息</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $(<span class="string">&quot;[name=&#x27;userId&#x27;]&quot;</span>)[<span class="number">0</span>].focus();</span><br><span class="line">            layer.alert(res.message, &#123;<span class="attr">icon</span>: <span class="number">5</span>&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    error: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        layer.alert(<span class="string">&#x27;操作失败！&#x27;</span>, &#123;<span class="attr">icon</span>: <span class="number">5</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>data可以自动转换表单项，也可以手动写：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> data = &#123;<span class="string">&quot;oldPassword&quot;</span>: oldPassword, <span class="string">&quot;newPassword&quot;</span>: newPassword&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="RequestParam"><a href="#RequestParam" class="headerlink" title="@RequestParam"></a>@RequestParam</h3><p>如：<code>@RequestParam(value = &quot;userName&quot;) String userName</code></p>
<p>那么请求方式该是原本的链接后面加上<code>?userName=Ayagikei</code></p>
<h3 id="Model-model"><a href="#Model-model" class="headerlink" title="Model model"></a>Model model</h3><p>获取model对象然后返回到前端页面。前端可以直接获取传入的东西。</p>
<h1 id="JS获取YYYY-MM-DD格式的当天日期"><a href="#JS获取YYYY-MM-DD格式的当天日期" class="headerlink" title="JS获取YYYY-MM-DD格式的当天日期"></a>JS获取YYYY-MM-DD格式的当天日期</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="keyword">var</span> nowMonth = date.getMonth() + <span class="number">1</span>,</span><br><span class="line">strDate = date.getDate(),</span><br><span class="line">seperator = <span class="string">&quot;-&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (nowMonth &gt;= <span class="number">1</span> &amp;&amp; nowMonth &lt;= <span class="number">9</span>) &#123;</span><br><span class="line">    nowMonth = <span class="string">&quot;0&quot;</span> + nowMonth;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (strDate &gt;= <span class="number">0</span> &amp;&amp; strDate &lt;= <span class="number">9</span>) &#123;</span><br><span class="line">    strDate = <span class="string">&quot;0&quot;</span> + strDate;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> res = date.getFullYear() + seperator + nowMonth + seperator + strDate;</span><br></pre></td></tr></table></figure>
<h1 id="JS实现表格的展开-隐藏"><a href="#JS实现表格的展开-隐藏" class="headerlink" title="JS实现表格的展开/隐藏"></a>JS实现表格的展开/隐藏</h1><p>以下代码举例的是多个表单的情况，以ID进行区分：<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//隐藏/展开按钮</span></span><br><span class="line">$(<span class="string">&#x27;.mine-hide-btn&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> id = $(<span class="built_in">this</span>).attr(<span class="string">&#x27;data-id&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> classname = <span class="string">&quot;trHidden&quot;</span> + id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($(<span class="string">&#x27;.&#x27;</span> + classname).attr(<span class="string">&quot;hidden&quot;</span>) == <span class="string">&quot;hidden&quot;</span>) &#123;</span><br><span class="line">        $(<span class="string">&#x27;.&#x27;</span> + classname).removeAttr(<span class="string">&quot;hidden&quot;</span>);</span><br><span class="line">        $(<span class="built_in">this</span>).text(<span class="string">&quot;隐藏&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        $(<span class="string">&#x27;.&#x27;</span> + classname).attr(<span class="string">&quot;hidden&quot;</span>, <span class="string">&quot;hidden&quot;</span>);</span><br><span class="line">        $(<span class="built_in">this</span>).text(<span class="string">&quot;展开&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<h1 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h1><h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><h3 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h3><p>返回一个Page对象即可。</p>
<h3 id="Service（含模糊搜索的处理）"><a href="#Service（含模糊搜索的处理）" class="headerlink" title="Service（含模糊搜索的处理）"></a>Service（含模糊搜索的处理）</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Sort sort = <span class="keyword">new</span> Sort(Sort.Direction.ASC, <span class="string">&quot;id&quot;</span>);</span><br><span class="line">Pageable pageable = PageRequest.of(page, size, sort);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> userRepository.findAllByIdLike(<span class="string">&quot;%&quot;</span> + id + <span class="string">&quot;%&quot;</span>, pageable);</span><br></pre></td></tr></table></figure>
<h3 id="Repository"><a href="#Repository" class="headerlink" title="Repository"></a>Repository</h3><p>Jpa只需要声明个方法即可：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Page&lt;UserDO&gt; findAllByIdLike(String id, Pageable pageable);</span><br></pre></td></tr></table></figure>
<h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><h3 id="内容展示"><a href="#内容展示" class="headerlink" title="内容展示"></a>内容展示</h3><p>用 <code>th:each</code> 遍历展示传来的Page对象的所有内容即可。</p>
<h3 id="页面指示器"><a href="#页面指示器" class="headerlink" title="页面指示器"></a>页面指示器</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;page-wrap&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;pagination&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 到达第一页按钮 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;datas.isFirst()&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;disabled&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>«<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:unless</span>=<span class="string">&quot;$&#123;datas.isFirst()&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>&lt;a</span><br><span class="line">                    th:href=&quot;@&#123;&#x27;/admin/user-list?page=0&#x27; + &#x27;&amp;search=&#x27; + $&#123;search&#125;&#125;&quot;&gt;«<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;&#x27;/admin/user-list?page=&#x27;+$&#123;datas.getNumber()-1&#125; +  + &#x27;&amp;search=&#x27; + $&#123;search&#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">th:text</span>=<span class="string">&quot;$&#123;datas.getNumber()&#125;&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 当前页面 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;datas.getNumber()&#125;+1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 到达尾页按钮 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;datas.isLast()&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;disabled&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>»<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:unless</span>=<span class="string">&quot;$&#123;datas.isLast()&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;&#x27;/admin/user-list?page=&#x27;+$&#123;datas.getNumber()+1&#125; + &#x27;&amp;search=&#x27; + $&#123;search&#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">th:text</span>=<span class="string">&quot;$&#123;datas.getNumber()&#125;+2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>&lt;a</span><br><span class="line">                    th:href=&quot;@&#123;&#x27;/admin/user-list?page=&#x27;+$&#123;datas.getTotalPages()-1&#125;  + &#x27;&amp;search=&#x27; + $&#123;search&#125;&#125;&quot;&gt;»<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- end of 到达尾页 --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="comment">&lt;!-- end of page-wrap div --&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="查询指定日期的数据"><a href="#查询指定日期的数据" class="headerlink" title="查询指定日期的数据"></a>查询指定日期的数据</h1><p>举例为User表中Date字段为日期</p>
<h2 id="Repository-1"><a href="#Repository-1" class="headerlink" title="Repository"></a>Repository</h2><p>声明以下方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">List&lt;User&gt; <span class="title">findAllByUserIdAndDateGreaterThanEqualAndDateBefore</span><span class="params">(String userId, Date after, Date before, Sort sort)</span></span>;</span><br></pre></td></tr></table></figure>
<h2 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 查询某一天的订单</span></span><br><span class="line"><span class="comment"> * 需要将</span></span><br><span class="line"><span class="comment"> * Date变为当天的 yyyy-mm-dd 00:00:00</span></span><br><span class="line"><span class="comment"> * Date2为第二天的 yyyy-mm-dd 00:00:00</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Calendar calendar = Calendar.getInstance();</span><br><span class="line">calendar.setTime(date);</span><br><span class="line">calendar.set(Calendar.MINUTE, <span class="number">0</span>);</span><br><span class="line">calendar.set(Calendar.HOUR, <span class="number">0</span>);</span><br><span class="line">calendar.set(Calendar.SECOND, <span class="number">0</span>);</span><br><span class="line">date = calendar.getTime();</span><br><span class="line">calendar.set(Calendar.DATE, calendar.get(Calendar.DATE) + <span class="number">1</span>);</span><br><span class="line">Date date2 = calendar.getTime();</span><br></pre></td></tr></table></figure>
<h1 id="EasyPoi所用到的工具类以及设置边框的方法"><a href="#EasyPoi所用到的工具类以及设置边框的方法" class="headerlink" title="EasyPoi所用到的工具类以及设置边框的方法"></a>EasyPoi所用到的工具类以及设置边框的方法</h1><h2 id="FileUtil-java"><a href="#FileUtil-java" class="headerlink" title="FileUtil.java"></a>FileUtil.java</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.ExcelExportUtil;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.ExcelImportUtil;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.entity.ExportParams;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.entity.ImportParams;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.entity.enmus.ExcelType;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Workbook;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.NoSuchElementException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileUtil</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">exportExcel</span><span class="params">(List&lt;?&gt; list, String title, String sheetName, Class&lt;?&gt; pojoClass, String fileName, <span class="keyword">boolean</span> isCreateHeader, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">        ExportParams exportParams = <span class="keyword">new</span> ExportParams(title, sheetName);</span><br><span class="line">        <span class="comment">//设置边框Styler（注意这里）</span></span><br><span class="line">        exportParams.setStyle(ExcelExportStyler.class);</span><br><span class="line"></span><br><span class="line">        exportParams.setCreateHeadRows(isCreateHeader);</span><br><span class="line">        defaultExport(list, pojoClass, fileName, response, exportParams);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">exportExcel</span><span class="params">(List&lt;?&gt; list, String title, String sheetName, Class&lt;?&gt; pojoClass, String fileName, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">        ExportParams exportParams = <span class="keyword">new</span> ExportParams(title, sheetName);</span><br><span class="line">        <span class="comment">//设置边框Styler</span></span><br><span class="line">        exportParams.setStyle(ExcelExportStyler.class);</span><br><span class="line"></span><br><span class="line">        defaultExport(list, pojoClass, fileName, response, exportParams);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">exportExcel</span><span class="params">(List&lt;Map&lt;String, Object&gt;&gt; list, String fileName, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">        defaultExport(list, fileName, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">defaultExport</span><span class="params">(List&lt;?&gt; list, Class&lt;?&gt; pojoClass, String fileName, HttpServletResponse response, ExportParams exportParams)</span> </span>&#123;</span><br><span class="line">        Workbook workbook = ExcelExportUtil.exportExcel(exportParams, pojoClass, list);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (workbook != <span class="keyword">null</span>) ;</span><br><span class="line">        downLoadExcel(fileName, response, workbook);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">downLoadExcel</span><span class="params">(String fileName, HttpServletResponse response, Workbook workbook)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            response.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            response.setHeader(<span class="string">&quot;content-Type&quot;</span>, <span class="string">&quot;application/vnd.ms-excel&quot;</span>);</span><br><span class="line">            response.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;attachment;filename=&quot;</span> + URLEncoder.encode(fileName, <span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">            workbook.write(response.getOutputStream());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">defaultExport</span><span class="params">(List&lt;Map&lt;String, Object&gt;&gt; list, String fileName, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">        Workbook workbook = ExcelExportUtil.exportExcel(list, ExcelType.HSSF);</span><br><span class="line">        <span class="keyword">if</span> (workbook != <span class="keyword">null</span>) ;</span><br><span class="line">        downLoadExcel(fileName, response, workbook);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">importExcel</span><span class="params">(String filePath, Integer titleRows, Integer headerRows, Class&lt;T&gt; pojoClass)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(filePath)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ImportParams params = <span class="keyword">new</span> ImportParams();</span><br><span class="line">        params.setTitleRows(titleRows);</span><br><span class="line">        params.setHeadRows(headerRows);</span><br><span class="line">        List&lt;T&gt; list = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            list = ExcelImportUtil.importExcel(<span class="keyword">new</span> File(filePath), pojoClass, params);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchElementException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;模板不能为空&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">importExcel</span><span class="params">(MultipartFile file, Integer titleRows, Integer headerRows, Class&lt;T&gt; pojoClass)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (file == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ImportParams params = <span class="keyword">new</span> ImportParams();</span><br><span class="line">        params.setTitleRows(titleRows);</span><br><span class="line">        params.setHeadRows(headerRows);</span><br><span class="line">        List&lt;T&gt; list = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            list = ExcelImportUtil.importExcel(file.getInputStream(), pojoClass, params);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchElementException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;excel文件不能为空&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="ExcelExportStyler-java"><a href="#ExcelExportStyler-java" class="headerlink" title="ExcelExportStyler.java"></a>ExcelExportStyler.java</h2><p>这是设置边框线的一个Styler。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.export.styler.AbstractExcelExportStyler;</span><br><span class="line"><span class="keyword">import</span> cn.afterturn.easypoi.excel.export.styler.IExcelExportStyler;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.CellStyle;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Font;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Workbook;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExcelExportStyler</span> <span class="keyword">extends</span> <span class="title">AbstractExcelExportStyler</span> <span class="keyword">implements</span> <span class="title">IExcelExportStyler</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ExcelExportStyler</span><span class="params">(Workbook workbook)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.createStyles(workbook);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CellStyle <span class="title">getHeaderStyle</span><span class="params">(<span class="keyword">short</span> color)</span> </span>&#123;</span><br><span class="line">        CellStyle titleStyle = <span class="keyword">this</span>.workbook.createCellStyle();</span><br><span class="line">        Font font = <span class="keyword">this</span>.workbook.createFont();</span><br><span class="line">        font.setFontHeightInPoints((<span class="keyword">short</span>) <span class="number">12</span>);</span><br><span class="line">        titleStyle.setFont(font);</span><br><span class="line">        titleStyle.setBorderBottom((<span class="keyword">short</span>) <span class="number">1</span>);</span><br><span class="line">        titleStyle.setAlignment((<span class="keyword">short</span>) <span class="number">2</span>);</span><br><span class="line">        titleStyle.setVerticalAlignment((<span class="keyword">short</span>) <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> titleStyle;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CellStyle <span class="title">stringNoneStyle</span><span class="params">(Workbook workbook, <span class="keyword">boolean</span> isWarp)</span> </span>&#123;</span><br><span class="line">        CellStyle style = workbook.createCellStyle();</span><br><span class="line">        style.setBorderLeft((<span class="keyword">short</span>) <span class="number">1</span>);</span><br><span class="line">        style.setBorderRight((<span class="keyword">short</span>) <span class="number">1</span>);</span><br><span class="line">        style.setBorderBottom((<span class="keyword">short</span>) <span class="number">1</span>);</span><br><span class="line">        style.setBorderTop((<span class="keyword">short</span>) <span class="number">1</span>);</span><br><span class="line">        style.setAlignment((<span class="keyword">short</span>) <span class="number">2</span>);</span><br><span class="line">        style.setVerticalAlignment((<span class="keyword">short</span>) <span class="number">1</span>);</span><br><span class="line">        style.setDataFormat(STRING_FORMAT);</span><br><span class="line">        <span class="keyword">if</span> (isWarp) &#123;</span><br><span class="line">            style.setWrapText(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> style;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CellStyle <span class="title">getTitleStyle</span><span class="params">(<span class="keyword">short</span> color)</span> </span>&#123;</span><br><span class="line">        CellStyle titleStyle = <span class="keyword">this</span>.workbook.createCellStyle();</span><br><span class="line">        titleStyle.setBorderLeft((<span class="keyword">short</span>) <span class="number">1</span>);</span><br><span class="line">        titleStyle.setBorderRight((<span class="keyword">short</span>) <span class="number">1</span>);</span><br><span class="line">        titleStyle.setBorderBottom((<span class="keyword">short</span>) <span class="number">1</span>);</span><br><span class="line">        titleStyle.setBorderTop((<span class="keyword">short</span>) <span class="number">1</span>);</span><br><span class="line">        titleStyle.setAlignment((<span class="keyword">short</span>) <span class="number">2</span>);</span><br><span class="line">        titleStyle.setVerticalAlignment((<span class="keyword">short</span>) <span class="number">1</span>);</span><br><span class="line">        titleStyle.setWrapText(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">return</span> titleStyle;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CellStyle <span class="title">stringSeptailStyle</span><span class="params">(Workbook workbook, <span class="keyword">boolean</span> isWarp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> isWarp ? <span class="keyword">this</span>.stringNoneWrapStyle : <span class="keyword">this</span>.stringNoneStyle;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="MD5Utils"><a href="#MD5Utils" class="headerlink" title="MD5Utils"></a>MD5Utils</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MD5Utils</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 可以把一段文字转换为MD</span></span><br><span class="line"><span class="comment">     * Can convert a file to MD5</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> text</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> md5</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encode</span><span class="params">(String text)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            MessageDigest digest = MessageDigest.getInstance(<span class="string">&quot;md5&quot;</span>);</span><br><span class="line">            <span class="keyword">byte</span>[] buffer = digest.digest(text.getBytes());</span><br><span class="line">            <span class="comment">// byte -128 ---- 127</span></span><br><span class="line">            StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">byte</span> b : buffer) &#123;</span><br><span class="line">                <span class="keyword">int</span> a = b &amp; <span class="number">0xff</span>;</span><br><span class="line">                <span class="comment">// Log.d(TAG, &quot;&quot; + a);</span></span><br><span class="line">                String hex = Integer.toHexString(a);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (hex.length() == <span class="number">1</span>) &#123;</span><br><span class="line">                    hex = <span class="number">0</span> + hex;</span><br><span class="line">                &#125;</span><br><span class="line">                sb.append(hex);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> sb.toString();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="不定长度的单元格合并的前端展示以及导出"><a href="#不定长度的单元格合并的前端展示以及导出" class="headerlink" title="不定长度的单元格合并的前端展示以及导出"></a>不定长度的单元格合并的前端展示以及导出</h1><h2 id="前端展示"><a href="#前端展示" class="headerlink" title="前端展示"></a>前端展示</h2><p>重点就是rowspan要设为长度，同时第一个td要只出现一遍，所以要加个if限定。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:each</span>=<span class="string">&quot;item,itemIter : $&#123;table&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;obj,objIter:$&#123;item.getPara()&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;hidden-xs&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;item.getId()&#125;&quot;</span> <span class="attr">th:rowspan</span>=<span class="string">&quot;$&#123;item.getParaSize()&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">th:if</span>=<span class="string">&quot;$&#123;objIter.count == 1&#125;&quot;</span>&gt;</span>112<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;hidden-xs&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;objIter.count&#125;&quot;</span>&gt;</span>段数<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;hidden-xs&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;obj.getLeftMargin()&#125;&quot;</span>&gt;</span>左边距<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;hidden-xs&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;obj.getStartPoint()&#125;&quot;</span>&gt;</span>开始点数<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;hidden-xs&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;obj.getLength()&#125;&quot;</span>&gt;</span>切割长度<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;hidden-xs&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;obj.getEndPoint()&#125;&quot;</span>&gt;</span>结束点数<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;hidden-xs&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;obj.getRightMargin()&#125;&quot;</span>&gt;</span>右边距<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;hidden-xs&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;obj.getGzl()&#125;&quot;</span>&gt;</span>工作令<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h2><p>在需要合并的List上加注解：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ExcelCollection(name = &quot;&quot;, orderNum = &quot;1&quot;)</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
        <category>记录</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>魅族Flyme和华为EMUI真机调试看不到log的解决</title>
    <url>/post/ea1c38b.html</url>
    <content><![CDATA[<h1 id="Flyme-7"><a href="#Flyme-7" class="headerlink" title="Flyme 7"></a>Flyme 7</h1><p>打开<code>设置</code> → <code>辅助功能</code> → <code>开发者选项</code> → <code>性能优化</code> → <code>高级日志输出</code>，将其设为<code>全部允许</code>就好了。</p>
<p>选项藏得挺深，而且在设置中的搜索功能是搜索不到这个选项的。</p>
<h1 id="EMUI"><a href="#EMUI" class="headerlink" title="EMUI"></a>EMUI</h1><p>没有EMUI实机，这是网传方法：</p>
<p>在<strong>拨号界面</strong>输入 <em>#</em>#2846579#<em>#</em> 打开工程菜单，再将“<code>LOG设置</code>”中AP日志打开。</p>
<h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://www.zhihu.com/question/32024327">android studio中崩溃无法查看log？</a></p>
]]></content>
      <categories>
        <category>技术</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Android</tag>
        <tag>调试</tag>
      </tags>
  </entry>
  <entry>
    <title>人升开发日志#7 | 7/3 侧滑菜单+登陆界面</title>
    <url>/post/c9dbbcf5.html</url>
    <content><![CDATA[<p>效果图：</p>
 <img src="/post/c9dbbcf5/01.jpg" class="">
 <img src="/post/c9dbbcf5/02.jpg" class="">
<p>总体都是在AS自带的几个Activity上进行修改，但也遭遇了不少的坑。</p>
<a id="more"></a>
<p><br /></p>
<h1 id="侧滑菜单"><a href="#侧滑菜单" class="headerlink" title="侧滑菜单"></a>侧滑菜单</h1><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>不同Group之间会自动添加分割线，布局如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:showIn</span>=<span class="string">&quot;navigation_view&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;group</span><br><span class="line">        android:id=&quot;@+id/grp_application&quot;</span><br><span class="line">        android:checkableBehavior=&quot;single&quot;&gt;</span><br><span class="line">        &lt;item</span><br><span class="line">            android:id=&quot;@+id/nav_home&quot;</span><br><span class="line">            android:icon=&quot;@drawable/ic_home_black_24dp&quot;</span><br><span class="line">            android:title=&quot;主页&quot; /&gt;</span><br><span class="line">        &lt;item</span><br><span class="line">            android:id=&quot;@+id/nav_history&quot;</span><br><span class="line">            android:icon=&quot;@drawable/ic_history_black_24dp&quot;</span><br><span class="line">            android:title=&quot;历史&quot; /&gt;</span><br><span class="line">        &lt;item</span><br><span class="line">            android:id=&quot;@+id/nav_achievement&quot;</span><br><span class="line">            android:icon=&quot;@drawable/ic_stars_black_24dp&quot;</span><br><span class="line">            android:title=&quot;成就&quot; /&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;group</span><br><span class="line">        android:id=&quot;@+id/grp_system&quot;</span><br><span class="line">        android:checkableBehavior=&quot;single&quot;&gt;</span><br><span class="line">        &lt;item</span><br><span class="line">            android:id=&quot;@+id/nav_settings&quot;</span><br><span class="line">            android:icon=&quot;@drawable/ic_settings_black_24dp&quot;</span><br><span class="line">            android:title=&quot;选项&quot; /&gt;</span><br><span class="line">        &lt;item</span><br><span class="line">            android:id=&quot;@+id/nav_about&quot;</span><br><span class="line">            android:icon=&quot;@drawable/ic_info_black_24dp&quot;</span><br><span class="line">            android:title=&quot;关于&quot; /&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><br /></p>
<h2 id="按钮图标来源"><a href="#按钮图标来源" class="headerlink" title="按钮图标来源"></a>按钮图标来源</h2><p>Google在Github上有<a href="https://github.com/google/material-design-icons">material design的图标仓库</a>，内含矢量图和png以及ios可用的多种格式。</p>
<h1 id="登陆界面"><a href="#登陆界面" class="headerlink" title="登陆界面"></a>登陆界面</h1><h2 id="采用ToolBar"><a href="#采用ToolBar" class="headerlink" title="采用ToolBar"></a>采用ToolBar</h2><p>登陆界面的模板使用的是ActionBar，我们要手动改成Toolbar。</p>
<p><strong>布局文件中添加：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;android.support.design.widget.AppBarLayout</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">    android:theme=&quot;@style/AppTheme.AppBarOverlay&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;android.support.v7.widget.Toolbar</span><br><span class="line">        android:id=&quot;@+id/login_toolbar&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;?attr/actionBarSize&quot;</span><br><span class="line">        android:background=&quot;?attr/colorPrimary&quot;</span><br><span class="line">        app:popupTheme=&quot;@style/AppTheme.PopupOverlay&quot; /&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.design.widget.AppBarLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>kt代码中添加：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">setSupportActionBar(login_toolbar)</span><br><span class="line">&#x2F;&#x2F;下面两句是启用Toolbar的Up按钮</span><br><span class="line">supportActionBar?.setDisplayHomeAsUpEnabled(true)</span><br><span class="line">supportActionBar?.setHomeButtonEnabled(true)</span><br></pre></td></tr></table></figure>
<p>Up的按钮的作用理应是：<strong>返回该活动的父级活动</strong>，有点类似于Windows中的向上操作。</p>
<p>所以是和返回（Back）操作是不同的。</p>
<p>正确的实现方式是在AndroidManifest.xml相应的Activity中添加父布局：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:parentActivityName=&quot;.activities.MainActivity&quot;</span><br></pre></td></tr></table></figure>
<p><br /></p>
<h2 id="取消自动打开软键盘"><a href="#取消自动打开软键盘" class="headerlink" title="取消自动打开软键盘"></a>取消自动打开软键盘</h2><p>默认情况进入Login Activity，会自动获取第一个输入框的焦点。</p>
<p>显得不方便以及不美观，在AndroidManifest.xml相应的Activity中添加：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:windowSoftInputMode=&quot;stateHidden|stateAlwaysHidden&quot;</span><br></pre></td></tr></table></figure>
<p><br /></p>
<h2 id="分割线的实现"><a href="#分割线的实现" class="headerlink" title="分割线的实现"></a>分割线的实现</h2><p>使用一个自定义宽高以及颜色的View实现，布局文件：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;android.support.constraint.ConstraintLayout</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">    android:layout_marginTop=&quot;128dp&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;View</span><br><span class="line">        android:id=&quot;@+id/divider_left&quot;</span><br><span class="line">        android:layout_width=&quot;128dp&quot;</span><br><span class="line">        android:layout_height=&quot;1dp&quot;</span><br><span class="line">        android:background=&quot;@android:color/darker_gray&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/textView3&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginEnd=&quot;3dp&quot;</span><br><span class="line">        android:layout_marginStart=&quot;3dp&quot;</span><br><span class="line">        android:text=&quot;@string/login_or&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;@id/divider_right&quot;</span><br><span class="line">        app:layout_constraintStart_toStartOf=&quot;@id/divider_left&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;View</span><br><span class="line">        android:id=&quot;@+id/divider_right&quot;</span><br><span class="line">        android:layout_width=&quot;128dp&quot;</span><br><span class="line">        android:layout_height=&quot;1dp&quot;</span><br><span class="line">        android:background=&quot;@android:color/darker_gray&quot;</span><br><span class="line">        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintEnd_toEndOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintTop_toTopOf=&quot;parent&quot;</span><br><span class="line">        app:layout_constraintVertical_bias=&quot;0.47&quot; /&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><br /></p>
<h2 id="按钮显示图片"><a href="#按钮显示图片" class="headerlink" title="按钮显示图片"></a>按钮显示图片</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;Button</span><br><span class="line">    android:id=&quot;@+id/yiban_sign_in_button&quot;</span><br><span class="line">    style=&quot;?android:textAppearanceSmall&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">    android:layout_marginBottom=&quot;16dp&quot;</span><br><span class="line">    android:layout_marginTop=&quot;16dp&quot;</span><br><span class="line">    android:background=&quot;@color/yiban_btn&quot;</span><br><span class="line">    android:drawableLeft=&quot;@drawable/ic_yibanlogo&quot; <span class="comment">&lt;!-- 左侧显示的图片 --&gt;</span></span><br><span class="line">    android:drawablePadding=&quot;72dp&quot; <span class="comment">&lt;!-- 文字与图片的间隔 --&gt;</span></span><br><span class="line">    android:gravity=&quot;center_vertical&quot; <span class="comment">&lt;!-- 只垂直居中 --&gt;</span></span><br><span class="line">    android:paddingStart=&quot;16dp&quot; <span class="comment">&lt;!-- 设置图片与左侧的Padding --&gt;</span></span><br><span class="line">    android:text=&quot;@string/login_viaYiban&quot;</span><br><span class="line">    android:textColor=&quot;@color/white&quot;</span><br><span class="line">    android:textStyle=&quot;bold&quot; /&gt;</span><br></pre></td></tr></table></figure>
<p>默认似乎是文字在图片之外的空间内居中，而不是在按钮整个宽度居中。</p>
<p>为方便这里微调间距解决，理论上也可以重写Button解决。</p>
<p><br /></p>
<h2 id="Toolbar-深色水波纹-白色文字"><a href="#Toolbar-深色水波纹-白色文字" class="headerlink" title="Toolbar 深色水波纹 + 白色文字"></a>Toolbar 深色水波纹 + 白色文字</h2><p>默认的<code>ThemeOverlay.AppCompat.Dark.ActionBar</code>是白色文字+白色水波纹，结果我们的背景色过于浅色，白色水波纹几乎看不见。</p>
<p>修改theme实现</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;AppTheme.AppBarOverlay&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;ThemeOverlay.AppCompat.ActionBar&quot;</span>&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:textColorPrimary&quot;</span>&gt;</span>@android:color/white<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://www.jianshu.com/p/ac56f11e7ce1">Material Design之 AppbarLayout 开发实践总结 - 简书 </a> </p>
<p><a href="https://blog.csdn.net/briblue/article/details/77075198">细说 AppbarLayout,如何理解可折叠 Toolbar 的定制 - CSDN博客 </a> </p>
<p><a href="https://www.jianshu.com/p/d159f0176576">玩转AppBarLayout，更酷炫的顶部栏 - 简书 </a> </p>
<p><a href="http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2014/0925/1713.html">android官方侧滑菜单DrawerLayout详解 - 泡在网上的日子 </a> </p>
<p><a href="https://www.jianshu.com/p/4a5868f2bda9">色彩样式 - Material design 设计指南 - 简书 </a> </p>
<p><a href="https://htmlcolorcodes.com/zh/yanse-biao/material-design-yanse-biao/">Material Design颜色表 — HTML颜色代码 </a> </p>
<p><a href="https://blog.csdn.net/mp624183768/article/details/77447991">Android Toolbar使用系统原生返回键，并改变其颜色，自定义图片替换系统原生返回键 - CSDN博客 </a> </p>
<p><a href="https://www.jianshu.com/p/9aee8783feb2">怎么使用Toolbar之给Toolbar加上动画 - 简书 </a> </p>
<p><a href="https://www.v2ex.com/t/235795">如何让所有 View 都可以带上点击的水波纹效果? - V2EX </a> </p>
<p><a href="https://www.jianshu.com/p/38bacd1287df">为什么我的Material Design程序点击时没有波纹扩散效果 - 简书 </a> </p>
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>人升开发日志#6 | 6/19 Launch Screen</title>
    <url>/post/a1903a1d.html</url>
    <content><![CDATA[<p>当我们打开 app 的时候，可能会出现一段短暂的白屏或者黑屏界面，这个界面就是 <code>Launch Screen</code>。</p>
<p><code>Launch Screen</code>是为了优化用户体验而存在的，一点击就出现一个界面，让用户有流畅的感觉。</p>
<p>然而，如果只是纯色的白或者黑，就有点丑了。</p>
<p>一般的做法是放logo以及标语。</p>
<p><strong><code>Launch Screen</code> 实际上是一种 Theme。</strong></p>
<p>**所以我们可以用修改Theme的方式来自定义我们的<code>Launch Screen</code>。</p>
<p><strong>我们实现的只显示logo的Launch Screen（可能会修改）：</strong></p>
 <img src="/post/a1903a1d/01.jpg" class="">
<a id="more"></a>
<p><br /></p>
<h1 id="新建SplashActivity"><a href="#新建SplashActivity" class="headerlink" title="新建SplashActivity"></a>新建SplashActivity</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> net.sarasarasa.lifeup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by AyagiKei on 2018/6/19 0019.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SplashActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">            Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, WelcomeActivity.class);</span><br><span class="line">            startActivity(intent);</span><br><span class="line">            finish();</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注意，这里并不需要加载ContentView。</strong></p>
<p>这个页面将作为我们的启动页面，作简单的判断然后跳转到其他Activity。</p>
<p><br /></p>
<h1 id="注册成启动Activity，更换Theme"><a href="#注册成启动Activity，更换Theme" class="headerlink" title="注册成启动Activity，更换Theme"></a>注册成启动Activity，更换Theme</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;activity</span><br><span class="line">    android:name=&quot;.SplashActivity&quot;</span><br><span class="line">    android:label=&quot;@string/app_name&quot;</span><br><span class="line">    android:theme=&quot;@style/AppTheme.SplashTheme&quot;&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>将SplashActivity设为启动Activity。</strong><br>更改AndroidManifest.xml：</p>
<p><strong>同时将Theme设为<code>AppTheme.SplashTheme</code>，我们将在下一步创建这个Theme。</strong></p>
<p><br /></p>
<h1 id="新建Theme"><a href="#新建Theme" class="headerlink" title="新建Theme"></a>新建Theme</h1><p>在<code>styles.xml</code>文件中修改或添加：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;style name=<span class="string">&quot;AppTheme.NoActionBar&quot;</span>&gt;</span><br><span class="line">    &lt;item name=&quot;windowActionBar&quot;&gt;false&lt;/item&gt;</span><br><span class="line">    &lt;item name=&quot;windowNoTitle&quot;&gt;true&lt;/item&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;style name=<span class="string">&quot;AppTheme.TranslucentTheme&quot;</span> parent=<span class="string">&quot;AppTheme.NoActionBar&quot;</span>&gt;</span><br><span class="line">    &lt;item name=&quot;android:windowTranslucentStatus&quot;&gt;true&lt;/item&gt;</span><br><span class="line">    &lt;item name=&quot;android:windowTranslucentNavigation&quot;&gt;false&lt;/item&gt;</span><br><span class="line">    &lt;item name=&quot;android:statusBarColor&quot;&gt;@android:color/transparent&lt;/item&gt;</span><br><span class="line">    &lt;item name=&quot;android:background&quot;&gt;@android:color/transparent&lt;/item&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;style name=<span class="string">&quot;AppTheme.SplashTheme&quot;</span> parent=<span class="string">&quot;AppTheme.TranslucentTheme&quot;</span>&gt;</span><br><span class="line">    &lt;item name=&quot;android:background&quot;&gt;@drawable/splash_layers&lt;/item&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>
<p>其实就是隐藏各种状态栏什么的，和我们引导页做的事情是一样的。</p>
<p><strong>所以我们这里直接继承了引导页的Theme然后更改背景。</strong></p>
<p>将背景设为<code>@drawable/splash_layers</code>，这个文件我们下一步再创建。</p>
<p><br /></p>
<h1 id="创建背景文件"><a href="#创建背景文件" class="headerlink" title="创建背景文件"></a>创建背景文件</h1><p>在drawable中创建splash_layers.xml：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layer-list</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@color/white&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span></span><br><span class="line">        &lt;bitmap</span><br><span class="line">            android:gravity=&quot;center&quot;</span><br><span class="line">            android:src=&quot;@mipmap/icon&quot; /&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">layer-list</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>我们这里使用 <code>layer-list</code> 来作为我们的背景。</p>
<blockquote>
<p>layer-list中，越后的item，图层越在上层。</p>
</blockquote>
<p><strong>当然，你也可以选择普通的图片作为背景图。</strong></p>
<p><strong>第一个item就是背景的白色。</strong></p>
<p><strong>第二个item就是我们的logo。</strong></p>
<blockquote>
<p>（这里引入的mipmap最好宽高相等？否则可能会出现奇怪的情况）</p>
</blockquote>
<p><br /></p>
<h1 id="设置跳转"><a href="#设置跳转" class="headerlink" title="设置跳转"></a>设置跳转</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> net.sarasarasa.lifeup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.content.SharedPreferences;</span><br><span class="line"><span class="keyword">import</span> android.content.SharedPreferences.Editor;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by AyagiKei on 2018/6/19 0019.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SplashActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断是不是第一次打开应用</span></span><br><span class="line">        SharedPreferences sharedPreferences = getSharedPreferences(<span class="string">&quot;status&quot;</span>, MODE_PRIVATE);</span><br><span class="line">        <span class="keyword">boolean</span> isFirst = sharedPreferences.getBoolean(<span class="string">&quot;isFirst&quot;</span>, <span class="keyword">true</span>);</span><br><span class="line">        Editor editor = sharedPreferences.edit();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isFirst) &#123;</span><br><span class="line">            <span class="comment">//第一次进入的时候，跳转到引导页</span></span><br><span class="line">            Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, WelcomeActivity.class);</span><br><span class="line">            startActivity(intent);</span><br><span class="line">            finish();</span><br><span class="line">            editor.putBoolean(<span class="string">&quot;isFirst&quot;</span>, <span class="keyword">false</span>);</span><br><span class="line">            editor.commit();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//否则，进入主页面</span></span><br><span class="line">            Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, MainActivity.class);</span><br><span class="line">            startActivity(intent);</span><br><span class="line">            finish();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>我们使用<code>SharedPreferences</code>来保存用户是否是第一次打开APP，然后进行不同的Activity跳转。</strong></p>
<p><br /></p>
<h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://www.jianshu.com/p/6a863fac3f58">https://www.jianshu.com/p/6a863fac3f58</a></p>
<p><a href="https://antonioleiva.com/branded-launch-screen/">https://antonioleiva.com/branded-launch-screen/</a></p>
<p><a href="https://blog.csdn.net/u010386612/article/details/79039937">https://blog.csdn.net/u010386612/article/details/79039937</a></p>
<p><a href="https://www.jianshu.com/p/a859b1250bcb">https://www.jianshu.com/p/a859b1250bcb</a></p>
<p><a href="https://juejin.im/post/58ad90518ac2472a2ad9b684">https://juejin.im/post/58ad90518ac2472a2ad9b684</a></p>
<p><a href="https://keeganlee.me/post/android/20150909">https://keeganlee.me/post/android/20150909</a></p>
<p><a href="https://blog.csdn.net/qq_26650589/article/details/53738176">https://blog.csdn.net/qq_26650589/article/details/53738176</a></p>
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>人升开发日志#5 | 6/17 布局复用</title>
    <url>/post/7c1546cb.html</url>
    <content><![CDATA[<p>我们之前做引导页的时候，是一个页面一个xml布局文件。</p>
<p>这些布局文件其实只有些许不同，只是加载的动画不同、TextView显示的文本不同，最后一页多了个按钮而已。</p>
<p>实际上，我们可以只用一个xml布局文件，然后在代码中实现各个页面的异化。</p>
<a id="more"></a>
<p><br /></p>
<h1 id="最终代码"><a href="#最终代码" class="headerlink" title="最终代码"></a>最终代码</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">WelcomeFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String ARG_SECTION_NUMBER = <span class="string">&quot;section_number&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span>[] arrAnimation =</span><br><span class="line">            &#123;R.raw.done, R.raw.animated_graph, R.raw.trophy, R.raw.floating_cloud&#125;;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span>[] arrTitleText =</span><br><span class="line">            &#123;R.string.page1_title, R.string.page2_title, R.string.page3_title, R.string.page4_title&#125;;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span>[] arrContentText =</span><br><span class="line">            &#123;R.string.page1_content, R.string.page2_content, R.string.page3_content, R.string.page4_content&#125;;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">boolean</span> isCreate = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">private</span> View rootView;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WelcomeFragment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建 WelcomeFragment 实例</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sectionNumber 第几页</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> WelcomeFragment</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> WelcomeFragment <span class="title">newInstance</span><span class="params">(<span class="keyword">int</span> sectionNumber)</span> </span>&#123;</span><br><span class="line">        WelcomeFragment fragment = <span class="keyword">new</span> WelcomeFragment();</span><br><span class="line">        Bundle args = <span class="keyword">new</span> Bundle();</span><br><span class="line">        args.putInt(ARG_SECTION_NUMBER, sectionNumber);</span><br><span class="line">        fragment.setArguments(args);</span><br><span class="line">        <span class="keyword">return</span> fragment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container,</span></span></span><br><span class="line"><span class="function"><span class="params">                             Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        LottieAnimationView animationViews = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">int</span> iPage = getArguments().getInt(ARG_SECTION_NUMBER);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//rootView = inflater.inflate(arrFragment[iPage], container, false);</span></span><br><span class="line">        rootView = inflater.inflate(R.layout.fragment_welcome_page, container, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据页面设置动画、文本、背景颜色</span></span><br><span class="line">        animationViews = rootView.findViewById(R.id.animation_view);</span><br><span class="line">        animationViews.setAnimation(arrAnimation[iPage], LottieAnimationView.CacheStrategy.None);</span><br><span class="line">        TextView titleTextView = rootView.findViewById(R.id.title_text);</span><br><span class="line">        titleTextView.setText(arrTitleText[iPage]);</span><br><span class="line">        TextView contentTextView = rootView.findViewById(R.id.content_text);</span><br><span class="line">        contentTextView.setText(arrContentText[iPage]);</span><br><span class="line">        LinearLayout linearLayout = rootView.findViewById(R.id.linearLayout);</span><br><span class="line">        linearLayout.setBackgroundColor(PAGE_COLOR[iPage]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Button button = rootView.findViewById(R.id.welcome_btn);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//针对各个界面进行异化处理</span></span><br><span class="line">        <span class="comment">//第一个页面在创建后不会执行setUserVisibleHint方法，所以要手动播放动画。</span></span><br><span class="line">        <span class="keyword">if</span> (iPage == <span class="number">0</span>) &#123;</span><br><span class="line">            animationViews.setPadding(DensityUtil.dp2px(<span class="keyword">this</span>.getContext(), <span class="number">25</span>), <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            animationViews.playAnimation();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (iPage == <span class="number">3</span>) &#123;</span><br><span class="line">            titleTextView.setTextColor(<span class="number">0XFF000000</span>);</span><br><span class="line">            button.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            contentTextView.setTextColor(<span class="number">0XFFFFFFFF</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        isCreate = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">return</span> rootView;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    ....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其实没什么好说的，就是找出各个要异化的View，然后进行异化（根据页面设置动画、文本、背景颜色）。</p>
<p>xml中的按钮默认隐藏，当为第四页的时候才设置为显示。</p>
<p>当然，xml的设置和代码有些不同。</p>
<p>这里有些坑：</p>
<h1 id="代码中使用DP单位"><a href="#代码中使用DP单位" class="headerlink" title="代码中使用DP单位"></a>代码中使用DP单位</h1><p>添加一个工具类<code>DensityUtil</code>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.util.TypedValue;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DensityUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据手机的分辨率从 dp 的单位 转成为 px(像素)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">dp2px</span><span class="params">(Context context, <span class="keyword">float</span> dpVal)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,</span><br><span class="line">                dpVal, context.getResources().getDisplayMetrics());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据手机的分辨率从 px(像素) 的单位 转成为 dp</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">px2dip</span><span class="params">(Context context, <span class="keyword">float</span> pxValue)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">float</span> scale = context.getResources().getDisplayMetrics().density;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>) (pxValue / scale + <span class="number">0.5f</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><br /></p>
<h1 id="在代码中使用默认Attr值"><a href="#在代码中使用默认Attr值" class="headerlink" title="在代码中使用默认Attr值"></a>在代码中使用默认Attr值</h1><p>这个较为繁琐，我直接使用曲线救国的方法。</p>
<p>XML中默认使用这个attr数值，然后代码中异化其他数值。</p>
<p><strong>如果要在代码中使用，可以参考以下文章：</strong></p>
<p><a href="http://solo.farbox.com/blog/how-to-get-value-of-attr-in-code">http://solo.farbox.com/blog/how-to-get-value-of-attr-in-code</a></p>
<p><a href="http://oliveexcel.iteye.com/blog/2227992">http://oliveexcel.iteye.com/blog/2227992</a></p>
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>从领取Github教育礼包到DigitalOcean购买服务器</title>
    <url>/post/2d5d76b2.html</url>
    <content><![CDATA[<blockquote>
<p><strong>本文首发于<a href="https://www.jianshu.com/p/c5e7721d886c">我的简书页面</a>。</strong></p>
</blockquote>
<p>自己想要一台国外的服务器用作某些用途，恰好自己学校又提供了教育邮箱。于是就打算拿Github的教育礼包中DigitalOcean的50美元优惠码来使用一年。</p>
<p>不过根据网上的一些文章，途中也遇到了一些坑。</p>
<p>最后也顺利地在2018/6/11一天内搞定了。所以打算记录一下自己的全过程，以供大家参考。</p>
<h1 id="你所需要准备的东西"><a href="#你所需要准备的东西" class="headerlink" title="你所需要准备的东西"></a>你所需要准备的东西</h1><ul>
<li>Github 账号</li>
<li>一个教育邮箱（edu或者是edu.cn结尾都可以）<br>如果没有的话，也可以用学生证之类的东西。不过我没试过。</li>
<li>一个PayPal账号（你需要至少支付5美元）</li>
</ul>
<a id="more"></a>
<p><br/></p>
<hr>
<h1 id="1-提交-Github-教育礼包申请"><a href="#1-提交-Github-教育礼包申请" class="headerlink" title="1 提交 Github 教育礼包申请"></a>1 提交 Github 教育礼包申请</h1><p>在 <a href="https://education.github.com/pack">https://education.github.com/pack</a> 点击 Get Your Pack<br><img src="/post/2d5d76b2/01.jpg" class=""></p>
<p>随后填写相关信息：<br><img src="/post/2d5d76b2/02.jpg" class=""></p>
<p><strong>最好使用教育邮箱申请，这样申请通过得比较快。</strong><br><strong>如果你注册用的邮箱不是教育邮箱的话，要先去添加教育邮箱，并且验证一下。</strong></p>
<p>最下方有个How do you plan to use GitHub？（你计划怎么用 Github ），简单的用英文描述一下就好。比如：I want to learn coding and try to make contribution to the community.</p>
<p>提交后，等待一段时间审核通过。<br>就可以在这个页面看到你领取到的一大堆<strong>羊毛</strong>。</p>
<p>找到 DigitalOcean，获取你的优惠码。<br><img src="/post/2d5d76b2/03.jpg" class=""><br><br/></p>
<hr>
<h1 id="2-注册DigitalOcean账号"><a href="#2-注册DigitalOcean账号" class="headerlink" title="2 注册DigitalOcean账号"></a>2 注册DigitalOcean账号</h1><p>注册的过程我没有截图，这里简单的描述一下吧。</p>
<p>我是通过别人的邀请链接注册的，这样可以得到10美元的被邀请奖励，邀请人也能获得一定的奖励。<br>这里贴一下我的<a href="https://m.do.co/c/42290aaa9a5c">邀请链接</a> ~ </p>
<p><strong>注册途中需要绑定一个社交账号，可以绑定Facebook、Github还有Twitter账号。</strong><br>我选择的是选择绑定Github账号，授权一下就好了。</p>
<p><strong>然后有一个步骤是要绑定信用卡或者用PayPal支付5美元。</strong><br>我没有信用卡，选择的是用PayPal支付5美元。</p>
<p>随后有一个审核阶段，可能要等上数个小时才能继续。<br><img src="/post/2d5d76b2/04.jpg" class=""><br><br/></p>
<hr>
<h1 id="3-通过DigitalOcean审核并且兑换优惠码"><a href="#3-通过DigitalOcean审核并且兑换优惠码" class="headerlink" title="3 通过DigitalOcean审核并且兑换优惠码"></a>3 通过DigitalOcean审核并且兑换优惠码</h1><h2 id="3-1-通过审核"><a href="#3-1-通过审核" class="headerlink" title="3.1 通过审核"></a>3.1 通过审核</h2><p>过了挺长一段时间，收到邮件说要填写一些额外的信息。</p>
<img src="/post/2d5d76b2/05.jpg" class="">
<p>点击邮件那个链接，进去填一些信息：手机号码（国内手机号码前面需要+86），所在地、姓名（我直接打了中文），还有打算用DigitalOcean做些什么（简单描述即可）。<br><img src="/post/2d5d76b2/06.jpg" class=""></p>
<p>又过了好一段时间，收到了两封邮件。<br>第一封是要确认PayPal支付。<br><img src="/post/2d5d76b2/07.jpg" class=""></p>
<p>简单回复：</p>
<blockquote>
<p>Hi,the paypal payment is an authorized payment.</p>
</blockquote>
<p>第二封邮件：<br><img src="/post/2d5d76b2/08.jpg" class=""></p>
<p>简单回复：</p>
<blockquote>
<p>hi,i have replied to that email.</p>
</blockquote>
<p>不久之后，就收到了解除了账号限制的邮件。<br><img src="/post/2d5d76b2/09.jpg" class=""></p>
<h2 id="3-2-兑换优惠码"><a href="#3-2-兑换优惠码" class="headerlink" title="3.2 兑换优惠码"></a>3.2 兑换优惠码</h2><p>理论上，在 <strong>Settings</strong> 里面的 <strong>Billing</strong> 应该会有一个兑换优惠码的地方。<br>但是我怎么都找不到。<br><img src="/post/2d5d76b2/10.jpg" class=""></p>
<p>这时候就要找客服了。<br>拉到页面最低端，点击<strong>Support</strong>。<br>然后再拉到页面下面，点击<strong>Contact Support</strong>。<br><img src="/post/2d5d76b2/11.jpg" class=""></p>
<p><strong>按以下图片所示填写表单：</strong><br><img src="/post/2d5d76b2/12.jpg" class=""></p>
<p>过了大约半个小时，客服就有了回复：<br><img src="/post/2d5d76b2/13.jpg" class=""></p>
<p>至此，我们的账号已经就有了65美元余额。</p>
<blockquote>
<p>50 优惠劵 + 10 邀请链接注册 + 5 Paypal支付</p>
</blockquote>
<p><br/></p>
<hr>
<h1 id="4-购买服务器并且连接上"><a href="#4-购买服务器并且连接上" class="headerlink" title="4 购买服务器并且连接上"></a>4 购买服务器并且连接上</h1><p>点击网站首页的 <strong>Create</strong> 中的 <strong>Droplets</strong>。<br><img src="/post/2d5d76b2/14.jpg" class=""></p>
<p><strong>调整各种配置：</strong></p>
<blockquote>
<p>服务器所在地的选择可以先用<a href="http://speedtest-sfo1.digitalocean.com/">这个网站</a>测速。</p>
</blockquote>
<img src="/post/2d5d76b2/15.jpg" class="">
<p>创建后，你会收到一封内含服务器ip地址、用户名、密码的邮件。</p>
<img src="/post/2d5d76b2/16.jpg" class="">
<p>接着我们就可以用 <a href="https://www.putty.org/">Putty</a> 连接上服务器了。</p>
<img src="/post/2d5d76b2/17.jpg" class="">
<p>会弹出一个警告框，选择<strong>是</strong>。<br>然后进入终端，输入用户名和密码，然后设置新密码。</p>
<p>你就可以在里面为所欲为了~<br>无论是<a href="https://www.flyzy2005.com/fan-qiang/shadowsocks/install-shadowsocks-in-one-command/"><strong>搭建ss</strong></a>、搭建web服务器还是只是玩玩linux都可以。</p>
]]></content>
      <categories>
        <category>技术</category>
        <category>记录</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>SSH</tag>
        <tag>云服务器</tag>
        <tag>DigitalOcean</tag>
      </tags>
  </entry>
  <entry>
    <title>人升开发日志#4 | 6/11 多语言</title>
    <url>/post/3ffb3959.html</url>
    <content><![CDATA[<p>当你在页面布局文件中写死字符串（Hardcoding string）的时候，编译器会报一个警告，让你用<code>@string</code>替代。</p>
<p><code>@string</code>就是让程序在运行状态，再去找相应的资源文件，加载其中的字符串内容。</p>
<p>而 Android 会在不同的情况下加载不同的资源文件，这就是我们实现多语言的基础。</p>
<p><strong>最终效果：</strong></p>
 <img src="/post/3ffb3959/00.jpg" class="">
<a id="more"></a>
<p><br /></p>
<h1 id="新建中文字符串资源文件夹"><a href="#新建中文字符串资源文件夹" class="headerlink" title="新建中文字符串资源文件夹"></a>新建中文字符串资源文件夹</h1><p>在 <code>res/values</code> 上右键点击<code>New</code>→<code>Values Resource File</code></p>
 <img src="/post/3ffb3959/01.jpg" class="">
<p>然后选择<code>Locale</code>，再选择<code>zh:Chinese</code> ，</p>
 <img src="/post/3ffb3959/02.jpg" class="">
 <img src="/post/3ffb3959/03.jpg" class="">
<p><br /></p>
<h1 id="设置多语言"><a href="#设置多语言" class="headerlink" title="设置多语言"></a>设置多语言</h1><p>这里作一个小例子讲解。</p>
<p>假如，你在任一页面布局文件中有一个TextView设置如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;TextView</span><br><span class="line">    android:id=&quot;@+id/message&quot;</span><br><span class="line">    android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">    android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">    android:layout_marginStart=&quot;@dimen/activity_horizontal_margin&quot;</span><br><span class="line">    android:layout_marginTop=&quot;@dimen/activity_vertical_margin&quot;</span><br><span class="line">    android:text=&quot;Home&quot;</span><br><span class="line">    app:layout_constraintLeft_toLeftOf=&quot;parent&quot;</span><br><span class="line">    app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;</span><br></pre></td></tr></table></figure>
<p><strong>为了让“Home”在中文环境中显示为“首页”，英文环境保持“Home”。</strong></p>
<p>我们需要进行以下步骤：</p>
<h2 id="第一步-写成-string形式"><a href="#第一步-写成-string形式" class="headerlink" title="第一步 写成@string形式"></a>第一步 写成@string形式</h2><p>也就是将</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:text=&quot;Home&quot;</span><br></pre></td></tr></table></figure>
<p>改成</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:text=&quot;@string/home&quot;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>@string斜杆后面的home类似于变量名，你可以换成其他的字符串</p>
</blockquote>
<h2 id="第二步-设置中文的字符串映射"><a href="#第二步-设置中文的字符串映射" class="headerlink" title="第二步 设置中文的字符串映射"></a>第二步 设置中文的字符串映射</h2><p>在<strong>中文字符串资源文件夹（也就是res\values-zh）</strong>内新建一个<code>strings.xml</code>文件。</p>
<p>填入以下内容：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;home&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="第三步-设置英文映射"><a href="#第三步-设置英文映射" class="headerlink" title="第三步 设置英文映射"></a>第三步 设置英文映射</h2><p>同理，我们直接在原先的res\values的strings.xml内新增以下内容即可：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;home&quot;</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><br /></p>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>关于测试我没找到好的方法测试，直接调整系统语言，然后运行APP进行测试。</p>
<p>不过理论上也可以通过代码更改APP获取资源文件夹的路径，并且以此实现APP内语言修改功能。</p>
<p>以后再说吧~</p>
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>人升开发日志#3 | 6/8 自适应图标</title>
    <url>/post/eac283fe.html</url>
    <content><![CDATA[<p>将开发日志#1做的图标加入到应用中，但是 Android O 加入了一个叫做 Adaptive Icons 的特性，为了适配这个性质稍微有点麻烦。</p>
<p><br /></p>
<h1 id="设置AndroidManifest-xml"><a href="#设置AndroidManifest-xml" class="headerlink" title="设置AndroidManifest.xml"></a>设置AndroidManifest.xml</h1><p>在 <code>AndroidManifest.xml</code> 的<code>&lt;application</code>后面加上</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:icon=&quot;@mipmap/ic_launcher&quot;</span><br><span class="line">android:roundIcon=&quot;@mipmap/ic_launcher&quot;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>icon 指的是普通图标</p>
<p>roundIcon 指的是圆形图标</p>
</blockquote>
<a id="more"></a>
<p><br /></p>
<h1 id="存入各个规格的PNG图片适配旧版本"><a href="#存入各个规格的PNG图片适配旧版本" class="headerlink" title="存入各个规格的PNG图片适配旧版本"></a>存入各个规格的PNG图片适配旧版本</h1><p>将 <code>mipmap-hdpi</code>、<code>mipmap-mdpi</code>、<code>mipmap-xhdpi</code>等各种规格的图片放入 <code>res\</code> 中。</p>
<p>然后新建一个文件夹 <code>mipmap-anydpi-v26</code>，里面新建一个 <code>ic_launcher.xml</code> 文件。</p>
<p><strong>文件内容如下：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">adaptive-icon</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">background</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/ic_launcher_background&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">foreground</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/ic_launcher_foreground&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">adaptive-icon</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>最后文件结构：</strong></p>
<img src="/post/eac283fe/01.jpg" class="">
<p><br/></p>
<h1 id="分离-SVG-前-背景"><a href="#分离-SVG-前-背景" class="headerlink" title="分离 SVG 前/背景"></a>分离 SVG 前/背景</h1><p>利用矢量图编辑工具，将前景保存为 <code>ic_launcher_foreground.svg</code>，背景为<code>ic_launcher_background.svg</code>。</p>
<p><strong>然后将 背景SVG 转换成 VectorDrawable 并且放到 <code>res/drawable</code>文件夹内：</strong></p>
<p>直接在 AS 中 <code>res/drawable</code>文件夹上右键→ <code>New</code> →<code>Vector Asset</code>就能将 svg 转换成 VectorDrawable 并且放到里面了。</p>
<p><br/></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.csdn.net/creeper_san/article/details/77916089">Adaptive Icons - Android O 自适应图标简单用法</a></p>
<p><a href="https://sspai.com/post/40213">理解 Android 的「自适应图标」</a></p>
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>人升开发日志#2 | 6/7 引导页</title>
    <url>/post/17b01d24.html</url>
    <content><![CDATA[<p>继续鸽需求文档，突然想要开始敲 Android 端的代码。</p>
<p><strong>本文主要涉及到：</strong></p>
<ul>
<li>ViewPager + Fragment 组合使用</li>
<li>沉浸式状态栏</li>
<li>页面指示器框架</li>
<li>使用 Lottie 框架显示动画</li>
<li>ViewPager 的简单优化</li>
<li>ViewPager 背景色渐变</li>
<li>Android Studio 录制手机屏幕</li>
</ul>
<p>先发一下最终效果：</p>
<img src="/post/17b01d24/show.gif" class="">
<a id="more"></a>
<p><br/></p>
<h1 id="ViewPager-Fragment-组合使用"><a href="#ViewPager-Fragment-组合使用" class="headerlink" title="ViewPager + Fragment 组合使用"></a>ViewPager + Fragment 组合使用</h1><p>引导页一般是多页设计，所以我们这里用到 ViewPager 来切换不同的 Fragment。</p>
<p>新建 Activity 的时候可以选择 Tabbed Activity 作参考。</p>
<p>里面实现了 ViewPager 和 Fragment 的组合使用。</p>
<p>毕竟不是教程文档，我们这里仅做简单解释。</p>
<p><strong>首先是活动布局文件 <code>activity_welcome.xml</code>：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.design.widget.CoordinatorLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/main_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;net.sarasarasa.lifeup.WelcomeActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;android.support.v4.view.ViewPager</span><br><span class="line">        android:id=&quot;@+id/container&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;match_parent&quot;</span><br><span class="line">        app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;me.relex.circleindicator.CircleIndicator</span><br><span class="line">        android:id=&quot;@+id/indicator&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;48dp&quot;</span><br><span class="line">        android:layout_marginBottom=&quot;32dp&quot;</span><br><span class="line"></span><br><span class="line">        app:layout_anchor=&quot;@+id/container&quot;</span><br><span class="line">        app:layout_anchorGravity=&quot;bottom|center&quot; /&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.design.widget.CoordinatorLayout</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>Fragment 布局文件：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/linearLayout&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;#4FC3F7&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingTop</span>=<span class="string">&quot;25dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;net.sarasarasa.lifeup.WelcomeActivity$WelcomeFragment&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:text=&quot;Sample Text&quot;</span><br><span class="line">        android:textAlignment=&quot;center&quot;</span><br><span class="line">        android:textColor=&quot;#FFFFFF&quot; /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>以下是Java代码部分：</strong></p>
<p><strong>实现自己的 Fragment 类：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">WelcomeFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String ARG_SECTION_NUMBER = <span class="string">&quot;section_number&quot;</span>;</span><br><span class="line">    View rootView;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WelcomeFragment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> WelcomeFragment <span class="title">newInstance</span><span class="params">(<span class="keyword">int</span> sectionNumber)</span> </span>&#123;</span><br><span class="line">        WelcomeFragment fragment = <span class="keyword">new</span> WelcomeFragment();</span><br><span class="line">        Bundle args = <span class="keyword">new</span> Bundle();</span><br><span class="line">        args.putInt(ARG_SECTION_NUMBER, sectionNumber);</span><br><span class="line">        fragment.setArguments(args);</span><br><span class="line">        <span class="keyword">return</span> fragment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container,</span></span></span><br><span class="line"><span class="function"><span class="params">                             Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        LottieAnimationView animationViews = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (getArguments().getInt(ARG_SECTION_NUMBER)) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                rootView = inflater.inflate(R.layout.fragment_welcome_page1, container, <span class="keyword">false</span>);</span><br><span class="line">                animationViews = (LottieAnimationView) rootView.findViewById(R.id.animation_view);</span><br><span class="line">                animationViews.setAnimation(R.raw.done, LottieAnimationView.CacheStrategy.None);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                rootView = inflater.inflate(R.layout.fragment_welcome_page2, container, <span class="keyword">false</span>);</span><br><span class="line">                ...</span><br><span class="line">                <span class="comment">//此处根据你的页数需求，可以加载不同的Fragment</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> rootView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>实现 FragmentPagerAdapter ：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SectionsPagerAdapter</span> <span class="keyword">extends</span> <span class="title">FragmentPagerAdapter</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Fragment mCurrentPrimaryItem;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SectionsPagerAdapter</span><span class="params">(FragmentManager fm)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(fm);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Fragment <span class="title">getItem</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> WelcomeFragment.newInstance(position + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> PAGE_NUMBER;</span><br><span class="line">        <span class="comment">//PAGE_NUMBER是声明的常量4，这里返回具体的页数即可。</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>然后在 Activity 的 onCreate 方法中加入：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">mSectionsPagerAdapter = <span class="keyword">new</span> SectionsPagerAdapter(getSupportFragmentManager());</span><br><span class="line"></span><br><span class="line">mViewPager = (ViewPager) findViewById(R.id.container);</span><br><span class="line">mViewPager.setOffscreenPageLimit(<span class="number">0</span>);</span><br><span class="line">mViewPager.setAdapter(mSectionsPagerAdapter);</span><br></pre></td></tr></table></figure>
<p><br /></p>
<h1 id="沉浸式状态栏"><a href="#沉浸式状态栏" class="headerlink" title="沉浸式状态栏"></a>沉浸式状态栏</h1><p>经过观察可以发现我们这样写布局，最上层就是 Fragment 。</p>
<p>只是将状态栏设成固定颜色的时候是行不通的，因为我们的多个页面不同颜色，滑动的时候状态栏颜色会是单独一块。</p>
<p>当然，解决办法很简单，只要将状态栏隐藏就可以了。</p>
<p>而且，我们不需要 ActionBar。</p>
<p><strong>在 style.xml 中加入：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;AppTheme.NoActionBar&quot;</span>&gt;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;windowActionBar&quot;</span>&gt;</span>false<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;windowNoTitle&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;AppTheme.TranslucentTheme&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;AppTheme.NoActionBar&quot;</span>&gt;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowTranslucentStatus&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:windowTranslucentNavigation&quot;</span>&gt;</span>false<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:statusBarColor&quot;</span>&gt;</span>@android:color/transparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>我们在这里新建一个 theme ，并且让他继承自 NoActionBar，然后设置状态栏为透明。</p>
<p><strong>这样会出现一个小问题：</strong></p>
<p>整个布局的内容会向上移动顶到状态栏。</p>
<p>我们只需要在最上层布局元素加一个 <code>android:paddingTop=&quot;25dp&quot;</code>即可。</p>
<p><br/></p>
<h1 id="页面指示器框架"><a href="#页面指示器框架" class="headerlink" title="页面指示器框架"></a>页面指示器框架</h1><p>指的是下面的小圆点，指示当前页面。</p>
<p>Google 的库中没有提供直接的实现，</p>
<p>如果自己弄的话要控制每个圆点的大小颜色也挺繁琐的。</p>
<p>所以，第一步当然是找一找有没有现成的轮子。</p>
<p>我们使用的是一个<a href="https://github.com/ongakuer/CircleIndicator">轻量级的框架<strong>CircleIndicator</strong></a>。</p>
<p><strong>使用方法也很简单：</strong></p>
<ol>
<li><p>首先添加 Gradle 依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    compile &#x27;me.relex:circleindicator:1.2.2@aar&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>activity_welcome.xml 布局中添加：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;me.relex.circleindicator.CircleIndicator</span><br><span class="line">    android:id=&quot;@+id/indicator&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;48dp&quot;</span><br><span class="line">    android:layout_marginBottom=&quot;32dp&quot;</span><br><span class="line">   </span><br><span class="line">    app:layout_anchor=&quot;@+id/container&quot;</span><br><span class="line">    app:layout_anchorGravity=&quot;bottom|center&quot; /&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改一下onCreate方法内的关于ViewPager的代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">mViewPager = (ViewPager) findViewById(R.id.container);</span><br><span class="line">CircleIndicator indicator = (CircleIndicator) findViewById(R.id.indicator);</span><br><span class="line">mViewPager.setAdapter(mSectionsPagerAdapter);</span><br><span class="line">indicator.setViewPager(mViewPager); <span class="comment">//这句一定要在viewPager设置Adapter写</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><br/></p>
<h1 id="使用-Lottie-框架显示动画"><a href="#使用-Lottie-框架显示动画" class="headerlink" title="使用 Lottie 框架显示动画"></a>使用 Lottie 框架显示动画</h1><p><a href="https://github.com/airbnb/lottie-android">Lottie</a> 是 Airbnb 出的一个开源动画框架，一个动画 json 文件就能在跨平台播放。</p>
<ol>
<li><p>首先，添加Gradle依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">  implementation &#x27;com.airbnb.android:lottie:2.5.4&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>这个依赖内间接依赖了， <code>compile &#39;com.android.support:support-v4:27.1.1&#39;</code>。</p>
<p>所以可能存在依赖冲突问题。可以统一版本来解决。</p>
<p><strong>或是参考<a href="https://www.jianshu.com/p/9b6d71e3c6fd">解决android gradle依赖中的冲突</a>。</strong></p>
</li>
<li><p>查阅<a href="http://airbnb.io/lottie/android/android.html#getting-started">官方文档</a>，尝试添加动画。</p>
<p>最简单的使用方式就是将动画 json 文件放入 res/raw 中，然后在布局文件加入以下代码：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;com.airbnb.lottie.LottieAnimationView</span><br><span class="line">    android:id=&quot;@+id/animation_view&quot;</span><br><span class="line">    android:layout_width=&quot;350dp&quot;</span><br><span class="line">    android:layout_height=&quot;350dp&quot;</span><br><span class="line">    android:layout_gravity=&quot;center&quot;</span><br><span class="line">    android:layout_marginTop=&quot;35dp&quot;</span><br><span class="line">   </span><br><span class="line">    android:paddingStart=&quot;50dp&quot;</span><br><span class="line">    app:lottie_autoPlay=&quot;false&quot;</span><br><span class="line">    app:lottie_loop=&quot;true&quot;</span><br><span class="line">    app:lottie_rawRes=&quot;@raw/done&quot; /&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这里以放入的 json 文件名为 done.json 为例。</p>
</blockquote>
</li>
</ol>
<p>那么还有一个问题，动画 json 文件哪里来呢？</p>
<ol>
<li>可以用 AE 自己制作。</li>
<li><a href="https://www.lottiefiles.com/">该网站</a>上有开源供免费使用的 json 文件。</li>
</ol>
<p>如果想要简单的修改颜色，可以用到 <a href="https://editor.lottiefiles.com/">lottie-editor</a>。</p>
<p><br/></p>
<h1 id="ViewPager-的简单优化"><a href="#ViewPager-的简单优化" class="headerlink" title="ViewPager 的简单优化"></a>ViewPager 的简单优化</h1><p>我们直接这样使用动画会发现会严重掉帧，特别是中间的页面。</p>
<p>这是因为 ViewPager 会自动缓存旁边的页面，并且动画一直在播放（？）。</p>
<p><strong>我们这里做一些简单的优化操作：</strong></p>
<ol>
<li><p>在 Activity 声明 <code>private WelcomeFragment arrWelcomeFragment[];</code>，并且在 onCreate() 的时候保存下来。不用每次都new一个。同时在适配器里重写<code>destroyItem(ViewGroup container, int position, Object object)</code>方法，然后在里面什么都不做，让其不会再自动销毁。</p>
</li>
<li><p><strong>用代码的时候载入动画，同时将缓存策略设为 None。</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">View rootView = inflater.inflate(arrFragment[iPage], container, <span class="keyword">false</span>);</span><br><span class="line">animationViews = rootView.findViewById(R.id.animation_view);</span><br><span class="line">animationViews.setAnimation(arrAnimation[iPage], LottieAnimationView.CacheStrategy.None);</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>改变播放策略，在转到该页再从零开始播放动画。</strong></p>
<p>将所有<code>LottieAnimationView</code>设为<code>app:lottie_autoPlay=&quot;false&quot;</code>。</p>
<p>在 Fragment 类中重写<code>setUserVisibleHint(boolean isVisibleToUser)</code>方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过 Fargment 的可见性控制动画的播放与暂停</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> isVisibleToUser</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserVisibleHint</span><span class="params">(<span class="keyword">boolean</span> isVisibleToUser)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.setUserVisibleHint(isVisibleToUser);</span><br><span class="line">    LottieAnimationView animationView = <span class="keyword">null</span>;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">if</span> (rootView != <span class="keyword">null</span>) &#123;</span><br><span class="line">        animationView = rootView.findViewById(R.id.animation_view);</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">if</span> (animationView != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (isVisibleToUser &amp;&amp; isCreate) &#123;</span><br><span class="line">            <span class="comment">//相当于onResume</span></span><br><span class="line">            animationView.playAnimation();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//相当于onPause</span></span><br><span class="line">            animationView.cancelAnimation();</span><br><span class="line">            animationView.setFrame(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里存在一个小问题，第一个 Fragment 在创建后不会调用这个方法。</p>
<p>所以第一个 Fragment 要在 onCreateView 的时候，就让她开始播放。</p>
</li>
</ol>
<p><br/></p>
<h1 id="ViewPager-背景色渐变"><a href="#ViewPager-背景色渐变" class="headerlink" title="ViewPager 背景色渐变"></a>ViewPager 背景色渐变</h1><p>渐变效果的实现主要参考了<a href="https://www.jianshu.com/p/9262811167eb">别人的代码</a>。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//ViewPager添加onPageChangeListener，实现颜色渐变效果</span></span><br><span class="line">mViewPager.addOnPageChangeListener(<span class="keyword">new</span> ViewPager.OnPageChangeListener() &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * ViewPager滑动回调方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> position 页签[0 ~ 3]</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> positionOffset 页百分比偏移[0F ~ 1F]</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> positionOffsetPixels 页像素偏移[0 ~ ViewPager的宽度]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageScrolled</span><span class="params">(<span class="keyword">int</span> position, <span class="keyword">float</span> positionOffset, <span class="keyword">int</span> positionOffsetPixels)</span> </span>&#123;</span><br><span class="line">        ArgbEvaluator evaluator = <span class="keyword">new</span> ArgbEvaluator(); <span class="comment">// ARGB求值器</span></span><br><span class="line">        <span class="keyword">int</span> evaluate = <span class="number">0x00FFFFFF</span>; <span class="comment">// 初始默认颜色（透明白）</span></span><br><span class="line">        <span class="keyword">if</span> (position == <span class="number">0</span>) &#123;</span><br><span class="line">            evaluate = (Integer) evaluator.evaluate(positionOffset, <span class="number">0XFF4FC3F7</span>, <span class="number">0XFFE4542F</span>); <span class="comment">// 根据positionOffset和第0页~第1页的颜色转换范围取颜色值</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (position == <span class="number">1</span>) &#123;</span><br><span class="line">            evaluate = (Integer) evaluator.evaluate(positionOffset, <span class="number">0XFFE4542F</span>, <span class="number">0XFF9575CD</span>); <span class="comment">// 根据positionOffset和第1页~第2页的颜色转换范围取颜色值</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (position == <span class="number">2</span>) &#123;</span><br><span class="line">            evaluate = (Integer) evaluator.evaluate(positionOffset, <span class="number">0XFF9575CD</span>, <span class="number">0XFFFFFFFF</span>); <span class="comment">// 根据positionOffset和第2页~第3页的颜色转换范围取颜色值</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            evaluate = <span class="number">0XFFFFFFFF</span>; <span class="comment">// 最终第3页的颜色</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//找到Fargment元素设置背景色</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; PAGE_NUMBER; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arrWelcomeFragment[i] != <span class="keyword">null</span> &amp;&amp; arrWelcomeFragment[i].getView() != <span class="keyword">null</span>) &#123;</span><br><span class="line">                arrWelcomeFragment[i].getView().setBackgroundColor(evaluate);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageSelected</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageScrollStateChanged</span><span class="params">(<span class="keyword">int</span> state)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p><br/></p>
<h1 id="Android-Studio-录制手机屏幕"><a href="#Android-Studio-录制手机屏幕" class="headerlink" title="Android Studio 录制手机屏幕"></a>Android Studio 录制手机屏幕</h1><p>一直没注意到 AS 有录制屏幕的功能，这次打算做 gif 的时候用到了。</p>
<p>搜索了一下说是在下方的 Monitor，但是找了半天没找到。</p>
<p>原来是改名为 Logcat 了。</p>
<p>具体位置在这里：</p>
<img src="/post/17b01d24/01.jpg" class="">
<p><br/></p>
<h1 id="Push-到-Github-时遇到的小问题解决"><a href="#Push-到-Github-时遇到的小问题解决" class="headerlink" title="Push 到 Github 时遇到的小问题解决"></a>Push 到 Github 时遇到的小问题解决</h1><p>一开始配置完 Git 和 Github 之后，发现 push 会失败。</p>
<p><strong>这时候要去 <code>Setting</code> → <code>Git SSH executable</code> 设为 <code>Native</code>。</strong></p>
<p>就解决了。</p>
<p><br/></p>
<h1 id="部分参考"><a href="#部分参考" class="headerlink" title="部分参考"></a>部分参考</h1><p><a href="https://www.jianshu.com/p/becf3c0dcf25">推荐4个Android引导页框架</a></p>
<p><a href="https://www.jianshu.com/p/9b6d71e3c6fd">解决android gradle依赖中的冲突</a></p>
<p><a href="https://www.jianshu.com/p/9262811167eb">Android - ViewPager进阶篇之渐变背景色</a></p>
<p><a href="https://www.jianshu.com/p/d86e31dcc97b">ViewPager使用详解(二):FragmentPagerAdapter</a></p>
]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>人升开发日志#1 | 6/1 APP 图标设计</title>
    <url>/post/1188c9f1.html</url>
    <content><![CDATA[<h1 id="名字由来"><a href="#名字由来" class="headerlink" title="名字由来"></a>名字由来</h1><p>初想过的项目名是“升级人生”、“游戏人生”之类，就想到了以”人“字为原型设计 APP 图标。</p>
<p>仅有一个”人“字未免显得有些单调，于是乎想到”升“字，那么就把”人“字的两笔换成向上升的形态？</p>
<p>APP 图标就由此诞生了。</p>
<p>最终稿是这个样子的：</p>
<embed src="http://sarasarasa.net/post/1188c9f1/01.svg" style="display:block;width:256px;height:256px" />



<a id="more"></a>
<p>接下来说说设计的全过程吧。</p>
<p><br /></p>
<hr>
<h1 id="绘制格式选择以及工具"><a href="#绘制格式选择以及工具" class="headerlink" title="绘制格式选择以及工具"></a>绘制格式选择以及工具</h1><p><strong>图标的绘制一般选用矢量图，原因：</strong></p>
<ol>
<li>图标一般需要多种规格，矢量图不失真方便调整</li>
<li>图标一般形状简单，矢量图绘制更为方便</li>
</ol>
<p><br /></p>
<p>具体用什么格式呢？</p>
<p>我们采用了 svg 格式。</p>
<p><strong>第一个原因是</strong>，Android 支持将 SVG 转换成 VectorDrawable。今后开发可能会用到。</p>
<p><strong>第二个原因是，</strong></p>
<p>我们设计的图标期望是 Material Design 设计风格的。</p>
<p>而我所想到的就是拥有着朝向右下角阴影风格的图标，也就是最终稿那个样子。</p>
<p>而且没有检索到具体要怎么做到这种效果，也没有找到这种效果具体的名称。</p>
<p>只模糊地得知可以利用路径的并且差操作做到？</p>
<p>不过，我找到了一个可以简单生成这种风格的<a href="https://makebig.coding.me/jaqen/mdpub/">网页工具</a>，该网站上传的文件必须是 SVG 格式。</p>
<p><br /></p>
<p><strong>那么，该用什么矢量图绘制工具呢？</strong></p>
<p>首先想到的当然是 Adobe 的 <strong>illustrator</strong>；</p>
<p>其次，我想到之前做 Android APP时候用到的一款免费开源的矢量图绘制工具 Inkscape 。</p>
<p>最后决定用 Inkscape，方便快捷而且符合操作习惯。</p>
<p><br /></p>
<hr>
<h1 id="开始绘制"><a href="#开始绘制" class="headerlink" title="开始绘制"></a>开始绘制</h1><p>首先，先造个“人”字。</p>
<p>首先想到用字符转换矢量图路径，但可能不太适用？很快就放弃了这个想法。</p>
<p>然后尝试了一下用<strong>钢笔工具</strong>（在 inkscape 里，被称作<strong>「绘制贝塞尔曲线和直线」</strong>工具）绘制，发现不会用emm。</p>
<p>最后采用了<strong>「绘制手绘线」</strong>工具，将平滑调整到最高，一次画一条边，勉勉强强画了一个<strong>「“人”形 with 两个箭头 」</strong>出来。</p>
<embed src="http://sarasarasa.net/post/1188c9f1/02.svg" style="display:block;width:256px;height:256px" />



<p><br /></p>
<p>接着，使用<strong>「选择并变换工具」</strong> 以及 <strong>「通过节点编辑路径」</strong>工具进行微调，删除不需要的路径节点，调整曲率等等。</p>
<p>最后封闭路径填充任意一种颜色。</p>
<blockquote class="blockquote-center"><br><br>MD风格图标生成器，启动！<br><br>无限转圈…<br><br>MD风格图标生成器，关闭！<br><br></blockquote>



<p>经过测试，发现刚画出来的稿子可以生成，微调之后的不能生成。</p>
<p>而且，此时是没有错误提示的？</p>
<p>按F12调出开发者工具，可以看到 js 文件执行过程中抛了个异常。</p>
<p>当时还随手画了一个路径拿去测试：</p>
<embed src="http://sarasarasa.net/post/1188c9f1/03.svg" style="display:block;width:256px;height:256px" />



<p><br /></p>
<hr>
<h1 id="问题发现，开始清除"><a href="#问题发现，开始清除" class="headerlink" title="问题发现，开始清除"></a>问题发现，开始清除</h1><p>最后发现问题在于必须存在<strong>单条封闭路径</strong>。</p>
<p>而我们的矢量图虽然有封闭路径，但其是由多条路径组成的。</p>
<p>也就是说用<strong>「通过节点编辑路径」</strong>可以看到路径是断开的。</p>
<p>解决方法也很简单：选中所有路径然后点击<code>菜单</code>中的<code>路径</code>→<code>合并</code>即可。</p>
<p><br /></p>
<h1 id="配色"><a href="#配色" class="headerlink" title="配色"></a>配色</h1><p>导入之后，可以进行颜色位置之类的调整。</p>
<p>打算采用蓝白配色，在一个<a href="https://www.materialpalette.com/">MD配色网站</a>挑选具体的RGB值，最后采用的是<code>#29b6f6</code>。</p>
<p>因为是亮蓝色，所以阴影强度也要适度调低。</p>
<p>位置的话，一开始想的是左边元素较多，所以稍微偏右。</p>
<p>然后发现实际效果似乎还不如直接居中，于是就采用了居中。</p>
<embed src="http://sarasarasa.net/post/1188c9f1/04.svg" style="display:block;width:256px;height:256px" />

<p><br /></p>
<hr>
<h1 id="新增元素"><a href="#新增元素" class="headerlink" title="新增元素"></a>新增元素</h1><p>做着做着的时候（其实是遇到坑的时候），又浮现了另外一个想法：</p>
<p><strong>以阶梯做图标，还可以加上一个上阶梯的小人。</strong></p>
<p>因为绘制小人不太容易，于是从现有的图标库中检索。</p>
<p>我们使用的是<a href="http://www.iconfont.cn/">iconfont</a>，检索关键字为<code>楼梯</code>。</p>
<p>最后也就是这个样子：</p>
<embed src="http://sarasarasa.net/post/1188c9f1/05.svg" style="display:block;width:256px;height:256px" />



<p><br /></p>
<p>后来，我们打算将这个小人加到我们的图标上。</p>
<p>做法是，在网站生成的svg上进行再修改：</p>
<ol>
<li><p>首先要把小人抠出来。</p>
<p>摸索出的一个做法是，使用「擦除现有路径」工具，擦出一条边界，然后使用菜单<code>菜单</code>中的<code>路径</code>→<code>分离</code>，最后使用「通过节点编辑路径」工具，删掉擦除出现的一堆节点，使边缘平滑。</p>
</li>
<li><p>将我们的 svg 进行分图层处理，将小人放到图案和背景圆之间。</p>
</li>
<li><p>使用滤镜，添加小人阴影。</p>
</li>
</ol>
<p><strong>最终效果：</strong></p>
<embed src="http://sarasarasa.net/post/1188c9f1/06.svg" style="display:block;width:256px;height:256px" />



<p><br /></p>
<p>当然，问题又来了：</p>
<p><strong>小人和图案的阴影并不统一。</strong></p>
<p><br/></p>
<hr>
<h1 id="砍掉重做"><a href="#砍掉重做" class="headerlink" title="砍掉重做"></a>砍掉重做</h1><p>为了解决这个问题，在上传到那个网站工具之前，就要把小人加到图标中。</p>
<p>再次抠图，将小人放到合适的位置。</p>
<p>然后全选，使用<code>菜单</code>中的<code>路径</code>→<code>并集</code>和<code>分离</code>工具，</p>
<p>再次上传到网站中。</p>
<p>此时，阴影已经统一了：</p>
<embed src="http://sarasarasa.net/post/1188c9f1/07.svg" style="display:block;width:256px;height:256px" />

<p><br /></p>
<hr>
<h1 id="加一级层次"><a href="#加一级层次" class="headerlink" title="加一级层次"></a>加一级层次</h1><p>也曾纠结要不要去掉左边的箭头，因为去掉之后更像“人”字，而且左侧的箭头有种会阻碍小人上行的感觉？</p>
<p>纠结一番后决定，把小人所在的箭头提升一个层次，就不存在阻碍感了。</p>
<p>具体地来说就是加一层阴影。</p>
<p><br /></p>
<p>因为我们一开始是没有分图层的，所以要单独把箭头抠出来。</p>
<p>我们采用的做法是</p>
<ol>
<li>先复制整个图案（不含阴影）到新的一个图层里。</li>
<li>然后用「擦除现有路径」工具，用跟之前类似的方法把箭头和小人抠出来，并且加上一层阴影。</li>
</ol>
<p>这就得到我们的最终稿了。</p>
<p>最后再依次导出各个规格即可。</p>
<embed src="http://sarasarasa.net/post/1188c9f1/01.svg" style="display:block;width:256px;height:256px" />]]></content>
      <categories>
        <category>项目</category>
        <category>开发日志</category>
        <category>人升</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发日志</tag>
      </tags>
  </entry>
  <entry>
    <title>将Ubuntu装入U盘,打造便携系统</title>
    <url>/post/4d0e5331.html</url>
    <content><![CDATA[<p>前段时间想要尝试下 Ubuntu 系统，又不太想弄双系统，后来想了想干脆将 Ubuntu 装入一个空闲的 U 盘里面，实现即插即用的便携系统与工作环境。</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li><p><strong>闲置的 U 盘</strong><br>建议至少支持USB3.0，空间至少16G以上，32G为佳。</p>
</li>
<li><p><strong>虚拟机或是另外一个闲置U盘</strong></p>
<p>用来当启动盘安装 Ubuntu。这里选择的是 Vmware Workstation 14 Pro。 </p>
</li>
<li><p><strong>Ubuntu Desktop 系统安装文件</strong><br>在<a href="https://www.ubuntu.com/download">Ubuntu官网</a>下载，这里选择的是Ubuntu Desktop 18.04 LTS。</p>
</li>
</ul>
<a id="more"></a>
<h2 id="新建虚拟机"><a href="#新建虚拟机" class="headerlink" title="新建虚拟机"></a>新建虚拟机</h2><p>启动  Vmware ，<code>文件</code><i class="fa-arrow-right"></i><code>新建虚拟机</code><i class="fa-arrow-right"></i><code>典型</code><i class="fa-arrow-right"></i><code>稍后安装系统</code><i class="fa-arrow-right"></i><code>Linux Ubuntu</code>。</p>
<img src="/post/4d0e5331/01.jpg" class="">
<blockquote>
<p><code>最大磁盘大小</code>设为最小（1G）即可，我们是用虚拟机来安装系统，并不需要硬盘空间。</p>
</blockquote>
<p>接着一路<code>下一步</code>，创建出一个虚拟机。</p>
<p>右键你新建的虚拟机，点击<code>设置</code>。</p>
<p>将 CD/DVD 设为你下载的 Ubuntu Desktop 系统安装文件（iso文件）。</p>
<p>同时最好打上<code>已连接</code>和<code>启动时连接</code>两个勾。</p>
<img src="/post/4d0e5331/02.jpg" class="">
<h2 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h2><p>插上 U 盘，启动虚拟机。</p>
<p>没有意外的话，你能看到 Ubuntu 的安装界面。</p>
<img src="/post/4d0e5331/03.jpg" class="">
<p>选择<code>安装Ubuntu</code>，注意此时的 U 盘应该与虚拟机相连接。</p>
<p>如果没有连接的话，点击以下图片所示的按钮：</p>
<img src="/post/4d0e5331/04.jpg" class="">
<p>注意要安装到 U 盘里，其他的按照需求进行点击安装即可。</p>
<p>分区的话这里将<code>根目录 &#39;/&#39;</code> 挂载为最大的空间，<code>/boot</code>空间设为了300MB，<code>swap空间</code>设为了2GB。</p>
<p>可按需求自行修改，注意下方的<code>安装启动引导器的设备</code>一定要设置为你的 U 盘。</p>
<img src="/post/4d0e5331/05.jpg" class="">
<h2 id="启动系统"><a href="#启动系统" class="headerlink" title="启动系统"></a>启动系统</h2><p>实机启动的话，只需要进入 <code>bios</code> ，将 <code>Removable Devices</code> 设为优先启动即可。</p>
<p>我们这里讲讲怎么用虚拟机启动你的 U 盘里的系统。</p>
<p>进入虚拟机设置，添加<i class="fa-arrow-right"></i>硬盘<i class="fa-arrow-right"></i>使用物理硬盘。</p>
<img src="/post/4d0e5331/06.jpg" class="">
<p>在下一步的<code>设备</code>中选择最后一项（一般 U 盘是最后一项）。</p>
<img src="/post/4d0e5331/07.jpg" class="">
<p>点击如下图所示按钮进入虚拟机的bios：</p>
<img src="/post/4d0e5331/08.jpg" class="">
<p>接着更改启动优先级到下图所示状态：</p>
<img src="/post/4d0e5331/09.jpg" class="">
<p>最后，重新启动你的虚拟机，就能进入你的 Ubuntu 系统了。</p>
<p><strong>此时要保证断开虚拟机与 U 盘的连接，应与主机连接。</strong></p>
<p><strong>确保是以下状态，不要点击：</strong></p>
<img src="/post/4d0e5331/04.jpg" class="">
<h2 id="What’s-Next"><a href="#What’s-Next" class="headerlink" title="What’s Next?"></a>What’s Next?</h2><p>接下来当然是安装程序，捣鼓你的 Ubuntu 去啊。</p>
<img src="/post/4d0e5331/10.jpg" class="">
<img src="/post/4d0e5331/11.jpg" class="">
]]></content>
      <categories>
        <category>技术</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>linux</tag>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 常用软件清单</title>
    <url>/post/3d99d1b6.html</url>
    <content><![CDATA[<p>归档一下自己一些常用的软件。</p>
<h4 id="图片软件"><a href="#图片软件" class="headerlink" title=" 图片软件"></a><i class="fa fa-bookmark-o" aria-hidden="true"></i> 图片软件</h4><ul>
<li><p><strong>CollageIt</strong> </p>
<p>图片拼接软件</p>
</li>
<li><p><strong>Inkscape</strong></p>
<p>免费的矢量图（SVG）编辑工具</p>
</li>
</ul>
<h4 id="文本软件"><a href="#文本软件" class="headerlink" title=" 文本软件"></a><i class="fa fa-bookmark-o" aria-hidden="true"></i> 文本软件</h4><ul>
<li><p><a href="https://notepad-plus-plus.org/"><strong>Notepad++</strong></a></p>
</li>
<li><p><strong>Beyond Compare</strong> </p>
<p>文本对比</p>
</li>
<li><p><strong>Typora</strong></p>
<p>Markdown编辑器</p>
</li>
</ul>
<h4 id="音频"><a href="#音频" class="headerlink" title=" 音频"></a><i class="fa fa-bookmark-o" aria-hidden="true"></i> 音频</h4><ul>
<li><strong>GoldWave</strong></li>
</ul>
<h4 id="视频"><a href="#视频" class="headerlink" title=" 视频"></a><i class="fa fa-bookmark-o" aria-hidden="true"></i> 视频</h4><ul>
<li><strong>格式工厂</strong></li>
</ul>
<h4 id="屏幕录制"><a href="#屏幕录制" class="headerlink" title=" 屏幕录制"></a><i class="fa fa-bookmark-o" aria-hidden="true"></i> 屏幕录制</h4><ul>
<li><strong>Bandicam</strong></li>
</ul>
<h4 id="搜索"><a href="#搜索" class="headerlink" title=" 搜索"></a><i class="fa fa-bookmark-o" aria-hidden="true"></i> 搜索</h4><ul>
<li><a href="https://www.voidtools.com/"><strong>Everything</strong></a></li>
</ul>
<h4 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-bookmark-o" aria-hidden="true"></i> 截图</h4><ul>
<li><a href="https://www.snipaste.com/"><strong>Snipaste</strong></a></li>
</ul>
<h4 id="串流"><a href="#串流" class="headerlink" title=" 串流"></a><i class="fa fa-bookmark-o" aria-hidden="true"></i> 串流</h4><ul>
<li><strong>Splashtop</strong></li>
<li><strong>Anydesks</strong></li>
</ul>
<h4 id="虚拟机"><a href="#虚拟机" class="headerlink" title=" 虚拟机"></a><i class="fa fa-bookmark-o" aria-hidden="true"></i> 虚拟机</h4><ul>
<li><strong>VMware Workstation</strong></li>
</ul>
]]></content>
      <categories>
        <category>计算机</category>
        <category>软件</category>
        <category>清单</category>
      </categories>
      <tags>
        <tag>计算机</tag>
        <tag>清单</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里云服务器CentOS搭建Minecraft服务器</title>
    <url>/post/d8f0add3.html</url>
    <content><![CDATA[<h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><h3 id="购买云服务器"><a href="#购买云服务器" class="headerlink" title="购买云服务器"></a>购买云服务器</h3><p>本文选择的是阿里云+CentOS。</p>
<h3 id="安装-Java-环境"><a href="#安装-Java-环境" class="headerlink" title="安装 Java 环境"></a>安装 Java 环境</h3><p>首先使用以下命令来分别检查 java 和 jdk 的安装状况。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -version</span><br><span class="line">rpm -qa | grep jdk</span><br></pre></td></tr></table></figure>
<p>如果没有安装的话，可以用yum方式安装：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install java-1.8.0-openjdk*</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h2 id="开启端口"><a href="#开启端口" class="headerlink" title="开启端口"></a>开启端口</h2><p>CentOS 7.0以上版本，内置防火墙从 iptables 替换成了 firewalld。所以你要根本版本选择不同的设置方式。</p>
<p><br /></p>
<h3 id="Firewalld"><a href="#Firewalld" class="headerlink" title="Firewalld"></a>Firewalld</h3><ol>
<li><p>首先查看已经开放的端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --list-ports</span><br></pre></td></tr></table></figure>
<p>​</p>
</li>
<li><p>分别开启 22 和 25565 端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=22/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=25565/tcp --permanent</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：22 是为了后面的  SSH 连接服务器，25565 是MC默认采用的端口。</p>
</blockquote>
</li>
<li><p>重启防火墙，使更改生效</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>
<p>​</p>
</li>
</ol>
<h3 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h3><ol>
<li><p>首先查看已经开放的端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/init.d/iptables status</span><br></pre></td></tr></table></figure>
<p>​</p>
</li>
<li><p>分别开启 22 和 25565 端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --dport 22 -j ACCEPT </span><br><span class="line">iptables -A INPUT -p tcp --dport 25565 -j ACCEPT </span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：22 是为了后面的  SSH 连接服务器，25565 是MC默认采用的端口。</p>
</blockquote>
<p>​</p>
</li>
<li><p>重启防火墙，使更改生效</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/rc.d/init.d/iptables save</span><br><span class="line">/etc/init.d/iptables restart</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>当然，你还能手动打开文件进行修改：<code>vi /etc/sysconfig/iptables</code>，然后在里面添加一句<code>-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 22 -j ACCEPT</code>来开启22端口。</p>
<h3 id="阿里云控制台开启端口"><a href="#阿里云控制台开启端口" class="headerlink" title="阿里云控制台开启端口"></a>阿里云控制台开启端口</h3><p>其次，你还要在阿里云的配置安全组设置。</p>
<p>登陆之后，选择你的<code>云服务器 ECS</code><i class="fa-arrow-right"></i><code>更多</code><i class="fa-arrow-right"></i><code>安全组配置</code><i class="fa-arrow-right"></i><code>配置规则</code><i class="fa-arrow-right"></i><code>添加安全组规则</code></p>
<img src="/post/d8f0add3/01.jpg" class="">
<p>如下图填入规则信息：</p>
<blockquote>
<p>MC服务器默认用的端口号是25565，也可以改成别的</p>
</blockquote>
<img src="/post/d8f0add3/02.jpg" class="">
<h2 id="远程连接以及文件传输"><a href="#远程连接以及文件传输" class="headerlink" title="远程连接以及文件传输"></a>远程连接以及文件传输</h2><p>我用的是一款叫做 <code>SSH Secure Shell Client</code>的软件，它本身可以实现SSH连接，同时又具有可视化文件传输的功能。</p>
<p>但是在 SSH 官网这款软件似乎改名了，而且变成付费软件了。</p>
<p><strong>可以尝试更换 <code>PuTTY</code> 软件进行远程连接，<code>FIleZilla</code>软件进行文件传输。</strong></p>
<p>这些软件操作都类似，输入你的服务器公网IP地址，22端口，系统用户名和密码就可以登入了。</p>
<img src="/post/d8f0add3/03.jpg" class="">
<img src="/post/d8f0add3/04.jpg" class="">
<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><h3 id="服务器文件"><a href="#服务器文件" class="headerlink" title="服务器文件"></a>服务器文件</h3><p>在 <a href="https://minecraft.net/zh-hans/download/server">官网</a> 可以下载到Minecraft的纯净服务器端。</p>
<p>将 jar 文件上传（利用上一节所述软件）到服务器端，最好专门建一个文件夹放置，以<code>MC</code>为例。</p>
<p>然后开始尝试启动服务器吧：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/MC</span><br><span class="line">java -jar server.jar</span><br></pre></td></tr></table></figure>
<p>你会发现运行过程中生成了一些配置文件，同时让你去同意 eula 协议才能继续。</p>
<p>编辑新生成的 <code>eula.txt</code> 文件，将其中的 <code>eula=flase</code> 改成 <code>eula=true</code>。</p>
<p>随后可以打开 <code>server.properties</code> 文件进行服务器配置。</p>
<p>将 <code>online-mode=true</code> 改成 <code>online-mode=false</code> 后非正版玩家才可进入服务器。</p>
<p>其他的可按需求修改，比如可以修改最大玩家量<code>max-players</code>、游戏模式<code>gamemode</code>、服务器端口<code>server-port</code>、待机踢出时间<code>player-idle-timeout</code>、服务器名称 <code>motd</code> 等。</p>
<h2 id="服务器启动"><a href="#服务器启动" class="headerlink" title="服务器启动"></a>服务器启动</h2><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>使用以下命令就可以启动服务器了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -Xmx1024M -Xms1024M -jar server.jar nogui</span><br></pre></td></tr></table></figure>
<p><code>-Xmx</code>参数是设置最大内存量、<code>-Xms</code>是最小内存量，根据你的服务器配置进行调节。</p>
<p>最好起码1G以上。</p>
<p>随后就可以测试能不能用<code>服务器公网IP+端口号</code>连接服务器了。</p>
<p>如果使用默认端口号的话就是<code>xxx.xxx.xxx.xxx:25565</code></p>
<h3 id="挂载后台"><a href="#挂载后台" class="headerlink" title="挂载后台"></a>挂载后台</h3><p>你会发现用上述方式运行的服务器，当你的远程终端软件断开之后，服务器也会随之关闭。</p>
<p>你可能会想到用nohup命令挂载后台：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nohup java -Xmx1024M -Xms1024M -jar server.jar nogui&amp;</span><br></pre></td></tr></table></figure>
<p>一开始我这样是没有问题的，但是设置 op 之后，用这个命令运行的服务器会抛出一个异常。</p>
<p>我们这里采用 screen 来解决这个问题。</p>
<p><strong>安装：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install screen</span><br></pre></td></tr></table></figure>
<p><strong>使用方法：</strong></p>
<ol>
<li><p>新建窗口（注意-S必须是大写的）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -S mc</span><br></pre></td></tr></table></figure>
</li>
<li><p>运行服务器</p>
</li>
<li><p>会话分离 输入CTRL+A、CTRL+D</p>
</li>
</ol>
<h3 id="自动重启服务器脚本"><a href="#自动重启服务器脚本" class="headerlink" title="自动重启服务器脚本"></a>自动重启服务器脚本</h3><p>新建一个 <code>startmc.sh</code>文件，并在其中输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   java -Xmx1024M -Xms1024M -jar server.jar nogui</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>然后运行服务器的时候执行这个脚本即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash startmc.sh</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
        <category>记录</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>云服务器</tag>
        <tag>游戏</tag>
        <tag>记录</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次WIN10更新后无法调整亮度的解决</title>
    <url>/post/e5de8f7e.html</url>
    <content><![CDATA[<p>晚上关机时，WIN10推送了一次更新。</p>
<p>第二天发现不是平时的亮度，同时右下角的电源配置里面的亮度设置变成灰色，不能按了。</p>
<a id="more"></a>
<p><br /></p>
<p>查询并测试了以下方法都<strong>无法解决</strong>：</p>
<ul>
<li>重启</li>
<li>修改注册表：HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\Class{4d36e968-e325-11ce-bfc1-08002be10318}；将0000和0001中的KMD_EnableBrightnessInterface2的值改为0。（REG_DWORD类型）</li>
<li>回滚显卡驱动</li>
<li>自动检查显卡驱动更新</li>
</ul>
<p><br /></p>
<p>最后发现问题似乎是出于<strong>远程控制软件（Splashtop）所安装的驱动</strong>，打开<strong><code>设备管理器</code>→<code>监视器</code></strong>里面可以看到远程控制软件安装的“虚拟”硬件。</p>
<p>一开始我尝试<code>禁用设备</code>，并没有效果。</p>
<p>最后直接<code>卸载设备</code>，<code>监视器</code>里面的硬件变回了<code>通用即插即用监视器</code>，重启，亮度设置就回来了。:D</p>
<p><br /></p>
<blockquote>
<p>不过下次使用远程控制软件的时候可能要重装了。</p>
<p>估计原因是把那个“虚拟”硬件当作是主显示器，然后就无法调节亮度。</p>
</blockquote>
]]></content>
      <categories>
        <category>技术</category>
        <category>记录</category>
      </categories>
      <tags>
        <tag>记录</tag>
        <tag>系统</tag>
        <tag>WIN10</tag>
      </tags>
  </entry>
  <entry>
    <title>Java DFS+贪心解决骑士游历问题</title>
    <url>/post/a3a124b6.html</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a><strong>题目</strong></h2><blockquote>
<p>骑士游历</p>
<p>骑士游历问题是指，在国际象棋的棋盘（8行*8列）上，一个马要遍历棋盘，即走到棋盘上的每一格，并且每隔只到达一次。设码在棋盘的某一位置（x,y）上，按照“走马日”的规则，下一步有8个方向走，如图所示。若给定起始位置（x0,y0）,使用站和队列探索出一条马遍历棋盘的路径。</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th>8</th>
<th></th>
<th>1</th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>7</td>
<td></td>
<td></td>
<td></td>
<td>2</td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td>马</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>6</td>
<td></td>
<td></td>
<td></td>
<td>3</td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td>5</td>
<td></td>
<td>4</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</blockquote>
<a id="more"></a>
<p><br /></p>
<h2 id="回溯枚举解法"><a href="#回溯枚举解法" class="headerlink" title="回溯枚举解法"></a><strong>回溯枚举解法</strong></h2><p>这道题的解法思路和<a href="http://sarasarasa.net/post/995edba2.html">走迷宫</a>类似。</p>
<p>首先是新建一个8个方向移动的结点类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> lab3.Knight;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> AyagiKei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@url</span> https://github.com/Ayagikei</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Point</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> x,y;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Point</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.x = x;</span><br><span class="line">        <span class="keyword">this</span>.y = y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getX</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setX</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.x = x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getY</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setY</span><span class="params">(<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.y = y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Point <span class="title">moveNE</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.getX()-<span class="number">2</span> &lt;<span class="number">1</span> || <span class="keyword">this</span>.getY()+<span class="number">1</span> &gt;<span class="number">8</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Point(<span class="keyword">this</span>.getX()-<span class="number">2</span>,<span class="keyword">this</span>.getY()+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Point <span class="title">moveEN</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.getX()-<span class="number">1</span> &lt;<span class="number">1</span> || <span class="keyword">this</span>.getY()+<span class="number">2</span> &gt;<span class="number">8</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Point(<span class="keyword">this</span>.getX()-<span class="number">1</span>,<span class="keyword">this</span>.getY()+<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Point <span class="title">moveES</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.getX()+<span class="number">1</span> &gt; <span class="number">8</span> || <span class="keyword">this</span>.getY()+<span class="number">2</span> &gt;<span class="number">8</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Point(<span class="keyword">this</span>.getX()+<span class="number">1</span>,<span class="keyword">this</span>.getY()+<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Point <span class="title">moveSE</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.getX()+<span class="number">2</span> &gt; <span class="number">8</span> || <span class="keyword">this</span>.getY()+<span class="number">1</span> &gt;<span class="number">8</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Point(<span class="keyword">this</span>.getX()+<span class="number">2</span>,<span class="keyword">this</span>.getY()+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Point <span class="title">moveSW</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.getX()+<span class="number">2</span> &gt; <span class="number">8</span> || <span class="keyword">this</span>.getY()-<span class="number">1</span> &lt;<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Point(<span class="keyword">this</span>.getX()+<span class="number">2</span>,<span class="keyword">this</span>.getY()-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Point <span class="title">moveWS</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.getX()+<span class="number">1</span> &gt; <span class="number">8</span> || <span class="keyword">this</span>.getY()-<span class="number">2</span> &lt;<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Point(<span class="keyword">this</span>.getX()+<span class="number">1</span>,<span class="keyword">this</span>.getY()-<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Point <span class="title">moveWN</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.getX()-<span class="number">1</span> &lt; <span class="number">1</span> || <span class="keyword">this</span>.getY()-<span class="number">2</span> &lt;<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Point(<span class="keyword">this</span>.getX()-<span class="number">1</span>,<span class="keyword">this</span>.getY()-<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Point <span class="title">moveNW</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.getX()-<span class="number">2</span> &lt; <span class="number">1</span> || <span class="keyword">this</span>.getY()-<span class="number">1</span> &lt;<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Point(<span class="keyword">this</span>.getX()-<span class="number">2</span>,<span class="keyword">this</span>.getY()-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">17</span>;</span><br><span class="line">        result = <span class="number">31</span> * result + <span class="keyword">this</span>.getX();</span><br><span class="line">        result = <span class="number">31</span> * result + <span class="keyword">this</span>.getY();</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(obj == <span class="keyword">this</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(!(obj <span class="keyword">instanceof</span> Point)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(obj.hashCode()!=<span class="keyword">this</span>.hashCode()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        Point p = (Point) obj;</span><br><span class="line">        <span class="keyword">return</span> (p.getY() == <span class="keyword">this</span>.getY()) &amp;&amp; (p.getX() == <span class="keyword">this</span>.getX());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>我们这里用一个数组保存每个点搜索过的方向，如果这个点搜索过北偏东方向的话，就标为1。回溯之后可以根据这个信息搜索其他方向。</p>
<p>和走迷宫稍有不同的是，一个点可由多个方向抵达，并且抵达后的棋盘状况不一定。所以回溯的时候，要把沿途的点的状态清为0。</p>
<p>当栈的size等于64的时候，就代表所有点都走过且仅走过一遍了。再倒着把每个点的路径标上、输出就ok了。</p>
<p><strong>思路上是这样的，但实际运行的时候发现，8*8的棋盘dfs时间异常长，是得不出结果的。这个做法只能用于较小的棋盘。</strong></p>
<p><br /></p>
<p>最后栈所保存的元素就是路径上的每一个点了。</p>
<p>优化前代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> chess[][]=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">9</span>][<span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">solveByStack</span><span class="params">(Point entrance)</span></span>&#123;</span><br><span class="line">    Stack&lt;Point&gt; solve = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    chess =<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">9</span>][<span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    solve.push(entrance);</span><br><span class="line">    chess[entrance.getX()][entrance.getY()] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    Point pTop;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//所有点走过为止</span></span><br><span class="line">    <span class="keyword">while</span>(solve.size()!=<span class="number">64</span>)&#123;</span><br><span class="line"></span><br><span class="line">        Point qNewTop;</span><br><span class="line"></span><br><span class="line">        pTop = solve.peek();</span><br><span class="line">        System.out.println(<span class="string">&quot;(&quot;</span>+pTop.getX()+<span class="string">&quot;,&quot;</span> + pTop.getY()+<span class="string">&quot;)&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(chess[pTop.getX()][pTop.getY()] &lt; <span class="number">1</span> &amp;&amp; (qNewTop = pTop.moveNE()) != <span class="keyword">null</span> &amp;&amp; chess[qNewTop.getX()][qNewTop.getY()] == <span class="number">0</span>)&#123;</span><br><span class="line">            chess[pTop.getX()][pTop.getY()] = <span class="number">1</span>;</span><br><span class="line">            solve.push(qNewTop);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(chess[pTop.getX()][pTop.getY()] &lt; <span class="number">2</span> &amp;&amp; (qNewTop = pTop.moveEN()) != <span class="keyword">null</span> &amp;&amp; chess[qNewTop.getX()][qNewTop.getY()] == <span class="number">0</span>)&#123;</span><br><span class="line">            chess[pTop.getX()][pTop.getY()] = <span class="number">2</span>;</span><br><span class="line">            solve.push(qNewTop);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(chess[pTop.getX()][pTop.getY()] &lt; <span class="number">3</span> &amp;&amp; (qNewTop = pTop.moveES()) != <span class="keyword">null</span> &amp;&amp; chess[qNewTop.getX()][qNewTop.getY()] == <span class="number">0</span>)&#123;</span><br><span class="line">            chess[pTop.getX()][pTop.getY()] = <span class="number">3</span>;</span><br><span class="line">            solve.push(qNewTop);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(chess[pTop.getX()][pTop.getY()] &lt; <span class="number">4</span> &amp;&amp; (qNewTop = pTop.moveSE()) != <span class="keyword">null</span> &amp;&amp; chess[qNewTop.getX()][qNewTop.getY()] == <span class="number">0</span>)&#123;</span><br><span class="line">            chess[pTop.getX()][pTop.getY()] = <span class="number">4</span>;</span><br><span class="line">            solve.push(qNewTop);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(chess[pTop.getX()][pTop.getY()] &lt; <span class="number">5</span> &amp;&amp; (qNewTop = pTop.moveSW()) != <span class="keyword">null</span> &amp;&amp; chess[qNewTop.getX()][qNewTop.getY()] == <span class="number">0</span>)&#123;</span><br><span class="line">            chess[pTop.getX()][pTop.getY()] = <span class="number">5</span>;</span><br><span class="line">            solve.push(qNewTop);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(chess[pTop.getX()][pTop.getY()] &lt; <span class="number">6</span> &amp;&amp; (qNewTop = pTop.moveWS()) != <span class="keyword">null</span> &amp;&amp; chess[qNewTop.getX()][qNewTop.getY()] == <span class="number">0</span>)&#123;</span><br><span class="line">            chess[pTop.getX()][pTop.getY()] = <span class="number">6</span>;</span><br><span class="line">            solve.push(qNewTop);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(chess[pTop.getX()][pTop.getY()] &lt; <span class="number">7</span> &amp;&amp; (qNewTop = pTop.moveWN()) != <span class="keyword">null</span> &amp;&amp; chess[qNewTop.getX()][qNewTop.getY()] == <span class="number">0</span>)&#123;</span><br><span class="line">            chess[pTop.getX()][pTop.getY()] = <span class="number">7</span>;</span><br><span class="line">            solve.push(qNewTop);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(chess[pTop.getX()][pTop.getY()] &lt; <span class="number">8</span> &amp;&amp; (qNewTop = pTop.moveNW()) != <span class="keyword">null</span> &amp;&amp; chess[qNewTop.getX()][qNewTop.getY()] == <span class="number">0</span>)&#123;</span><br><span class="line">            chess[pTop.getX()][pTop.getY()] = <span class="number">8</span>;</span><br><span class="line">            solve.push(qNewTop);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//无路可走 回溯</span></span><br><span class="line">        chess[pTop.getX()][pTop.getY()] = <span class="number">0</span>;</span><br><span class="line">        solve.pop();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    System.out.println(solve.size());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!solve.isEmpty())&#123;</span><br><span class="line">        pTop = solve.pop();</span><br><span class="line">        chess[pTop.getX()][pTop.getY()] = solve.size()+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">9</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; <span class="number">9</span>; j++) &#123;</span><br><span class="line">            stringBuffer.append(chess[i][j] +<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        stringBuffer.append(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> stringBuffer.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用贪心（预见算法）优化"><a href="#使用贪心（预见算法）优化" class="headerlink" title="使用贪心（预见算法）优化"></a><strong>使用贪心（预见算法）优化</strong></h2><p>贪心优化的思路是：有选择性的走下一个点，先走最难到达的点。</p>
<p>所以我们这里增加了一个新方法 <em>public static int countAccess(Point p)</em> 来计算8个方向中有多少个方向可以到达p点。</p>
<p>然后选择方向的时候以此为标准，先走去最难走的方向，就可以实现优化了。</p>
<p><br /></p>
<p>代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> lab3.Knight;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.Queue;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> AyagiKei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@url</span> https://github.com/Ayagikei</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KnightProblemSolve</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> chess[][][]=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">9</span>][<span class="number">9</span>][<span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">solveByStackWithOpti</span><span class="params">(Point entrance)</span></span>&#123;</span><br><span class="line">        Stack&lt;Point&gt; solve = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//棋盘数组，计算过程中标记每个点已经走向过的方向</span></span><br><span class="line">        <span class="comment">//第三维的[0]代表该点是否走过，[1]~[8]代表相应的方向是否走过</span></span><br><span class="line">        chess = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">9</span>][<span class="number">9</span>][<span class="number">9</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//起点入栈</span></span><br><span class="line">        solve.push(entrance);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//栈顶元素</span></span><br><span class="line">        Point pTop;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//所有点走过为止</span></span><br><span class="line">        <span class="keyword">while</span>(solve.size()!=<span class="number">64</span>)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//栈为空即无解的时候返回null</span></span><br><span class="line">            <span class="keyword">if</span>(solve.isEmpty())</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">            Point pNewTop,chosenPoint = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">int</span> direction = <span class="number">0</span>,cnt = <span class="number">9</span>;</span><br><span class="line"></span><br><span class="line">            pTop = solve.peek();</span><br><span class="line">            System.out.println(<span class="string">&quot;(&quot;</span>+pTop.getX()+<span class="string">&quot;,&quot;</span> + pTop.getY()+<span class="string">&quot;)&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//计算并且找出8个方向中通路最少的路（并且是可以到达的）</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">8</span>;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(chess[pTop.getX()][pTop.getY()][i] == <span class="number">0</span>)&#123;</span><br><span class="line">                    pNewTop = getPoint(pTop, i);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(pNewTop != <span class="keyword">null</span> &amp;&amp; chess[pNewTop.getX()][pNewTop.getY()][<span class="number">0</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(countAccess(pNewTop) &lt; cnt)&#123;</span><br><span class="line">                            cnt = countAccess(pNewTop);</span><br><span class="line">                            direction = <span class="number">1</span>;</span><br><span class="line">                            chosenPoint = pNewTop;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//cnt == 9的时候就是无路可走的时候，回溯</span></span><br><span class="line">            <span class="keyword">if</span>(cnt == <span class="number">9</span>) &#123;</span><br><span class="line">               <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)</span><br><span class="line">                chess[pTop.getX()][pTop.getY()][i] = <span class="number">0</span>;</span><br><span class="line">                solve.pop();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//选择最窄的路先走</span></span><br><span class="line">                chess[pTop.getX()][pTop.getY()][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">                chess[pTop.getX()][pTop.getY()][direction] = <span class="number">1</span>;</span><br><span class="line">                solve.push(chosenPoint);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(solve.size());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//反向标记走过的路线</span></span><br><span class="line">        <span class="keyword">while</span>(!solve.isEmpty())&#123;</span><br><span class="line">            pTop = solve.pop();</span><br><span class="line">            chess[pTop.getX()][pTop.getY()][<span class="number">0</span>] = solve.size()+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出</span></span><br><span class="line">        StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">9</span>;i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; <span class="number">9</span>; j++) &#123;</span><br><span class="line">                stringBuffer.append(chess[i][j][<span class="number">0</span>] +<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            stringBuffer.append(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> stringBuffer.toString();</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//统计p点的通路（可以到达的）</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">countAccess</span><span class="params">(Point p)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        Point pNewPoint;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">8</span>;i++)&#123;</span><br><span class="line">            pNewPoint = getPoint(p, i);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(pNewPoint != <span class="keyword">null</span> &amp;&amp; chess[pNewPoint.getX()][pNewPoint.getY()][<span class="number">0</span>] == <span class="number">0</span>)</span><br><span class="line">                cnt ++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> cnt;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取8个方向的点</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Point <span class="title">getPoint</span><span class="params">(Point p, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        Point pNewPoint;</span><br><span class="line">        <span class="keyword">switch</span>(i)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>: pNewPoint = p.moveNE();<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>: pNewPoint = p.moveEN();<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>: pNewPoint = p.moveES();<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>: pNewPoint = p.moveSE();<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>: pNewPoint = p.moveSW();<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>: pNewPoint = p.moveWS();<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>: pNewPoint = p.moveWN();<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>: pNewPoint = p.moveNW();<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:pNewPoint = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pNewPoint;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="代码以及运行结果"><a href="#代码以及运行结果" class="headerlink" title="代码以及运行结果"></a><strong>代码以及运行结果</strong></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.println(KnightProblemSolve.solveByStackWithOpti(<span class="keyword">new</span> Point(<span class="number">4</span>,<span class="number">5</span>)));</span><br><span class="line"></span><br><span class="line">(<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">(<span class="number">2</span>,<span class="number">6</span>)</span><br><span class="line">(<span class="number">1</span>,<span class="number">8</span>)</span><br><span class="line">(<span class="number">3</span>,<span class="number">7</span>)</span><br><span class="line">(<span class="number">5</span>,<span class="number">8</span>)</span><br><span class="line">(<span class="number">7</span>,<span class="number">7</span>)</span><br><span class="line">(<span class="number">8</span>,<span class="number">5</span>)</span><br><span class="line">(<span class="number">6</span>,<span class="number">6</span>)</span><br><span class="line">(<span class="number">7</span>,<span class="number">8</span>)</span><br><span class="line">(<span class="number">8</span>,<span class="number">6</span>)</span><br><span class="line">(<span class="number">7</span>,<span class="number">4</span>)</span><br><span class="line">(<span class="number">8</span>,<span class="number">2</span>)</span><br><span class="line">(<span class="number">6</span>,<span class="number">1</span>)</span><br><span class="line">(<span class="number">7</span>,<span class="number">3</span>)</span><br><span class="line">(<span class="number">8</span>,<span class="number">1</span>)</span><br><span class="line">(<span class="number">6</span>,<span class="number">2</span>)</span><br><span class="line">(<span class="number">8</span>,<span class="number">3</span>)</span><br><span class="line">(<span class="number">7</span>,<span class="number">1</span>)</span><br><span class="line">(<span class="number">5</span>,<span class="number">2</span>)</span><br><span class="line">(<span class="number">3</span>,<span class="number">1</span>)</span><br><span class="line">(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">(<span class="number">2</span>,<span class="number">4</span>)</span><br><span class="line">(<span class="number">1</span>,<span class="number">6</span>)</span><br><span class="line">(<span class="number">2</span>,<span class="number">8</span>)</span><br><span class="line">(<span class="number">4</span>,<span class="number">7</span>)</span><br><span class="line">(<span class="number">6</span>,<span class="number">8</span>)</span><br><span class="line">(<span class="number">8</span>,<span class="number">7</span>)</span><br><span class="line">(<span class="number">7</span>,<span class="number">5</span>)</span><br><span class="line">(<span class="number">5</span>,<span class="number">6</span>)</span><br><span class="line">(<span class="number">4</span>,<span class="number">8</span>)</span><br><span class="line">(<span class="number">6</span>,<span class="number">7</span>)</span><br><span class="line">(<span class="number">8</span>,<span class="number">8</span>)</span><br><span class="line">(<span class="number">7</span>,<span class="number">6</span>)</span><br><span class="line">(<span class="number">6</span>,<span class="number">4</span>)</span><br><span class="line">(<span class="number">7</span>,<span class="number">2</span>)</span><br><span class="line">(<span class="number">8</span>,<span class="number">4</span>)</span><br><span class="line">(<span class="number">6</span>,<span class="number">5</span>)</span><br><span class="line">(<span class="number">5</span>,<span class="number">7</span>)</span><br><span class="line">(<span class="number">3</span>,<span class="number">8</span>)</span><br><span class="line">(<span class="number">1</span>,<span class="number">7</span>)</span><br><span class="line">(<span class="number">3</span>,<span class="number">6</span>)</span><br><span class="line">(<span class="number">5</span>,<span class="number">5</span>)</span><br><span class="line">(<span class="number">6</span>,<span class="number">3</span>)</span><br><span class="line">(<span class="number">5</span>,<span class="number">1</span>)</span><br><span class="line">(<span class="number">4</span>,<span class="number">3</span>)</span><br><span class="line">(<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">(<span class="number">1</span>,<span class="number">4</span>)</span><br><span class="line">(<span class="number">3</span>,<span class="number">5</span>)</span><br><span class="line">(<span class="number">2</span>,<span class="number">7</span>)</span><br><span class="line">(<span class="number">1</span>,<span class="number">5</span>)</span><br><span class="line">(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">(<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">(<span class="number">3</span>,<span class="number">2</span>)</span><br><span class="line">(<span class="number">4</span>,<span class="number">4</span>)</span><br><span class="line">(<span class="number">2</span>,<span class="number">5</span>)</span><br><span class="line">(<span class="number">4</span>,<span class="number">6</span>)</span><br><span class="line">(<span class="number">5</span>,<span class="number">4</span>)</span><br><span class="line">(<span class="number">4</span>,<span class="number">2</span>)</span><br><span class="line">(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">(<span class="number">5</span>,<span class="number">3</span>)</span><br><span class="line">(<span class="number">4</span>,<span class="number">1</span>)</span><br><span class="line">(<span class="number">3</span>,<span class="number">3</span>)</span><br><span class="line">(<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line"><span class="number">64</span></span><br><span class="line"><span class="number">52</span> <span class="number">21</span> <span class="number">64</span> <span class="number">47</span> <span class="number">50</span> <span class="number">23</span> <span class="number">40</span> <span class="number">3</span> </span><br><span class="line"><span class="number">63</span> <span class="number">46</span> <span class="number">51</span> <span class="number">22</span> <span class="number">55</span> <span class="number">2</span> <span class="number">49</span> <span class="number">24</span> </span><br><span class="line"><span class="number">20</span> <span class="number">53</span> <span class="number">62</span> <span class="number">59</span> <span class="number">48</span> <span class="number">41</span> <span class="number">4</span> <span class="number">39</span> </span><br><span class="line"><span class="number">61</span> <span class="number">58</span> <span class="number">45</span> <span class="number">54</span> <span class="number">1</span> <span class="number">56</span> <span class="number">25</span> <span class="number">30</span> </span><br><span class="line"><span class="number">44</span> <span class="number">19</span> <span class="number">60</span> <span class="number">57</span> <span class="number">42</span> <span class="number">29</span> <span class="number">38</span> <span class="number">5</span> </span><br><span class="line"><span class="number">13</span> <span class="number">16</span> <span class="number">43</span> <span class="number">34</span> <span class="number">37</span> <span class="number">8</span> <span class="number">31</span> <span class="number">26</span> </span><br><span class="line"><span class="number">18</span> <span class="number">35</span> <span class="number">14</span> <span class="number">11</span> <span class="number">28</span> <span class="number">33</span> <span class="number">6</span> <span class="number">9</span> </span><br><span class="line"><span class="number">15</span> <span class="number">12</span> <span class="number">17</span> <span class="number">36</span> <span class="number">7</span> <span class="number">10</span> <span class="number">27</span> <span class="number">32</span> </span><br></pre></td></tr></table></figure>
<p>所耗时间仅为20ms。</p>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a><strong>参考文章</strong></h2><p><a href="https://blog.csdn.net/sb___itfk/article/details/50905275">https://blog.csdn.net/sb___itfk/article/details/50905275</a></p>
]]></content>
      <categories>
        <category>技术</category>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>数据结构</tag>
        <tag>java</tag>
        <tag>查找</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Java 分别用栈dfs和队列bfs解决走迷宫问题</title>
    <url>/post/995edba2.html</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a><strong>题目</strong></h2><blockquote>
<p>走迷宫。</p>
<p>一个迷宫如图所示，他有一个入口和一个出口，其中白色单元表示通路，黑色单元表示不通路。试寻找一条从入口到出口的路径，每一部只能从一个白色单元走到相邻的白色单元，直至出口。分别用栈和队列求解问题。</p>
 <img src="/post/995edba2/01.jpg" class="">
</blockquote>
<a id="more"></a>
<p><br /></p>
<h2 id="栈的解法"><a href="#栈的解法" class="headerlink" title="栈的解法"></a><strong>栈的解法</strong></h2><p>首先写一个Point类来方便保存每个点的xy值，并且方便表示上下左右各个方向的点。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> AyagiKei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@url</span> https://github.com/Ayagikei</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Point</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> x,y;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Point</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.x = x;</span><br><span class="line">        <span class="keyword">this</span>.y = y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getX</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setX</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.x = x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getY</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setY</span><span class="params">(<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.y = y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Point <span class="title">left</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.getY()==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Point(<span class="keyword">this</span>.getX(),<span class="keyword">this</span>.getY()-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Point <span class="title">right</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Point(<span class="keyword">this</span>.getX(),<span class="keyword">this</span>.getY()+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Point <span class="title">up</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.getX()==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Point(<span class="keyword">this</span>.getX()-<span class="number">1</span>,<span class="keyword">this</span>.getY());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Point <span class="title">down</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Point(<span class="keyword">this</span>.getX()+<span class="number">1</span>,<span class="keyword">this</span>.getY());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">17</span>;</span><br><span class="line">        result = <span class="number">31</span> * result + <span class="keyword">this</span>.getX();</span><br><span class="line">        result = <span class="number">31</span> * result + <span class="keyword">this</span>.getY();</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(obj == <span class="keyword">this</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">       <span class="keyword">if</span>(!(obj <span class="keyword">instanceof</span> Point)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">       <span class="keyword">if</span>(obj.hashCode()!=<span class="keyword">this</span>.hashCode()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">       Point p = (Point) obj;</span><br><span class="line">       <span class="keyword">return</span> (p.getY() == <span class="keyword">this</span>.getY()) &amp;&amp; (p.getX() == <span class="keyword">this</span>.getX());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>栈进行dps的思路就是使用回溯法，遇到分岔路的时候，选择一条走到底；若遇到死胡同就回溯到上一个分岔路，选择另外一条路线，直到走到出口为止。</p>
<p>最后栈所保存的元素就是路径上的每一个点了。</p>
<p>代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">solveByStack</span><span class="params">(<span class="keyword">int</span> maze[][],Point entrance,Point exit)</span></span>&#123;</span><br><span class="line">    Stack&lt;Point&gt; solve = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    solve.push(entrance);</span><br><span class="line">    maze[entrance.getX()][entrance.getY()] = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    Point p;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//找到出口为止</span></span><br><span class="line">    <span class="keyword">while</span>(!solve.peek().equals(exit))&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//System.out.println(solve.peek().getX() + &quot; &quot; + solve.peek().getY());</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//上下左右进一格，并将走过的地方标记为2</span></span><br><span class="line">        <span class="keyword">if</span>(((p = solve.peek().up())!=<span class="keyword">null</span>) &amp;&amp; maze[p.getX()][p.getY()] == <span class="number">0</span>)&#123;</span><br><span class="line">            maze[p.getX()][p.getY()] = <span class="number">2</span>;</span><br><span class="line">            solve.push(p);</span><br><span class="line">           <span class="comment">// System.out.println(&quot;up&quot;);</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        p = solve.peek().down();</span><br><span class="line">        <span class="keyword">if</span>((p.getX() &lt; maze.length) &amp;&amp; maze[p.getX()][p.getY()] == <span class="number">0</span>)&#123;</span><br><span class="line">            maze[p.getX()][p.getY()] = <span class="number">2</span>;</span><br><span class="line">            solve.push(p);</span><br><span class="line">          <span class="comment">//  System.out.println(&quot;down&quot;);</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        p =solve.peek().left();</span><br><span class="line">        <span class="keyword">if</span>((p !=<span class="keyword">null</span>) &amp;&amp; maze[p.getX()][p.getY()] == <span class="number">0</span>)&#123;</span><br><span class="line">            maze[p.getX()][p.getY()] = <span class="number">2</span>;</span><br><span class="line">            solve.push(p);</span><br><span class="line">           <span class="comment">// System.out.println(&quot;left&quot;);</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        p = solve.peek().right();</span><br><span class="line">        <span class="keyword">if</span>((p.getY() &lt; maze[<span class="number">0</span>].length) &amp;&amp; maze[p.getX()][p.getY()] == <span class="number">0</span>)&#123;</span><br><span class="line">            maze[p.getX()][p.getY()] = <span class="number">2</span>;</span><br><span class="line">            solve.push(p);</span><br><span class="line">           <span class="comment">// System.out.println(&quot;right&quot;);</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//无路可走 回溯</span></span><br><span class="line">        solve.pop();</span><br><span class="line">        <span class="comment">//System.out.println(&quot;back&quot;);</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//反向标记最终的路线为3</span></span><br><span class="line">    <span class="keyword">while</span>(!solve.isEmpty())&#123;</span><br><span class="line">        p = solve.pop();</span><br><span class="line">        maze[p.getX()][p.getY()] = <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构建字符串返回</span></span><br><span class="line">    StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;maze.length;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; maze[<span class="number">0</span>].length; j++) &#123;</span><br><span class="line">            stringBuffer.append(maze[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        stringBuffer.append(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> stringBuffer.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="队列的解法"><a href="#队列的解法" class="headerlink" title="队列的解法"></a><strong>队列的解法</strong></h2><p>队列同样也要用到Point类，代码同上。</p>
<p>使用队列进行bfs的思路就是，一层层的往下搜索。</p>
<p><br /></p>
<p>具体方法为：</p>
<p>(1) 将从入口开始的相邻可通元素入队。</p>
<p>(2) 出队首元素，再将其相邻未曾入队的元素入队。</p>
<p>(3) 重复操作(2)，直到找到出口。</p>
<p><br /></p>
<p>这样就有一个问题：该如何记录路径？</p>
<p>这里可以采用增加一个数组来保存经过的节点的前驱结点。</p>
<p>最后从出口可以，根据节点的前驱结点就可以找出完整的路径了。</p>
<p>代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">solveByQueue</span><span class="params">(<span class="keyword">int</span> maze[][],Point entrance,Point exit)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    Point [][]mark = <span class="keyword">new</span> Point[maze.length][maze[<span class="number">0</span>].length];</span><br><span class="line"></span><br><span class="line">    Queue&lt;Point&gt; queue = <span class="keyword">new</span> LinkedList&lt;Point&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//起点的前驱指向自己，并入队</span></span><br><span class="line">    mark[entrance.getX()][entrance.getY()] = entrance;</span><br><span class="line">    queue.offer(entrance);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">        Point p = queue.poll();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Point n = p.up();</span><br><span class="line">        <span class="keyword">if</span>( n != <span class="keyword">null</span> &amp;&amp; maze[n.getX()][n.getY()] == <span class="number">0</span> &amp;&amp; mark[n.getX()][n.getY()] == <span class="keyword">null</span>)&#123;</span><br><span class="line">            mark[n.getX()][n.getY()] = p;</span><br><span class="line">            <span class="keyword">if</span>(n.equals(exit))&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            queue.offer(n);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        n = p.down();</span><br><span class="line">        <span class="keyword">if</span>((n.getX() &lt; maze.length) &amp;&amp; maze[n.getX()][n.getY()] == <span class="number">0</span> &amp;&amp; mark[n.getX()][n.getY()] == <span class="keyword">null</span>)&#123;</span><br><span class="line">            mark[n.getX()][n.getY()] = p;</span><br><span class="line">            <span class="keyword">if</span>(n.equals(exit))&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            queue.offer(n);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        n = p.left();</span><br><span class="line">        <span class="keyword">if</span>((n !=<span class="keyword">null</span>) &amp;&amp; maze[n.getX()][n.getY()] == <span class="number">0</span> &amp;&amp; mark[n.getX()][n.getY()] == <span class="keyword">null</span>)&#123;</span><br><span class="line">            mark[n.getX()][n.getY()] = p;</span><br><span class="line">            <span class="keyword">if</span>(n.equals(exit))&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            queue.offer(n);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        n = p.right();</span><br><span class="line">        <span class="keyword">if</span>((n.getY() &lt; maze[<span class="number">0</span>].length) &amp;&amp; maze[n.getX()][n.getY()] == <span class="number">0</span> &amp;&amp; mark[n.getX()][n.getY()] == <span class="keyword">null</span>)&#123;</span><br><span class="line">            mark[n.getX()][n.getY()] = p;</span><br><span class="line">            <span class="keyword">if</span>(n.equals(exit))&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            queue.offer(n);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//标记路径</span></span><br><span class="line">    Point p = exit;</span><br><span class="line">    <span class="keyword">while</span>(p != entrance)&#123;</span><br><span class="line">        maze[p.getX()][p.getY()] = <span class="number">3</span>;</span><br><span class="line">        p = mark[p.getX()][p.getY()];</span><br><span class="line">    &#125;</span><br><span class="line">    maze[p.getX()][p.getY()] = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;maze.length;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; maze[<span class="number">0</span>].length; j++) &#123;</span><br><span class="line">            stringBuffer.append(maze[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        stringBuffer.append(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> stringBuffer.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a><strong>测试代码</strong></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> lab3.Maze;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Assert;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> AyagiKei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@url</span> https://github.com/Ayagikei</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MazeSolveTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">solveByStack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> maze[][] = &#123;</span><br><span class="line">                &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,</span><br><span class="line">                &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,</span><br><span class="line">                &#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,</span><br><span class="line">                &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;,</span><br><span class="line">                &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">                &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>&#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        System.out.println(MazeSolve.solveByStack(maze,<span class="keyword">new</span> Point(<span class="number">0</span>,<span class="number">0</span>),<span class="keyword">new</span> Point(<span class="number">4</span>,<span class="number">5</span>)));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> maze2[][] = &#123;</span><br><span class="line">                &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,</span><br><span class="line">                &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,</span><br><span class="line">                &#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,</span><br><span class="line">                &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,</span><br><span class="line">                &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">                &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>&#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(MazeSolve.solveByStack(maze2,<span class="keyword">new</span> Point(<span class="number">0</span>,<span class="number">0</span>),<span class="keyword">new</span> Point(<span class="number">4</span>,<span class="number">5</span>)));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">solveByQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> maze[][] = &#123;</span><br><span class="line">                &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,</span><br><span class="line">                &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,</span><br><span class="line">                &#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,</span><br><span class="line">                &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;,</span><br><span class="line">                &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">                &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>&#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        System.out.println(MazeSolve.solveByQueue(maze,<span class="keyword">new</span> Point(<span class="number">0</span>,<span class="number">0</span>),<span class="keyword">new</span> Point(<span class="number">4</span>,<span class="number">5</span>)));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> maze2[][] = &#123;</span><br><span class="line">            &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,</span><br><span class="line">            &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,</span><br><span class="line">            &#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,</span><br><span class="line">            &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,</span><br><span class="line">            &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">            &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>&#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(MazeSolve.solveByQueue(maze2,<span class="keyword">new</span> Point(<span class="number">0</span>,<span class="number">0</span>),<span class="keyword">new</span> Point(<span class="number">4</span>,<span class="number">5</span>)));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a><strong>参考文章</strong></h2><p><a href="https://blog.csdn.net/K346K346/article/details/51289478">https://blog.csdn.net/K346K346/article/details/51289478</a></p>
<p><a href="https://blog.csdn.net/raphealguo/article/details/7523411">https://blog.csdn.net/raphealguo/article/details/7523411</a></p>
]]></content>
      <categories>
        <category>技术</category>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>数据结构</tag>
        <tag>java</tag>
        <tag>查找</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>《传送门》中的游戏机制来源--传送门与凝胶</title>
    <url>/post/23d68c4e.html</url>
    <content><![CDATA[<p>本文首发于我的<a href="https://zhuanlan.zhihu.com/p/32375870">知乎专栏</a>「<a href="https://zhuanlan.zhihu.com/Dantarian">丹特利安的书架</a>」。<br>另外还发布于 <a href="https://indienova.com/indie-game-news/portal-related-indie-games/">Indienova</a> 及其公众号，以及<a href="http://www.sohu.com/a/215429090_485902">搜狐新闻</a>的转载。<br>本文受到了知乎的编辑推荐。并且授权了<a href="http://www.gameres.com/796272.html">游资网</a>的转载。</p>
<h2 id="序"><a href="#序" class="headerlink" title="序"></a><strong>序</strong></h2><p>初次接触到《传送门（Portal）》的你，一定会对传送门的设定感觉到新颖。接触到二代，又一定会对凝胶系统感觉兴奋。<br>但其实，这两个游戏机制都不是在《传送门》最先出现的。</p>
<p><br /></p>
<p><strong>让我们先谈谈Valve。</strong></p>
<p>Valve 一直都是一家喜欢招纳人才、吸收游戏创意的公司。</p>
<p>如众所周知的《军团要塞（Team Fortress）》、《反恐精英（Counter-Strike）》原先都只是《半条命（Half-life）》的模组。Valve将这些高质量模组的制作人和游戏纳入麾下，并坚持打磨着这些游戏的设定与玩法，使其臻于完美<em>。</em></p>
<p>Valve 还有知名度较低的一款作品《异星虫群（Alien Swarm）》，其也是一款由 Valve 从模组社区招聘来的才华四溢的设计小组制作的游戏。</p>
<p>设计小组在进入 Valve 之前就在开发这款游戏，进入 Valve 后获许用 Source 引擎移植这款游戏。游戏免费发布后，也火热了好一段时间。</p>
<p><strong>而传送门和凝胶机制，其实都有原型游戏。</strong></p>
<p><strong>因原型游戏受到 Valve 青睐，游戏的创意和开发团队都因此进入了 Valve 。</strong></p>
<a id="more"></a>
<hr>
<h2 id="传送门的起源——《Narbacular-Drop》"><a href="#传送门的起源——《Narbacular-Drop》" class="headerlink" title="传送门的起源——《Narbacular Drop》"></a><strong>传送门的起源——《Narbacular Drop》</strong></h2> <img src="/post/23d68c4e/01.jpg" class="">
<p>《Narbacular Drop》是一款由迪吉彭理工学院的大学生开发的游戏项目。它获得了2006年独立游戏节（the Independent Games Festival）的学生展示优胜奖项。</p>
<p><br /></p>
<p>玩家在游戏中扮演的是一位叫做 “No-Knees” 的公主，正如名字所示，这位公主无法跳跃。公主被一个恶魔抓了起来，随后公主发现自己被关押的地牢其实是一个叫做 Wally 的生物，而 Wally 拥有制作传送门的能力，公主需要依靠这个能力逃出地牢并打败恶魔。</p>
<p>而游戏中的传送门与《传送门》中的传送门的设定十分相似。玩家能将其放置在一些非金属平面上。</p>
<p>同时游戏中还有一些诸如开关、箱子、滚动的巨石等解密元素。</p>
<p>《Narbacular Drop》作为一款概念展示型的游戏，关卡流程极短，只有6个谜题，甚至没有进度保存功能。不过，游戏论坛中也有一些自定义地图可以游玩。</p>
<p><br /></p>
<p><strong>《Narbacular Drop》发布之后，它的理念吸引到了 Valve 。 Valve 随即聘请了整个开发团队。这个开发团队后来进行了《传送门》的开发工作。</strong></p>
<p>两款游戏理念近似：</p>
<p>在《Narbacular Drop》中，目的是逃脱地牢；而在《传送门》中，目的是逃脱实验室。</p>
<p>在《Narbacular Drop》中，有一个唯一的敌人——恶魔；而在《传送门》中，也有唯一的敌人GLaDOS。</p>
<p><strong>如今，你仍能在《Narbacular Drop》的官网下载到这款游戏。</strong></p>
 <img src="/post/23d68c4e/02.jpg" class="">
<p>对了，还有一个小彩蛋，《传送门2》中有一个成就就叫做 <em>Narbacular Drop</em>。</p>
 <img src="/post/23d68c4e/03.jpg" class="">
<hr>
<p><br /></p>
<h2 id="凝胶其实源自喷漆——《Tag-The-Power-of-Paint》"><a href="#凝胶其实源自喷漆——《Tag-The-Power-of-Paint》" class="headerlink" title="凝胶其实源自喷漆——《Tag : The Power of Paint》"></a><strong>凝胶其实源自喷漆——《</strong>Tag : The Power of Paint》</h2> <img src="/post/23d68c4e/04.jpg" class="">
<p>游玩过《传送门2》的你，一定会对游戏中的凝胶机制印象深刻。踩上去能让玩家瞬间获得速度的橙色加速凝胶；碰到就会让玩家弹跳的蓝色弹跳凝胶；还有能将不可放置传送门的平面变成可以放置传送门的灰白色凝胶；以及还有起清洗凝胶作用的水。</p>
<p>游戏中的很多谜题需要玩家将凝胶洒向不同的地方来解决。以上图举个例子，玩家可以将蓝色凝胶洒向机枪，将她们弹起来从而瘫痪她们的攻击。</p>
<p>多种凝胶的配合使用解决谜题更是让人心动不已。毫无疑问，凝胶系统的加入让《传送门2》的玩法更加多样化，使谜题的设置得以更加丰富。</p>
<p><br /></p>
<p><strong>《传送门2》的凝胶机制其实是源自一款叫做《给力涂鸦</strong>（Tag: The Power of Paint）<strong>》的游戏。</strong></p>
 <img src="/post/23d68c4e/05.jpg" class="">
<p><strong>《给力涂鸦》</strong>同样是一款，由迪吉彭理工学院七个大学生，耗时约18个月开发的作品（没错，与上面所提及的《Narbacular Drop》的开发者们出自同一所大学）。</p>
<p>游戏于 2009 年发布，并获得了同年的独立游戏节的学生展示奖项。</p>
<p>游戏中你将拿着一把喷漆枪在一片灰白的世界尽情喷漆，通过不同喷漆的特殊能力前进，想法设法通过9个城市。</p>
<p>游戏一开始，你只有绿色喷漆。随着游戏的进行，你能搜集到红色和蓝色喷漆。</p>
 <img src="/post/23d68c4e/06.jpg" class="">
<p>喷漆枪能喷出3种不同颜色喷漆：绿色喷漆有弹跳功能；红色喷漆有加速功能；蓝色喷漆有黏着功能。</p>
<p>《传送门2》中加入了前两者喷漆的功能。而蓝色喷漆的黏着功能可以让玩家站在垂直平面而不掉落。</p>
<p>当然，喷漆枪还有清除功能，可以喷射白色喷漆清除其他颜色的喷漆。（《传送门2》中的水也有相同的作用。）</p>
<p><br /></p>
<blockquote>
<p>游戏赢得独立游戏节的奖项之后，其音乐、谜题和游戏画面与游戏机制的巧妙结合，受到了业界的赞誉。<br>独立游戏节的专栏记者查维斯·法瑟（Travis Fahs）把该游戏称作2009年第二好的独立游戏，并且希望该作能开发出一个完整的商业游戏。<br>GameSpot（一家游戏媒体）称该游戏是《传送门》和《镜之边缘》元素的巧妙结合，并且称赞了游戏的物理引擎表现。</p>
</blockquote>
 <img src="/post/23d68c4e/07.jpg" class="">
<p><br /></p>
<p>如今，你仍在迪吉彭理工学院的网站上下载到这款游戏**</p>
<p><strong>同样的，游戏开发团队被招聘进了Valve，并参与到了《传送门2》的开发工作之中，为《传送门2》带来了新的解谜要素——凝胶。</strong></p>
<p>当然，《传送门2》并没有照搬《给力涂鸦》的设定——并不会有什么凝胶枪，取而代之的是无限输送凝胶的管道。而将凝胶洒向自己的想要的区域的方式也改成了利用传送门以及其他机关要素（如传送漏斗可以浮空运输凝胶）。</p>
 <img src="/post/23d68c4e/08.jpg" class="">
<hr>
<p><br /></p>
<h2 id="尾"><a href="#尾" class="headerlink" title="尾"></a>尾</h2><p><strong>读者可以亲自下载上述的两款游戏，体验一番。虽然游戏较为简陋，但也是有一定的游戏性的。</strong></p>
<p>许多小众独立游戏中或有十分具有潜力的游戏创意，但因为各种各样的问题（如创意载体较简陋），而没有被挖掘出创意的真正价值。</p>
<p>希望 Valve 独特的融合游戏要素的方式，能启迪到一些游戏开发者。</p>
<p>最近有一款将传送门要素和桥梁建造要素融合起来的游戏。先不提游戏素质如何，游戏的创意是很赞的。</p>
 <img src="/post/23d68c4e/09.jpg" class="">
<p>最后一提，如果你还没完整体验过《传送门》系列（单人、合作剧情，创意工坊等），现在冬季特惠是你购买的好时机。<strong>创意工坊中甚至有情人节主题的地图。</strong></p>
<p>如果想体验一段全新的《传送门》剧情，也可以尝试一下一款质量颇佳的Mod 《Portal Stories: Mel》。</p>
 <img src="/post/23d68c4e/10.jpg" class="">
<p><br /></p>
<p><strong>Thanks for reading.</strong></p>
]]></content>
      <categories>
        <category>游戏</category>
        <category>文化</category>
      </categories>
      <tags>
        <tag>游戏</tag>
        <tag>Portal</tag>
        <tag>Valve</tag>
        <tag>文化</tag>
        <tag>机制</tag>
      </tags>
  </entry>
  <entry>
    <title>软件安利：手机平板串流（远程控制）电脑</title>
    <url>/post/83278669.html</url>
    <content><![CDATA[<p><strong>串流</strong> 指的是通过网络将另一个终端的画面传输过来显示，并且可以将指令传输过去的一种远程控制方式。我们不时可能会有一些串流的需求，在这里推荐几款软件。</p>
<a id="more"></a>
<h2 id="Splashtop"><a href="#Splashtop" class="headerlink" title="Splashtop"></a>Splashtop</h2><p><a href="https://www.splashtop.com/cn">官网</a></p>
 <img src="/post/83278669/pic01.jpg" class="">
<p><i class="fa fa-check-square-o fa-lg"></i>  多平台支持（Windows、macOS、iPad、iPhone、Android、Kindle Fire）</p>
<p><i class="fa fa-check-square-o fa-lg"></i>  强大的功能，你可以设置串流的终端自动锁屏、黑屏；以及设置声音的播放端等。</p>
<p><i class="fa fa-check-square-o fa-lg"></i>  支持多种操作手势，在触摸屏上就可以完成电脑所需的多种操作。</p>
 <img src="/post/83278669/pic02.jpg" class="">
<p><i class="fa fa-times fa-lg"></i> 收费</p>
<h2 id="AnyDesk"><a href="#AnyDesk" class="headerlink" title="AnyDesk"></a>AnyDesk</h2><p><a href="https://anydesk.com/remote-desktop">官网</a></p>
 <img src="/post/83278669/pic03.jpg" class="">
<p><i class="fa fa-check-square-o fa-lg"></i>  完全免费！</p>
<p><i class="fa fa-check-square-o fa-lg"></i>  体积极小，Windows端只需要1.9mb</p>
<p><i class="fa fa-check-square-o fa-lg"></i>  多平台支持（Windows、macOS、linux、FreeBSD、Android、iOS、Raspberry PI）</p>
<p><i class="fa fa-check-square-o fa-lg"></i>  性能优良、串流速度快</p>
<p><i class="fa fa-times fa-lg"></i> 缺少一些高级功能</p>
<h2 id="其他一些类似软件"><a href="#其他一些类似软件" class="headerlink" title="其他一些类似软件"></a>其他一些类似软件</h2><ul>
<li>TeamViewer</li>
<li>向日葵</li>
</ul>
]]></content>
      <categories>
        <category>软件</category>
        <category>安利</category>
      </categories>
      <tags>
        <tag>软件</tag>
        <tag>安利</tag>
        <tag>APP</tag>
        <tag>手机</tag>
        <tag>平板</tag>
        <tag>电脑</tag>
      </tags>
  </entry>
  <entry>
    <title>Android 手机通过 SSH 方式连接云服务器</title>
    <url>/post/83d18952.html</url>
    <content><![CDATA[<p>身边没有电脑，只有手机，但又想远程连接服务器进行操作和文件传输，该怎么办呢？</p>
<p>其实，一些 app 能让你的手机立刻变成一个 linux 终端。</p>
<a id="more"></a>
<h2 id="所用的APP"><a href="#所用的APP" class="headerlink" title=" 所用的APP"></a><i class="fa fa-mobile  fa-lg"></i> 所用的APP</h2> <img src="/post/83d18952/pic01.png" class="">
<p><a href="https://www.coolapk.com/apk/com.termux"><strong>Termux</strong></a></p>
<p><i class="fa fa-check-square-o fa-lg"></i> 体积小</p>
<p><i class="fa fa-check-square-o fa-lg"></i> 内置了一个虚拟键盘，可以模拟ESC，CTRL等键盘操作</p>
<p><i class="fa fa-check-square-o fa-lg"></i> 支持bash和zsh</p>
<p><i class="fa fa-check-square-o fa-lg"></i> 支持nano和vim</p>
<p><i class="fa fa-check-square-o fa-lg"></i> 支持多 Session</p>
<p><i class="fa fa-check-square-o fa-lg"></i> More…</p>
<h2 id="连接服务器"><a href="#连接服务器" class="headerlink" title=" 连接服务器"></a><i class="fa fa-server  fa-lg"></i> 连接服务器</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh &lt;user name&gt;@&lt;ip address&gt; -p &lt;port&gt;</span><br></pre></td></tr></table></figure>
<p>第一次使用可能要求你安装 ssh 服务。</p>
<p>端口号是必须指定才能连接的，一般 ssh 用的端口是 22。</p>
<p>之后会要求你输入密码，输完密码就进入了云服务器的终端。</p>
<h2 id="下载文件"><a href="#下载文件" class="headerlink" title=" 下载文件"></a><i class="fa fa-download  fa-lg"></i> 下载文件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scp -r &lt;user name&gt;@&lt;ip address&gt;:&lt;file path&gt; &lt;local download path&gt;</span><br></pre></td></tr></table></figure>
<p>例如：scp -r <a href="mailto:root@192.168.1.1">root@192.168.1.1</a>:/root/qrcode.png /storage/emulated/0/download/</p>
<p>一般 <code>/storage/emulated/0</code> 就是你本地存储空间的根目录。</p>
<h2 id="说好的虚拟键盘"><a href="#说好的虚拟键盘" class="headerlink" title=" 说好的虚拟键盘"></a><i class="fa fa-question fa-lg"></i> 说好的虚拟键盘</h2> <img src="/post/83d18952/pic02.jpg" class="">
<p>在左边界往右滑动可唤出侧边栏，接着长按 KEYBOARD 按钮就可以了。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Android</tag>
        <tag>SSH</tag>
        <tag>云服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>项目文档：舰C主题的QQ机器人（ QQ Bot Kancolle）</title>
    <url>/post/61989d5e.html</url>
    <content><![CDATA[<p>项目主页：<a href="https://github.com/Ayagikei/Kancolle-QQ-Bot">https://github.com/Ayagikei/Kancolle-QQ-Bot</a></p>
<p>这是基于 <a href="https://github.com/ScienJus/smartqq">ScienJus/smartqq</a> 制作的一个自用的，主题为 <strong>舰队Collection</strong> 机器人。</p>
<hr>
<h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><p><strong>2018/4/25</strong>   以栈的方式重写了TwitterGetter方法，现在可以获取一次更新的多条官推。</p>
<p><strong>2018/4/22</strong>   现在以Maven的方式导入smartqq，重新设计了项目的包结构。</p>
<p><strong>2018/4/21</strong>   增加复读功能（1%几率复读+重复了3次的语句自动复读），官推转发现在可以识别 Img 标签。</p>
<h2 id="现有功能"><a href="#现有功能" class="headerlink" title="现有功能"></a>现有功能</h2><ul>
<li><p>自动聊天回复。</p>
<p>当收到特定消息的时候，机器人会从 3 句台词中自动选择 1 句进行回复。</p>
 <img src="/post/61989d5e/pic1.png" class="">
</li>
<li><p>整点报时功能。</p>
<p>每到整点的时候，机器人都会发送特定报时语音。</p>
 <img src="/post/61989d5e/pic3.png" class="">
<a id="more"></a>
</li>
<li><p>简单的查询 Kancolle 日常特殊日期任务</p>
 <img src="/post/61989d5e/pic4.png" class="">
</li>
<li><p>能自动从<a href="https://t.kcwiki.moe/">kcwiki官推转发</a>转发新的官推，也可以手动查询最新的官推</p>
 <img src="/post/61989d5e/pic2.png" class="">
</li>
<li><p>内置的一个Roll程序，使用方法是发送群信息包含”Roll”、”欧根”以及一个或多个数字。</p>
 <img src="/post/61989d5e/pic5.png" class="">
</li>
<li><p>Cosplay 功能，现在你不修改代码就能更改机器人的台词，并且支持扩展。</p>
 <img src="/post/61989d5e/pic6.png" class="">
 <img src="/post/61989d5e/pic7.png" class="">
 <img src="/post/61989d5e/pic8.png" class="">
</li>
<li><p>复读功能，任意语句（不包含&lt;称呼&gt;）1%几率复读，或者重复了3次的语句自动复读。</p>
</li>
</ul>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>配置好MAVEN环境后，Clone该项目，以Application.java为运行入口运行，使用一个 QQ 小号登陆即可。</p>
<p>或者下载已经编译好的 jar 文件，使用 <code>java -jar smartqq.jar</code> 指令运行。</p>
<h2 id="机器人指令"><a href="#机器人指令" class="headerlink" title="机器人指令"></a>机器人指令</h2><h3 id="群聊"><a href="#群聊" class="headerlink" title="群聊"></a>群聊</h3><p>以下指令只需要在一句话中包含这几个关键字即可，并且英文关键字忽视大小写。</p>
<ul>
<li>查询特殊指令任务：<code>&lt;称呼&gt; + 任务</code></li>
<li>查询最新官推：<code>&lt;称呼&gt; + 官推</code></li>
<li>Roll 点数：<code>&lt;称呼&gt; + roll + 一个或多个数字</code></li>
<li>查询 Cosplay 列表：<code>&lt;称呼&gt; + cosplay列表</code></li>
<li>Cosplay 角色：<code>&lt;称呼&gt; + cosplay + 角色数字</code></li>
</ul>
<h3 id="私聊"><a href="#私聊" class="headerlink" title="私聊"></a>私聊</h3><ul>
<li>刷新群列表：<code>刷新群列表</code></li>
<li>刷新xml文件解析：<code>xml</code></li>
<li>查询 Cosplay 列表：<code>cosplay列表</code></li>
<li>Cosplay 角色：<code>cosplay + 角色数字</code></li>
</ul>
<h2 id="自定义角色"><a href="#自定义角色" class="headerlink" title="自定义角色"></a>自定义角色</h2><p>在项目根目录找到 <code>stringKancolle.xml</code>文件，打开。</p>
<p>​     </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">kancolle</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">role</span>&gt;</span>001<span class="tag">&lt;/<span class="name">role</span>&gt;</span> <span class="comment">&lt;!-- 默认角色的代号 --&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">character</span> <span class="attr">id</span>=<span class="string">&quot;001&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Prinz Eugen&quot;</span>&gt;</span> <span class="comment">&lt;!-- 角色代号以及名称 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">at</span>&gt;</span>欧根<span class="tag">&lt;/<span class="name">at</span>&gt;</span> <span class="comment">&lt;!-- 两个称呼 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">at2</span>&gt;</span>老婆<span class="tag">&lt;/<span class="name">at2</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">call1</span>&gt;</span>Einen schönen Tag.<span class="tag">&lt;/<span class="name">call1</span>&gt;</span> <span class="comment">&lt;!-- 三种回复 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">call2</span>&gt;</span>哇，吓了我一跳！…啊是！出击！<span class="tag">&lt;/<span class="name">call2</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">call3</span>&gt;</span>提督！莱茵演习吗！…啊什么啊不是啊…没关系，我会加油的！交给我吧！<span class="tag">&lt;/<span class="name">call3</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">inf</span>&gt;</span>舰队的情报啊，嗯，稍等哦，哦，哦哦，原来如此呐～ <span class="tag">&lt;/<span class="name">inf</span>&gt;</span> <span class="comment">&lt;!-- 获取官推的回复 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">flush</span>&gt;</span>提督~成功刷新了。<span class="tag">&lt;/<span class="name">flush</span>&gt;</span></span><br><span class="line">     </span><br><span class="line">     <span class="comment">&lt;!-- 角色的报时 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time0</span>&gt;</span>哇哇！？正好0点啦！今天是我欧根亲王担任报时娘的角色呢。好，明白啦！交给我吧！<span class="tag">&lt;/<span class="name">time0</span>&gt;</span>         </span><br><span class="line">     <span class="tag">&lt;<span class="name">time1</span>&gt;</span>凌晨1点到啦！以这样的元气的感觉来说吗？啊，是吗，太好啦！<span class="tag">&lt;/<span class="name">time1</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time2</span>&gt;</span>凌晨2点。这个国家称此时为“ushi…mitsu…doki”…吗？啊，总觉得这个短语的发音好有趣呢。<span class="tag">&lt;/<span class="name">time2</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time3</span>&gt;</span>哇，吓了我一跳。啊，很在意我这个发型吗？啊啊，已经凌晨3点啦！<span class="tag">&lt;/<span class="name">time3</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time4</span>&gt;</span>嗯嗯～～，凌晨4点了，嗯嗯～～不管怎么说是有些困了…但是，没关系的！<span class="tag">&lt;/<span class="name">time4</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time5</span>&gt;</span>5点到啦！早上好，好舒服的早晨呢！加油干吧！<span class="tag">&lt;/<span class="name">time5</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time6</span>&gt;</span>6点了呢。该吃早饭了啊…诶，我来做？明，明白了，交给我吧！嗯，做什么吃呢。俾斯麦姐姐的一份也要做吧，对吧♪～<span class="tag">&lt;/<span class="name">time6</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time7</span>&gt;</span>好，今天的早饭是面包。奶酪和香肠哦。还有沙拉和…当然，热乎乎的咖啡啦！/r/n 虽然普通但是很美味吧♪～啊，现在正好7点整。<span class="tag">&lt;/<span class="name">time7</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time8</span>&gt;</span>8点啦。来吧，Admiral先生，开始今天的作战吧！从演习开始？还是说远征？<span class="tag">&lt;/<span class="name">time8</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time9</span>&gt;</span>早上9点了。嗯？啊，是长门啊！喂♪～长～门♪～…嗯？在哪儿遇见的？那当然是～\r\n …嗯…诶？在，在哪儿来着…<span class="tag">&lt;/<span class="name">time9</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time10</span>&gt;</span>10点了。战列舰？没问题！和俾斯麦姐姐在一起的话，完～全不用全力就能击沉呢！交给我吧♪～<span class="tag">&lt;/<span class="name">time10</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time11</span>&gt;</span>午前11点啦♪～差不多该吃午饭了呢。今天的话，在外面吃也挺好的呢。<span class="tag">&lt;/<span class="name">time11</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time12</span>&gt;</span>啊啊，已经中午了！正午了呢！午饭的话，在外面吃吃奶酪加面包也不错吧？心情好的话啤酒也来一发吗♪～啊，不行啊…<span class="tag">&lt;/<span class="name">time12</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time13</span>&gt;</span>13点了。午后作战开始了呢、加油干吧！<span class="tag">&lt;/<span class="name">time13</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time14</span>&gt;</span>14点了。诶，什么什么，酒匂？啊啊，我知道，那只可爱的轻巡吧。<span class="tag">&lt;/<span class="name">time14</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time15</span>&gt;</span>15点了。啊，这个吗？是的，这是“瑟布鲁斯”行动作战时的舰装。怎么样，合适我吧♪～<span class="tag">&lt;/<span class="name">time15</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time16</span>&gt;</span>16点了。哇，吓我一跳，是俾斯麦姐姐♪～我们一起出击吧！嗯，一定哦！<span class="tag">&lt;/<span class="name">time16</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time17</span>&gt;</span>17点了。到黄昏了呢。差不多，今天的太阳也要落下了呢。…哇，漂亮的天空…啊啊，当然俾斯麦姐姐才是最漂亮的♪～<span class="tag">&lt;/<span class="name">time17</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time18</span>&gt;</span>18点了。我去准备晚饭了。今天吃生冷食品怎么样？诶，不要？温热的食物比较好？<span class="tag">&lt;/<span class="name">time18</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time19</span>&gt;</span>19点了。那么，晚饭我试着做了德国猪肘子加浓汤。汤里透出的味道不错吧？\r\n 最后，在其中加入米饭如同杂烩一样非常美味哦♪～<span class="tag">&lt;/<span class="name">time19</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time20</span>&gt;</span>20点到了。日本的重巡们也过的非常的充实呢。嗯嗯，嗯～原来如此…嗯、嗯…<span class="tag">&lt;/<span class="name">time20</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time21</span>&gt;</span>21点了。诶，我有什么拿手好戏？嗯，让我想想，曾经，我用舰炮好好的教训了一群蜂拥而至的坦克。这个我出人意料的很在行呢！对！<span class="tag">&lt;/<span class="name">time21</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time22</span>&gt;</span>完全已经是晚上了呢，22点了。Admiral先生，今天一天的作战真是辛苦您了！<span class="tag">&lt;/<span class="name">time22</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">time23</span>&gt;</span>23点了。嗯～～差不多我也要去休息了呢…晚安…诶，不行吗？<span class="tag">&lt;/<span class="name">time23</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">quest1</span>&gt;</span>Guten Morgen! 提督，今天有5补给舰任务。<span class="tag">&lt;/<span class="name">quest1</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">quest2</span>&gt;</span>Guten Morgen! 提督，今天有3空母任务。<span class="tag">&lt;/<span class="name">quest2</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">quest3</span>&gt;</span>Guten Morgen! 提督，今天没有日期尾数特殊任务。<span class="tag">&lt;/<span class="name">quest3</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">roll</span>&gt;</span>提督，你输入的数字有不在范围内的。（1~100）<span class="tag">&lt;/<span class="name">roll</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">character</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"> <span class="tag">&lt;/<span class="name">kancolle</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>每个 character 部分为一个角色的所有台词，所以增加角色只需要类似的在最后的一个 <code>&lt;/character&gt;</code> 和 </kancolle> 中插入新的角色即可。</p>
<blockquote>
<p>注意：机器人回复的语句也在自己的检查范围内，尽量不要在回复的语句中加入自己的&lt;称呼&gt;</p>
</blockquote>
<h2 id="需要的改进"><a href="#需要的改进" class="headerlink" title="需要的改进"></a>需要的改进</h2><ul>
<li>更多的功能实现</li>
<li>单元测试</li>
<li>二维码直接在控制台输出</li>
<li>网页后台，可供服务器使用</li>
<li>特殊命令加入密码限制</li>
<li>xml优化</li>
</ul>
<h2 id="部分实现"><a href="#部分实现" class="headerlink" title="部分实现"></a>部分实现</h2><p>XML解析：<code>dom4j</code></p>
<p>报时：<code>Quartz</code></p>
]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>项目</tag>
        <tag>QQ机器人</tag>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>Quartz的简单介绍与实例应用：整点报时</title>
    <url>/post/5dc888ab.html</url>
    <content><![CDATA[<p>自己弄的一个 QQ 机器人有一个整点报时的功能，当时使用了非常简陋的方法实现。想要重写的时候，发现了一款非常好用的任务调度框架：<strong>Quartz</strong>。</p>
<p>简单的说，你可以使用 <strong>Quartz</strong> 轻易地实现类似以下功能：</p>
<ul>
<li><p>每隔一段时间执行</p>
</li>
<li><p>每天的特定时间点执行</p>
</li>
<li><p>每月的特定某天的时间点执行</p>
</li>
<li><p>每周几执行</p>
<p>​</p>
</li>
</ul>
<p>而且你只需要编写一条表达式就可以按照你设定的日历触发你指定的任务。</p>
<a id="more"></a>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="http://www.quartz-scheduler.org/">官网</a></p>
<ul>
<li>可以选择下载 jar 包导入项目</li>
<li>或是添加以下 Maven 依赖</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz-jobs<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>   </span><br></pre></td></tr></table></figure>
<h2 id="实现任务类"><a href="#实现任务类" class="headerlink" title="实现任务类"></a>实现任务类</h2><p>Quartz 执行的任务必须是实现了 <strong>org.quartz.Job</strong>接口的类，该接口只有唯一一个方法 execute(JobExecutionContext arg0) throws JobExecutionException 需要实现。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.quartz.Job;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionContext;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">myJob</span> <span class="keyword">implements</span> <span class="title">Job</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(JobExecutionContext arg0)</span> <span class="keyword">throws</span> JobExecutionException </span>&#123;</span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">        System.out.println(sdf.format(<span class="keyword">new</span> Date()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="创建并执行任务调度"><a href="#创建并执行任务调度" class="headerlink" title="创建并执行任务调度"></a>创建并执行任务调度</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.quartz.CronScheduleBuilder.cronSchedule;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.quartz.JobBuilder.newJob;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.quartz.TriggerBuilder.newTrigger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.quartz.CronTrigger;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobDetail;</span><br><span class="line"><span class="keyword">import</span> org.quartz.Scheduler;</span><br><span class="line"><span class="keyword">import</span> org.quartz.SchedulerFactory;</span><br><span class="line"><span class="keyword">import</span> org.quartz.impl.StdSchedulerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">go</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">   </span><br><span class="line">      <span class="comment">// 首先，从 SchedulerFactory 中取得一个 Scheduler 的引用</span></span><br><span class="line">      SchedulerFactory sf = <span class="keyword">new</span> StdSchedulerFactory();</span><br><span class="line">      Scheduler sched = sf.getScheduler();</span><br><span class="line">      <span class="comment">//jobs可以在scheduled的sched.start()方法前被调用</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//将 job 通过 Jobdetail 传给 Scheduler</span></span><br><span class="line">      JobDetail job = newJob(HourChimeJob.class)</span><br><span class="line">          .withIdentity(<span class="string">&quot;job1&quot;</span>, <span class="string">&quot;group1&quot;</span>)</span><br><span class="line">          .build();</span><br><span class="line">          </span><br><span class="line">      <span class="comment">//设置触发方式 这里用到的是 cron 表达式</span></span><br><span class="line">      CronTrigger trigger = newTrigger()</span><br><span class="line">          .withIdentity(<span class="string">&quot;trigger1&quot;</span>, <span class="string">&quot;group1&quot;</span>)</span><br><span class="line">          .withSchedule(cronSchedule(<span class="string">&quot;0 * * * * ?&quot;</span>))</span><br><span class="line">          .build();</span><br><span class="line">       </span><br><span class="line">      Date ft = sched.scheduleJob(job, trigger);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 计时器开始</span></span><br><span class="line">      sched.start();</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">      Test test = <span class="keyword">new</span> Test();</span><br><span class="line">      test.go();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行你会发现，控制台每一分钟整秒的时候会打印出一次时间。</p>
<p>你可以直接猜到这是由 <code>(cronSchedule(&quot;0 * * * * ?&quot;)</code> 实现的。</p>
<p>没错，这就是 Cron 表达式。</p>
<p><br /></p>
<h2 id="Cron-表达式"><a href="#Cron-表达式" class="headerlink" title="Cron 表达式"></a>Cron 表达式</h2><p>Cron 表达式包含着由空格分开的多个子表达式。</p>
<p>从左到右分别代表的是 <code>Seconds（秒） Minutes（分） Hours（时） Day-of-Month（日） Month （月） Day-of-Week（周几） Year（年，可选）</code></p>
<p>并且表达式允许使用一些特殊符号指代一些特殊含义。</p>
<table>
<thead>
<tr>
<th>字段名</th>
<th>允许数值</th>
<th>允许的符号</th>
</tr>
</thead>
<tbody>
<tr>
<td>Seconds（秒）</td>
<td>0-59</td>
<td>, - * /</td>
</tr>
<tr>
<td>Minutes（分）</td>
<td>0-59</td>
<td>, - * /</td>
</tr>
<tr>
<td>Hours（时）</td>
<td>0-23</td>
<td>, - * /</td>
</tr>
<tr>
<td>Day-of-Month（日）</td>
<td>1-31</td>
<td>, - * ? / L W C</td>
</tr>
<tr>
<td>Month （月）</td>
<td>1-12 或者 JAN-DEC</td>
<td>, - * /</td>
</tr>
<tr>
<td>Day-of-Week（周几）</td>
<td>1-7 或者 SUN-SAT</td>
<td>, - * ? / L C #</td>
</tr>
<tr>
<td>Year（年，可选）</td>
<td>空 或者 1970-2099</td>
<td>, - * /</td>
</tr>
</tbody>
</table>
<p><strong>特殊符号的含义：</strong></p>
<ul>
<li>“?”字符：表示不确定的值</li>
<li>“,”字符：指定数个值</li>
<li>“-”字符：指定一个值的范围</li>
<li>“/”字符：指定一个值的增加幅度。n/m表示从n开始，每次增加m。</li>
<li>“L”字符：用在日表示一个月中的最后一天，用在周表示该月最后一个星期X。</li>
<li>“W”字符：指定离给定日期最近的工作日（周一到周五）</li>
<li>“#”字符：表示该月第几个周X。6#3表示该月第3个周五</li>
</ul>
<p><br /></p>
<h2 id="整点报时"><a href="#整点报时" class="headerlink" title="整点报时"></a>整点报时</h2><p>由上易知，整点报时只需要将 <strong>Cron 表达式</strong>改成 <code>&quot;0 0 * * * ?&quot;</code> ，即只在0分0秒的时候触发执行任务类，也就是整点了。</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ol>
<li><a href="http://www.cnblogs.com/sunjie9606/archive/2012/03/15/2397626.html">http://www.cnblogs.com/sunjie9606/archive/2012/03/15/2397626.html</a></li>
<li><a href="https://www.cnblogs.com/monian/p/3822980.html">https://www.cnblogs.com/monian/p/3822980.html</a></li>
<li><a href="http://blog.csdn.net/u010648555/article/details/54863394">http://blog.csdn.net/u010648555/article/details/54863394</a></li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>Quartz</tag>
        <tag>实例</tag>
        <tag>Java</tag>
        <tag>框架</tag>
      </tags>
  </entry>
  <entry>
    <title>Steam 夏日特惠？不，是夏日&quot;海豹&quot;。</title>
    <url>/post/d16687dc.html</url>
    <content><![CDATA[<p><img src="/post//d16687dc/header.jpg" class="full-image" /></p>
<blockquote>
<p>本文首发于我的<a href="https://zhuanlan.zhihu.com/p/24984075">知乎专栏</a>「<a href="https://zhuanlan.zhihu.com/Dantarian">丹特利安的书架</a>」。</p>
<p>亦授权了<a href="http://api.xiaoheihe.cn/maxnews/app/share/detail/12072">小黑盒平台的转载</a>。</p>
</blockquote>
<p>其实 <strong>“海豹”</strong> 指的就是<strong>“特惠”、”特卖”</strong>。</p>
<p><br /></p>
<p>至于为什么要这么叫，</p>
<p>事情发生在2011年，Steam贴吧的一位吧友，在Steam官方论坛的一个讨论帖子里，本想询问夏日特惠开始的时间，却手抖把 <strong>SALE （折扣，特惠）</strong>打成了 <strong>SEAL （海豹）。</strong></p>
<p><br /></p>
<p>于是就有了：</p>
 <img src="/post/d16687dc/1.jpg" class="">
<blockquote>
<p><strong>夏日海豹，会马上开始吗？</strong> <strong>谁知道确切时间？</strong></p>
</blockquote>
<a id="more"></a>
<p><br /></p>
<p>然后这个笔（shou）误戳中了外国人的笑点，</p>
<p>出现了以下各种回复：</p>
 <img src="/post/d16687dc/2.jpg" class="">
<blockquote>
<p><strong>*我希望它能把一个球平衡放在它的鼻子上！*</strong></p>
</blockquote>
 <img src="/post/d16687dc/3.jpg" class="">
<blockquote>
<p><strong>我会等待冬季海象的到来。</strong></p>
</blockquote>
 <img src="/post/d16687dc/4.jpg" class="">
<blockquote>
<p><strong>他们有教海豹新把戏吗(⊙_⊙)?</strong></p>
</blockquote>
 <img src="/post/d16687dc/5.jpg" class="">
<blockquote>
<p><strong>喂海豹一些鱼，它会更听话。</strong></p>
</blockquote>
 <img src="/post/d16687dc/6.jpg" class="">
<blockquote>
<p><strong>它最好在冬熊抓到它之前到来。:-P</strong></p>
</blockquote>
 <img src="/post/d16687dc/7.jpg" class="">
<blockquote>
<p><strong>我很好奇海豹会不会唱《A Kiss from a Rose》？（同名歌手梗）</strong></p>
</blockquote>
 <img src="/post/d16687dc/8.jpg" class="">
<blockquote>
<p><strong>几个星期前，我去了动物园，那里有海豹。但是那时候是春天。所以没有夏日海豹。</strong></p>
</blockquote>
 <img src="/post/d16687dc/9.jpg" class="">
<blockquote>
<p><strong>我不想要夏日海豹，我想要夏日白海狮！(＾－＾)V （Pokemon梗）</strong></p>
</blockquote>
<p>后续还有各种有意思的回复，并且“夏日海豹”的说法在国内Steam圈内流行了两三年。</p>
<p>但是故事并没有这样结束，Valve员工也注意到这个事件。</p>
<p>于是，海豹，真的海豹，在<strong>夏日特惠</strong>的数张宣传图片中出现。</p>
<p>而且那一年的万圣节活动，所有 <strong>军团要塞2</strong> 玩家都收到了一份小礼物：</p>
 <img src="/post/d16687dc/10.jpg" class="">
<p>是的，一个<strong>海豹面具</strong>。</p>
<p><br/></p>
<p>那一年的万圣节特卖，也能在宣传图片中，看到一个 Steam 的吉祥物戴着这个海报面具。</p>
<p>甚至Valve还推出了海豹 T-shirt ：</p>
 <img src="/post/d16687dc/11.jpg" class="">
<p>看到文末的诸位，祝你们下次特惠…哦不，海豹剁手愉快~</p>
<blockquote>
<p>附：</p>
<ul>
<li><a href="http://forums.steampowered.com/forums/showthread.php?p=23075473#post23075473">官方论坛帖子链接</a></li>
<li><a href="https://wiki.teamfortress.com/wiki/Seal_Mask">夏日海豹面具Wiki页面</a></li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>游戏</category>
        <category>文化</category>
      </categories>
      <tags>
        <tag>游戏</tag>
        <tag>游戏文化</tag>
        <tag>知乎专栏</tag>
        <tag>Steam</tag>
      </tags>
  </entry>
  <entry>
    <title>玩法的再演绎（1）：那些现象级游戏的前身</title>
    <url>/post/30824299.html</url>
    <content><![CDATA[<blockquote>
<p>本文首发于我的<a href="https://zhuanlan.zhihu.com/p/22116153">知乎专栏</a>「<a href="https://zhuanlan.zhihu.com/Dantarian">丹特利安的书架</a>」。</p>
</blockquote>
<p><img src="/post/30824299/header.jpg" class="full-image" /></p>
<p>这篇文章将谈谈<strong>三对</strong>核心玩法十分相近的游戏。</p>
<p>因核心玩法与其他游戏相似，不少游戏，甚至一部分热门游戏都陷入了”到底是<strong>致敬模仿</strong>还是<strong>无耻抄袭</strong>“的争论之中。</p>
<p>但是，一款游戏的开发，或有意识、或无意识地受到他方的影响。到底是<strong>“致敬”</strong>还是<strong>“模仿”</strong>的判断点不应局限在一处。单纯的核心玩法相同，但别有创新之作，不应被列入<strong>“抄袭”</strong>。</p>
<a id="more"></a>
<p>好了，不偏题了~。现在来介绍一些<strong>现象级</strong>（或者<strong>稍微比较知名的</strong>）游戏的<strong>前身：</strong></p>
<p><br /></p>
<h2 id="▊「Angry-Birds」与-「Crush-the-Castle」"><a href="#▊「Angry-Birds」与-「Crush-the-Castle」" class="headerlink" title="▊「Angry Birds」与 「Crush the Castle」"></a><u><strong>▊「Angry Birds」与 「Crush the Castle」</strong></u></h2><img src="/post/30824299/art02_01.png" class="">
<p>  《愤怒的小鸟 Angry Birds》一经发布就成为一大现象级作品，名声大噪之后又发布了许多衍生物。它的前身可谓是各种弹弓小游戏。这里着重介绍一款内容比较完善、玩法非常相似的 Flash 游戏《摧毁城堡 Crush the Castle》。</p>
<p>  这两款游戏的<strong>玩法</strong>都是利用抛掷物和物理作用压死所有的敌人，并且随着游戏的进行，解锁不同的抛掷物。</p>
<p><br /></p>
<p><strong>一些不同点：</strong></p>
<blockquote>
<ul>
<li>操作方式上，《愤怒的小鸟》是拖拽松手，而《摧毁城堡》是一次点击启动投石车，另一次单击释放石头（或其他奇怪的东西）。</li>
<li>画风上，《愤怒的小鸟》轻快可爱，而《摧毁城堡》是略为写实的中世纪场景。</li>
<li>《愤怒的小鸟》中的不同小鸟具有不同的特殊能力，能在投掷后释放，这增添了游戏的可操作性。</li>
<li>《摧毁城堡》第二作内置关卡编辑器。</li>
</ul>
</blockquote>
<p><br /></p>
<p>  我个人认为，本身就契合触摸操控的游戏玩法、轻松可爱的画面风格以及大气爽快的分数显示，是促成《愤怒的小鸟》成功的要义。《愤怒的小鸟》的游戏模式并不新奇，但其能把这种游戏模式包裹在一个合适的外壳内，并加入一些创新设计，就已经是一种成功了。同样，拥有相同或相似游戏玩法的游戏，并非没有游玩的价值。发掘特色之处，说不定你会爱上另一款作品。</p>
<p><br /></p>
<blockquote>
<p> <em>注1：《愤怒的小鸟》如今是一款多平台游戏，本文讨论的是移动端。</em><br> <em>注2：《摧毁城堡》已经移植到了移动端，本文讨论的是Flash版。</em></p>
</blockquote>
<hr>
<h2 id="▊「Plague-Inc」与-「Pandemic-2」"><a href="#▊「Plague-Inc」与-「Pandemic-2」" class="headerlink" title="▊「Plague Inc」与 「Pandemic 2」"></a><u><strong>▊「Plague Inc」与 「Pandemic 2」</strong></u></h2><img src="/post/30824299/art02_02.png" class="">
<p>  两款游戏的<strong>核心玩法</strong>十分相似：病原体传染获得进化点，利用进化点选择提升病原体的传染性、致命性和严重性（可视性）。并且在疫苗研制成功之前杀死全人类。基本上可以把《瘟疫公司 Plague Inc. 》看做《Pandemic 2》的高清重制版。</p>
<p><br /></p>
<p>当然，《瘟疫公司 Plague Inc 》在《Pandemic 2》的基础上也进行了一些修改：</p>
<blockquote>
<ul>
<li>《瘟疫公司》可以<strong>自己选择</strong>病原体初现的国家或地区，而《 Pandemic 2 》则是<strong>系统随机选择</strong>一个。（于是就出现了下图）</li>
</ul>
<img src="/post/30824299/art02_03.png" class="">
<p>（图出处见右下角水印）</p>
<ul>
<li>《瘟疫公司》需要自己点击地图上出现的气泡获得进化点，而《 Pandemic 2 》是自动获得的。《瘟疫公司》增加了更多的疾病类型，剧情，可进化的症状。</li>
<li>《瘟疫公司》PC版增加了多人模式、内容制作器等等内容。</li>
</ul>
</blockquote>
<p><br /></p>
<p>如今在《瘟疫公司》的Steam社区搜索<strong>“**</strong>Pandemic”<strong> 也能见到一些吐槽称《瘟疫公司》为</strong>高清版**的《Pandemic》的帖子。但是我们不得不承认，正是《瘟疫公司》才让更多的人接触到这种游戏玩法。</p>
<blockquote>
<p><em>注1：</em>《瘟疫公司》开发者曾提到过 “Inspired by <em>Pandemic</em>“ （游戏灵感来自于《Pandemic》）。</p>
</blockquote>
<hr>
<h2 id="▊「This-is-the-only-level-too」与-「That-Level-again」"><a href="#▊「This-is-the-only-level-too」与-「That-Level-again」" class="headerlink" title="▊「This is the only level too」与 「That Level again」"></a><u>▊「This is the only level too」与 「That Level again」</u></h2><img src="/post/30824299/art02_04.png" class="">
<p>  鉴于篇幅问题，第三对游戏，我们就来谈谈一对比较小众的游戏：</p>
<p>  《还是只有这一关 This is the only level too》是一款玩法十分有新意的 Flash 解谜游戏。游戏目的很简单，控制小象到达右边的管道。虽然游戏的每一关都看似一样，但是过关方法都略有差异或千差万别。当然了，每一关都会提供跟过关方式有关的关键词。</p>
<p><br /></p>
<p>  《又是这关 That Level again》的主要玩法跟《还是只有这一关》基本一致。只不过游戏平台从PC端变成了手机端。同时游戏也根据手机的性质（触摸屏、重力感应等等）设置了一些新的通关方式。这也降低了这两款游戏的体验重叠程度。</p>
<p><br /></p>
<p>  即便你已经玩通了《还是只有这一关》，玩《又是这关》也会是一场全新的游戏体验，也同样会使你抓耳挠腮。</p>
<hr>
<h2 id="▊「后记」"><a href="#▊「后记」" class="headerlink" title="▊「后记」"></a><u>▊「后记」</u></h2><p>这是我第一篇发布在知乎专栏上的文章。</p>
<p>题图用的是一个叫做Collageit的软件拼接而成，个人觉得还是很好看的XD。</p>
<p>最终文章受到的关注量虽不多，但收到了知友的赞赏，还吸引到了一些网站相关工作人员的目标，颇为受宠若惊。</p>
<img src="/post/30824299/art02_05.png" class="">
<p>也是后面几篇专栏文章的重要动力来源 :) </p>
<p>（虽然更新不是一般的慢._.） </p>
]]></content>
      <categories>
        <category>游戏</category>
        <category>文化</category>
      </categories>
      <tags>
        <tag>游戏</tag>
        <tag>游戏文化</tag>
        <tag>知乎专栏</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows下配置hexo实现个人博客</title>
    <url>/post/49d119d7.html</url>
    <content><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>很久以前自己就想要一个自己的博客，来保存自己写过的杂七杂八的文章。偶然间听说用hexo搭建个人博客很简便，就查询了一波资料搭建出了这个网站。<br>第一篇文章就献给hexo的搭建过程吧~</p>
<p>本文将包括以下部分内容：</p>
<ul>
<li>所需环境的安装和配置（Git，Node.js）</li>
<li>hexo的安装和运行</li>
<li>hexo个性化配置</li>
<li>搭桥Github Pages</li>
<li>绑定个人域名</li>
<li>部署优化</li>
<li>开写吧</li>
</ul>
<a id="more"></a>
<hr>
<h2 id="2-所需环境的安装和配置"><a href="#2-所需环境的安装和配置" class="headerlink" title="2. 所需环境的安装和配置"></a>2. 所需环境的安装和配置</h2><h3 id="Git的安装"><a href="#Git的安装" class="headerlink" title="Git的安装"></a>Git的安装</h3><ul>
<li><a href="https://git-scm.com/download/win">下载地址</a></li>
<li>安装步骤：如不懂选项可以全程 next</li>
<li>验证：安装完毕后，在任一文件夹空白处右键会多出Git Bash here选项，点开之后输入<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git -v</span><br></pre></td></tr></table></figure>
若出现git version就代表安装成功。</li>
</ul>
<p><br /></p>
<h3 id="Node-js的安装"><a href="#Node-js的安装" class="headerlink" title="Node.js的安装"></a>Node.js的安装</h3><ul>
<li><a href="https://nodejs.org/en/">下载地址</a></li>
<li>安装步骤：同上。注意在 Custom Setup 一步最好勾上 Add to PATH选项。</li>
<li>验证：安装完毕后，在bash中输入<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ node -v</span><br></pre></td></tr></table></figure>
若出现版本号就代表安装成功。</li>
</ul>
<hr>
<h2 id="3-hexo的安装和运行"><a href="#3-hexo的安装和运行" class="headerlink" title="3. hexo的安装和运行"></a>3. hexo的安装和运行</h2><h3 id="正常步骤"><a href="#正常步骤" class="headerlink" title="正常步骤"></a>正常步骤</h3><ol>
<li>打开一个你想存放博客的文件夹，右键Git Bash here。</li>
<li>安装hexo</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>初始化博客（ <folder> 为新建的文件夹名，自行替换）</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>安装服务器模块</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-server --save</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>运行服务器</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server --debug</span><br></pre></td></tr></table></figure>
<ol start="6">
<li>Hello hexo！打开 <a href="http://localhost:4000">http://localhost:4000</a> ，你会发现你的博客已经构建完成了！<br><br /><h3 id="一个坑"><a href="#一个坑" class="headerlink" title="一个坑"></a>一个坑</h3><strong> npm 过程中卡住 </strong><br>由于 npm 的服务器问题，国内连接不稳定。</li>
</ol>
<ul>
<li>可以尝试通过淘宝的镜像服务器解决。<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li>
<li>再或者更换网络，比如使用手机网络。</li>
</ul>
<hr>
<h2 id="4-hexo个性化配置"><a href="#4-hexo个性化配置" class="headerlink" title="4. hexo个性化配置"></a>4. hexo个性化配置</h2><p>看到自己构建好的博客后，是不是很想将博客换成自己想要的名字？<br>如果你不中意默认的主题的话，还可以自己挑选喜欢的主题。<br><br /></p>
<h3 id="简单的个性化配置"><a href="#简单的个性化配置" class="headerlink" title="简单的个性化配置"></a>简单的个性化配置</h3><p>打开博客所在根目录的 _config.yml 文件，我们在此将这个文件叫做 <strong> 站点配置文件 </strong> 。<br>可以看到这么一段<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: #填上你想要的博客名</span><br><span class="line">subtitle: #副标题</span><br><span class="line">description: #描述</span><br><span class="line">keywords:</span><br><span class="line">author: #你的大名</span><br><span class="line">language: #简体中文的话可以在这里填上&quot;zh-CN&quot;</span><br><span class="line">timezone:</span><br></pre></td></tr></table></figure></p>
<p><strong>注意一个坑：  每一行的冒号之后记得加上一个空格，否则会报错。</strong></p>
<p><br /></p>
<h3 id="更换-hexo-主题"><a href="#更换-hexo-主题" class="headerlink" title="更换 hexo 主题"></a>更换 hexo 主题</h3><p>首先你要找到心怡的主题，可以在<a href="https://hexo.io/themes/">这里</a>找。</p>
<p>这里推荐一款叫做 NexT 的极简风格的主题，也是本博客使用的主题：</p>
<p>建议直接查阅 <a href="http://theme-NexT.iissnan.com/getting-started.html">NexT 官网</a> ，安装步骤以及各种自定义步骤十分详细。</p>
<p><strong>注意：</strong> NexT主题的GitHub地址在6.0版本之后迁移到了  <a href="https://github.com/theme-next/hexo-theme-next">https://github.com/theme-next/hexo-theme-next</a> 。<br>一些旧博文里的NexT主题的安装方式可能会让你安装上旧版本的NexT主题。</p>
<p><br /></p>
<h3 id="实现-NexT-主题圆形头像"><a href="#实现-NexT-主题圆形头像" class="headerlink" title="实现 NexT 主题圆形头像"></a>实现 NexT 主题圆形头像</h3><p>在 \themes\NexT\source\css_custom 里的 custom.styl 文件是让我们放入自定义css样式的。<br>我们可能用此文件来实现圆形头像。<br>打开文件并在其中插入<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.site-author-image</span> &#123;</span><br><span class="line">    <span class="comment">/* 头像圆形 */</span></span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">    -webkit-<span class="attribute">border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">    -moz-<span class="attribute">border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: inset <span class="number">0</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">#333</span>sf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="5-搭桥Github-Pages"><a href="#5-搭桥Github-Pages" class="headerlink" title="5. 搭桥Github Pages"></a>5. 搭桥Github Pages</h2><p>在以上方式搭建的服务器只有自己才能访问到，那么如何让其他人也能访问到自己的博客呢？<br>我们将用到Github Pages服务。</p>
<p><strong> Github Pages是什么？ </strong><br>Github Pages 可以托管用户编写的静态网页，还能提供一个域名给用户，更重要的是，还是免费的！<br><br /></p>
<h3 id="SSH-配置"><a href="#SSH-配置" class="headerlink" title="SSH 配置"></a>SSH 配置</h3><ol>
<li><p>首先，你要有一个<a href="https://github.com/">Github账号</a>。</p>
</li>
<li><p>随后，配置本地 git 以 SSH 方式连接 Github。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">&quot;&lt;你的github账号名&gt;&quot;</span></span><br><span class="line">$ git config --global user.email <span class="string">&quot;&lt;你的github邮箱&gt;&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>接下来输入以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>
<p>然后回车三次，之后就会生成两个文件，分别为id_rsa和id_rsa.pub，即密钥id_rsa和公钥 id_rsa.pub 。</p>
</li>
<li><p>在 <a href="https://github.com/settings/keys">https://github.com/settings/keys</a> 中点击 New SSH key，粘贴到刚才生成的 id_rsa.pub 文件其中的内容。</p>
</li>
<li><p>添加完毕后，可以在 Git Bash 里面输入以下命令来测试是否连接成功。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>若显示以下内容就表示你已经<strong>成功</strong>了！</p>
<blockquote>
<p>Hi &lt;你的用户名&gt;! You’ve successfully authenticated , but Github does not provide shell access. </p>
</blockquote>
<p><br /></p>
<h3 id="建立一个-Github-Pages-仓库，并将你的博客上传"><a href="#建立一个-Github-Pages-仓库，并将你的博客上传" class="headerlink" title="建立一个 Github Pages 仓库，并将你的博客上传"></a>建立一个 Github Pages 仓库，并将你的博客上传</h3><ol>
<li><p>在 Github 新建一个名称为 &lt;你的github用户名&gt;.github.io 的仓库。</p>
</li>
<li><p>安装 <a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
</li>
<li><p>打开博客所在根目录的 _config.yml 文件，即 <strong> 站点配置文件 </strong> 。</p>
</li>
<li><p>找到以下段落并修改：</p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">deploy: </span><br><span class="line">  type : git</span><br><span class="line">  repository : git@github.com:&lt;替换成你的用户名&gt;&#x2F;&lt;替换成你的用户名&gt;.github.io.git</span><br><span class="line">  branch : master</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>在博客根目录打开Git Bash，输入<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>执行完命令后，你的博客就已经部署在了Github Pages上了。<br>对应的地址是 &lt;替换成你的用户名&gt;.github.io</p>
<p><strong>现在，所有人都可以通过这个地址访问你的邮箱了！</strong> </p>
<hr>
<h2 id="6-绑定个人域名"><a href="#6-绑定个人域名" class="headerlink" title="6. 绑定个人域名"></a>6. 绑定个人域名</h2><p>但是，如果你想要一个自己设定的域名的话，又该怎么办呢？<br>这里以<a href="https://wanwang.aliyun.com/"> 万网 </a>为例。</p>
<ol>
<li><p>首先，当然是先要购买一个域名啦。在首页查询自己想要的域名，如果没人占用的话就可以买下来了。</p>
<img src="/post/49d119d7/art01_01.png" class="">
</li>
<li><p>其次，对你的域名进行实名认证。此处只需要提供身份证的照片，再等侯一会即可。（几个小时内就能审核完毕）。</p>
</li>
<li><p>然后，如图配置域名解析。</p>
<img src="/post/49d119d7/art01_02.png" class="">
</li>
<li><p>最后，还要在你的本地博客文件夹/Source文件夹内，新建一个无后缀名的叫做CNAME的文件，并在其中写入你的域名。</p>
<img src="/post/49d119d7/art01_05.png" class="">
</li>
<li><p>试试用你的域名访问吧~</p>
</li>
</ol>
<hr>
<h2 id="7-部署步骤优化"><a href="#7-部署步骤优化" class="headerlink" title="7. 部署步骤优化"></a>7. 部署步骤优化</h2><p>以上方式只是将 hexo 生成的静态网页上传到 Github Pages，但是并没有备份源文件。<br>这样对于多部电脑编辑博客是件麻烦事，而且文件没有云备份也不安全。<br>当然，你可以新建一个仓库专门用来保存源文件。但是每次变动要上推两个仓库的变动也不方便。</p>
<p>此处，我们将采用在 Github Pages 的仓库中新建一个分支的方式来保存源文件。</p>
<ol>
<li><p>首先，打开 Github，在你的 Github Pages 仓库中建立一个新分支 hexo。</p>
<img src="/post/49d119d7/art01_03.png" class="">
</li>
<li><p>然后，在设置将 hexo 设为 Default branch。</p>
<img src="/post/49d119d7/art01_04.png" class="">
</li>
<li><p>在本地另找一个文件夹，进入 Git Bash：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> git@github.com:&lt;你的github用户名&gt;/&lt;你的github用户名&gt;.github.io.git</span><br></pre></td></tr></table></figure>
</li>
<li><p>在clone下来的文件夹中删除除了 .git 文件夹之外的其他文件。</p>
</li>
<li><p>将之前的本地博客文件夹里的所有内容复制过来。</p>
</li>
<li><p>进入 Git Bash，你会发现该仓库正处在 hexo 分支状态，输入以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m <span class="string">&quot;初始化hexo分支&quot;</span></span><br><span class="line">$ git push</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>这样一来，你 Github 上的仓库就有两个分支，原本的 master 分支保存静态网页；新的 hexo 分支用来保存源文件。</p>
<p>在这之后部署的话，照常使用以下命令来部署静态文件即可。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p>
<p>然后再使用以下Git命令来上推备份原文件。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m <span class="string">&quot;初始化hexo分支&quot;</span></span><br><span class="line">$ git push</span><br></pre></td></tr></table></figure></p>
<p>同时，你还可以编写一份.sh脚本文件来方便自己的部署和git操作；以下是我的脚本代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Script Starting&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;----Cleaning&quot;</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;----Generating&quot;</span></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -r -p <span class="string">&quot;Do u want to run server to debug? [Y/else] &quot;</span> input</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$input</span> <span class="keyword">in</span></span><br><span class="line">    [yY][eE][sS]|[yY])</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;----Starting server in debug mode&quot;</span></span><br><span class="line">        hexo s --debug</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">    *)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Skip server&quot;</span></span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -r -p <span class="string">&quot;Do u want to Deploying? [Y/else] &quot;</span> input</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$input</span> <span class="keyword">in</span></span><br><span class="line">    [yY][eE][sS]|[yY])</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;----Deploying&quot;</span></span><br><span class="line">        hexo d</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">    *)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Skip deploy...&quot;</span></span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -r -p <span class="string">&quot;Do u want to git push? [Y/else] &quot;</span> input</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$input</span> <span class="keyword">in</span></span><br><span class="line">    [yY][eE][sS]|[yY])</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;----Git Add&quot;</span></span><br><span class="line">        git add .</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;----Git Commit&quot;</span></span><br><span class="line">        git commit -m <span class="string">&quot;Update&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;----Git Push&quot;</span></span><br><span class="line">        git push</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">    *)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Skip git push...&quot;</span></span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;All Finaish!&quot;</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Press any key to exit.&quot;</span> var</span><br></pre></td></tr></table></figure>
<h2 id="8-开写吧！"><a href="#8-开写吧！" class="headerlink" title="8. 开写吧！"></a>8. 开写吧！</h2><h3 id="生成-md-文件"><a href="#生成-md-文件" class="headerlink" title="生成 md 文件"></a>生成 md 文件</h3><p>使用以下命令生成md文件。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;.</span><br></pre></td></tr></table></figure><br>然后再在 <em>source_posts</em> 里找到md文件。<br>可以在头部写入文章的标签以及分类。<br>下面就用正常的 markdown 语法进行编辑即可。</p>
<img src="/post/49d119d7/art01_06.png" class="">
<p><em>注意：</em></p>
<blockquote>
<p>如果 title包含空格的话，需要用引号括起来。</p>
</blockquote>
<p><br /></p>
<h3 id="本地-Markdown-编辑器"><a href="#本地-Markdown-编辑器" class="headerlink" title="本地 Markdown 编辑器"></a>本地 Markdown 编辑器</h3><p>推荐两款：</p>
<ul>
<li><p><a href="https://www.zybuluo.com/mdeditor">Cmd Markdown</a></p>
<p><i class="fa fa-check fa-lg"></i> 多平台，还可以在线使用</p>
<p><i class="fa fa-check fa-lg"></i> 两栏对比，实时同步预览</p>
<p><i class="fa fa-check fa-lg"></i> 编辑器易用</p>
<p><i class="fa fa-check fa-lg"></i> 有云同步</p>
<p><i class="fa fa-times fa-lg"></i> 需要注册使用</p>
<p><i class="fa fa-times fa-lg"></i> 部分功能需要会员</p>
</li>
<li><p><a href="https://www.typora.io/">Typora</a></p>
<p><i class="fa fa-check fa-lg"></i> 多平台</p>
<p><i class="fa fa-check fa-lg"></i> 实时渲染写好的Markdown代码</p>
<p><i class="fa fa-check fa-lg"></i> 编辑器简洁美观</p>
<p><i class="fa fa-check fa-lg"></i> 免费支持多种格式导出</p>
<p><i class="fa fa-times fa-lg"></i> 体积有些庞大</p>
</li>
</ul>
<p><br /></p>
<h3 id="后台管理编辑插件"><a href="#后台管理编辑插件" class="headerlink" title="后台管理编辑插件"></a>后台管理编辑插件</h3><p>有两款实现了WEB UI的后台管理编辑插件可供你选择。<br>这里就不对两者的使用方法做介绍了。</p>
<ul>
<li><a href="https://jaredforsyth.com/hexo-admin/">Hexo Admin</a><img src="/post/49d119d7/art01_07.png" class=""></li>
<li><a href="https://github.com/geekwen/hexo-local-admin">Hexo Local Admin</a><img src="/post/49d119d7/art01_08.jpg" class="">
<br /><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3>强烈建议读读 hexo 的官方文档以及你所用主题的官方文档。<br>就如 hexo 3.x 有一些自定义标签（插入图片），不同于 markdown 的标准语法。这些都是需要你看看官方文档才能得知的。</li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>hexo</tag>
        <tag>NexT</tag>
        <tag>记录</tag>
      </tags>
  </entry>
</search>
